/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/WEBGL/src/BaseObject/Components/Material.ts":
/*!*********************************************************!*\
  !*** ./src/WEBGL/src/BaseObject/Components/Material.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Material\": () => (/* binding */ Material)\n/* harmony export */ });\n/* harmony import */ var _GL_Shader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../GL/Shader */ \"./src/WEBGL/src/BaseObject/GL/Shader.ts\");\n/* harmony import */ var _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../GL/webGlUtil */ \"./src/WEBGL/src/BaseObject/GL/webGlUtil.ts\");\n\r\n\r\nclass Material {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.shader = new _GL_Shader__WEBPACK_IMPORTED_MODULE_0__.DefaultShader(\"Default\");\r\n        this.VERTEX_POSITION = this.shader.getAttributeLocation(\"a_position\");\r\n        this.VERTEX_UV = this.shader.getAttributeLocation(\"a_texCord\");\r\n        this.VERTEX_UV = this.shader.getAttributeLocation(\"a_normal\");\r\n        this.UNIFORM_WORLD = this.shader.getUniformLocation(\"worldMatrix\");\r\n        this.UNIFORM_CAMERA = this.shader.getUniformLocation(\"viewMatrix\");\r\n        this.UNIFORM_PROJECTION = this.shader.getUniformLocation(\"projMatrix\");\r\n    }\r\n    updateUniform_World(matrix) {\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.uniformMatrix4fv(this.UNIFORM_WORLD, false, matrix.values);\r\n    }\r\n    updateUniform_Camera(matrix) {\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.uniformMatrix4fv(this.UNIFORM_CAMERA, false, matrix.values);\r\n    }\r\n    updateUniform_Projection(matrix) {\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.uniformMatrix4fv(this.UNIFORM_PROJECTION, false, matrix.values);\r\n    }\r\n    use() {\r\n        this.shader.use();\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL0Jhc2VPYmplY3QvQ29tcG9uZW50cy9NYXRlcmlhbC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUQ7QUFJaEI7QUFFOUIsTUFBTSxRQUFRO0lBS2pCLFlBQW9CLElBQWE7UUFDN0IsSUFBSSxDQUFDLElBQUksR0FBSyxJQUFJLENBQUM7UUFDbkIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLHFEQUFhLENBQUMsU0FBUyxDQUFDLENBQUM7UUFFM0MsSUFBSSxDQUFDLGVBQWUsR0FBTSxJQUFJLENBQUMsTUFBTSxDQUFDLG9CQUFvQixDQUFNLFlBQVksQ0FBSyxDQUFDO1FBQ2xGLElBQUksQ0FBQyxTQUFTLEdBQVksSUFBSSxDQUFDLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBTSxXQUFXLENBQU0sQ0FBQztRQUNsRixJQUFJLENBQUMsU0FBUyxHQUFZLElBQUksQ0FBQyxNQUFNLENBQUMsb0JBQW9CLENBQU0sVUFBVSxDQUFPLENBQUM7UUFFbEYsSUFBSSxDQUFDLGFBQWEsR0FBUSxJQUFJLENBQUMsTUFBTSxDQUFDLGtCQUFrQixDQUFRLGFBQWEsQ0FBSSxDQUFDO1FBQ2xGLElBQUksQ0FBQyxjQUFjLEdBQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBUSxZQUFZLENBQUssQ0FBQztRQUNsRixJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBUSxZQUFZLENBQUssQ0FBQztJQUN0RixDQUFDO0lBV00sbUJBQW1CLENBQUMsTUFBYTtRQUNwQyw4REFBbUIsQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFRLEtBQUssRUFBRSxNQUFNLENBQUMsTUFBTSxDQUFFLENBQUM7SUFDekUsQ0FBQztJQUVNLG9CQUFvQixDQUFDLE1BQWE7UUFDckMsOERBQW1CLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBTyxLQUFLLEVBQUUsTUFBTSxDQUFDLE1BQU0sQ0FBRyxDQUFDO0lBQzFFLENBQUM7SUFFTSx3QkFBd0IsQ0FBQyxNQUFhO1FBQ3pDLDhEQUFtQixDQUFDLElBQUksQ0FBQyxrQkFBa0IsRUFBRyxLQUFLLEVBQUUsTUFBTSxDQUFDLE1BQU0sQ0FBRyxDQUFDO0lBQzFFLENBQUM7SUFFTSxHQUFHO1FBQ04sSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUN0QixDQUFDO0NBRUoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJnbHdlYnBhY2svLi9zcmMvV0VCR0wvc3JjL0Jhc2VPYmplY3QvQ29tcG9uZW50cy9NYXRlcmlhbC50cz81NjMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNoYWRlciwgRGVmYXVsdFNoYWRlciB9IGZyb20gJy4uL0dML1NoYWRlcic7XHJcbmltcG9ydCB7IHZlYzMgfSBmcm9tICcuLi8uLi9NYXRoL1RTTV9MaWJyYXJ5L3ZlYzMnO1xyXG5pbXBvcnQgeyB2ZWMyIH0gZnJvbSAnLi4vLi4vTWF0aC9UU01fTGlicmFyeS92ZWMyJztcclxuaW1wb3J0IHsgbWF0NCB9IGZyb20gJy4uLy4uL01hdGgvVFNNX0xpYnJhcnkvbWF0NCc7XHJcbmltcG9ydCB7IGdsIH0gZnJvbSAnLi4vR0wvd2ViR2xVdGlsJztcclxuXHJcbmV4cG9ydCBjbGFzcyBNYXRlcmlhbHtcclxuXHJcbiAgICBwdWJsaWMgc2hhZGVyIDogU2hhZGVyO1xyXG4gICAgcHVibGljIG5hbWUgICA6IHN0cmluZzsgIFxyXG5cclxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvciggbmFtZSA6IHN0cmluZyApe1xyXG4gICAgICAgIHRoaXMubmFtZSAgID0gbmFtZTtcclxuICAgICAgICB0aGlzLnNoYWRlciA9IG5ldyBEZWZhdWx0U2hhZGVyKFwiRGVmYXVsdFwiKTtcclxuXHJcbiAgICAgICAgdGhpcy5WRVJURVhfUE9TSVRJT04gICAgPSB0aGlzLnNoYWRlci5nZXRBdHRyaWJ1dGVMb2NhdGlvbiggICAgIFwiYV9wb3NpdGlvblwiICAgICk7XHJcbiAgICAgICAgdGhpcy5WRVJURVhfVVYgICAgICAgICAgPSB0aGlzLnNoYWRlci5nZXRBdHRyaWJ1dGVMb2NhdGlvbiggICAgIFwiYV90ZXhDb3JkXCIgICAgICk7XHJcbiAgICAgICAgdGhpcy5WRVJURVhfVVYgICAgICAgICAgPSB0aGlzLnNoYWRlci5nZXRBdHRyaWJ1dGVMb2NhdGlvbiggICAgIFwiYV9ub3JtYWxcIiAgICAgICk7XHJcblxyXG4gICAgICAgIHRoaXMuVU5JRk9STV9XT1JMRCAgICAgID0gdGhpcy5zaGFkZXIuZ2V0VW5pZm9ybUxvY2F0aW9uKCAgICAgICBcIndvcmxkTWF0cml4XCIgICApO1xyXG4gICAgICAgIHRoaXMuVU5JRk9STV9DQU1FUkEgICAgID0gdGhpcy5zaGFkZXIuZ2V0VW5pZm9ybUxvY2F0aW9uKCAgICAgICBcInZpZXdNYXRyaXhcIiAgICApO1xyXG4gICAgICAgIHRoaXMuVU5JRk9STV9QUk9KRUNUSU9OID0gdGhpcy5zaGFkZXIuZ2V0VW5pZm9ybUxvY2F0aW9uKCAgICAgICBcInByb2pNYXRyaXhcIiAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBWRVJURVhfUE9TSVRJT04gIDogbnVtYmVyO1xyXG4gICAgcHVibGljIFZFUlRFWF9VViAgICAgICAgOiBudW1iZXI7XHJcbiAgICBwdWJsaWMgVkVSVEVYX05PUk1BTCAgICA6IG51bWJlcjtcclxuXHJcbiAgICBwdWJsaWMgVU5JRk9STV9XT1JMRCAgICAgOldlYkdMVW5pZm9ybUxvY2F0aW9uOyAgIFxyXG4gICAgcHVibGljIFVOSUZPUk1fQ0FNRVJBICAgIDpXZWJHTFVuaWZvcm1Mb2NhdGlvbjtcclxuICAgIHB1YmxpYyBVTklGT1JNX1BST0pFQ1RJT046V2ViR0xVbmlmb3JtTG9jYXRpb247XHJcblxyXG4gICAgXHJcbiAgICBwdWJsaWMgdXBkYXRlVW5pZm9ybV9Xb3JsZChtYXRyaXggOiBtYXQ0KXtcclxuICAgICAgICBnbC51bmlmb3JtTWF0cml4NGZ2KHRoaXMuVU5JRk9STV9XT1JMRCAgICAgICwgZmFsc2UsIG1hdHJpeC52YWx1ZXMgKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgcHVibGljIHVwZGF0ZVVuaWZvcm1fQ2FtZXJhKG1hdHJpeCA6IG1hdDQpe1xyXG4gICAgICAgIGdsLnVuaWZvcm1NYXRyaXg0ZnYodGhpcy5VTklGT1JNX0NBTUVSQSAgICAgLCBmYWxzZSwgbWF0cml4LnZhbHVlcyAgKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgcHVibGljIHVwZGF0ZVVuaWZvcm1fUHJvamVjdGlvbihtYXRyaXggOiBtYXQ0KXtcclxuICAgICAgICBnbC51bmlmb3JtTWF0cml4NGZ2KHRoaXMuVU5JRk9STV9QUk9KRUNUSU9OICwgZmFsc2UsIG1hdHJpeC52YWx1ZXMgICk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHVzZSgpOnZvaWR7XHJcbiAgICAgICAgdGhpcy5zaGFkZXIudXNlKCk7XHJcbiAgICB9XHJcblxyXG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/WEBGL/src/BaseObject/Components/Material.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/BaseObject/Components/Mesh.ts":
/*!*****************************************************!*\
  !*** ./src/WEBGL/src/BaseObject/Components/Mesh.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Mesh\": () => (/* binding */ Mesh)\n/* harmony export */ });\n/* harmony import */ var _GL_Buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../GL/Buffer */ \"./src/WEBGL/src/BaseObject/GL/Buffer.ts\");\n/* harmony import */ var _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../GL/webGlUtil */ \"./src/WEBGL/src/BaseObject/GL/webGlUtil.ts\");\n\r\n\r\n\r\nclass Mesh {\r\n    constructor(verticies = null, texCoords = null, faceIndecies = null) {\r\n        this._bufferNames = [];\r\n        this._buffers = {};\r\n        this.hasLoadedShader = false;\r\n        this.verticies = verticies;\r\n        this.texCoords = texCoords;\r\n        this.faceIndecies = faceIndecies;\r\n        this._bufferNames.push(\"uv\");\r\n        this._buffers[\"uv\"] = new _GL_Buffer__WEBPACK_IMPORTED_MODULE_0__.GLBuffer(2, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.FLOAT, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.ARRAY_BUFFER, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.STATIC_DRAW);\r\n        this._bufferNames.push(\"loc\");\r\n        this._buffers[\"loc\"] = new _GL_Buffer__WEBPACK_IMPORTED_MODULE_0__.GLBuffer(3, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.FLOAT, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.ARRAY_BUFFER, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.STATIC_DRAW);\r\n        this._bufferNames.push(\"face\");\r\n        this._buffers[\"face\"] = new _GL_Buffer__WEBPACK_IMPORTED_MODULE_0__.GLBuffer(123, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.UNSIGNED_SHORT, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.ELEMENT_ARRAY_BUFFER, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TRIANGLES);\r\n    }\r\n    loadMaterialLocations(mat) {\r\n        this.hasLoadedShader = true;\r\n        var _location_vertLocation = mat.VERTEX_POSITION;\r\n        var _location_vertUVCoord = mat.VERTEX_UV;\r\n        function AssignBuffer(buffer, data, attr) {\r\n            buffer.bind();\r\n            buffer.addAttribute(attr);\r\n            buffer.pushData(data);\r\n            buffer.upload();\r\n            buffer.unbind();\r\n        }\r\n        let attr;\r\n        // ALL ATTRIBTES THAT HAS ATTRIBUTE DATA \r\n        attr = new _GL_Buffer__WEBPACK_IMPORTED_MODULE_0__.AttributeInfo(_location_vertLocation, 3, 0);\r\n        AssignBuffer(this._buffers[\"loc\"], this.verticies, attr);\r\n        attr = new _GL_Buffer__WEBPACK_IMPORTED_MODULE_0__.AttributeInfo(_location_vertUVCoord, 2, 0);\r\n        AssignBuffer(this._buffers[\"uv\"], this.texCoords, attr);\r\n        // FACE INDICIES DOESNOT HAVE ATTRIBUTE DATA .. WHO KNOWS WHY\r\n        this._buffers[\"face\"].bind();\r\n        this._buffers[\"face\"].pushData(this.faceIndecies);\r\n        this._buffers[\"face\"].upload();\r\n        this._buffers[\"face\"].unbind();\r\n    }\r\n    bind() {\r\n        this._bufferNames.forEach(name => {\r\n            this._buffers[name].bind(false, name);\r\n        });\r\n    }\r\n    draw() {\r\n        if (this.hasLoadedShader)\r\n            this._buffers[\"face\"].draw();\r\n    }\r\n    unbind() {\r\n        this._bufferNames.forEach(name => {\r\n            this._buffers[name].unbind();\r\n        });\r\n    }\r\n    static createTestMesh() {\r\n        return new Mesh([\r\n            -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0,\r\n            -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0,\r\n            1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0,\r\n            1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0,\r\n            1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0,\r\n            -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0\r\n        ], [\r\n            0, 0, 0, 1, 1, 1, 1, 0,\r\n            0, 0, 1, 0, 1, 1, 0, 1,\r\n            1, 1, 0, 1, 0, 0, 1, 0,\r\n            1, 1, 1, 0, 0, 0, 0, 1,\r\n            0, 0, 0, 1, 1, 1, 1, 0,\r\n            1, 1, 1, 0, 0, 0, 0, 1\r\n        ], [\r\n            0, 1, 2, 0, 2, 3,\r\n            5, 4, 6, 6, 4, 7,\r\n            8, 9, 10, 8, 10, 11,\r\n            13, 12, 14, 15, 14, 12,\r\n            16, 17, 18, 16, 18, 19,\r\n            21, 20, 22, 22, 20, 23\r\n        ] /*,[\r\n             0.5,  0.5,  0.5,    0.5,  0.5,  0.5,    0.5,  0.5,  0.5,    0.5,  0.5,  0.5,\r\n             0.75, 0.25, 0.5,    0.75, 0.25, 0.5,    0.75, 0.25, 0.5,    0.75, 0.25, 0.5,\r\n             0.25, 0.25, 0.75,   0.25, 0.25, 0.75,   0.25, 0.25, 0.75,   0.25, 0.25, 0.75,\r\n             0.0,  0.0,  0.15,   1.0,  0.0,  0.15,   1.0,  0.0,  0.15,   1.0,  0.0,  0.15,\r\n             0.0,  1.0,  0.15,   0.0,  1.0,  0.15,   0.0,  1.0,  0.15,   0.0,  1.0,  0.15,\r\n             0.5,  0.5,  1.0,    0.5,  0.5,  1.0,    0.5,  0.5,  1.0,    0.5,  0.5,  1.0\r\n        ]*/);\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEBGL/src/BaseObject/Components/Mesh.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/BaseObject/Components/Texture.ts":
/*!********************************************************!*\
  !*** ./src/WEBGL/src/BaseObject/Components/Texture.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Texture\": () => (/* binding */ Texture),\n/* harmony export */   \"LoadableTexture\": () => (/* binding */ LoadableTexture)\n/* harmony export */ });\n/* harmony import */ var _Loader_FileReuqest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../Loader/FileReuqest */ \"./src/WEBGL/src/Loader/FileReuqest.ts\");\n/* harmony import */ var _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../GL/webGlUtil */ \"./src/WEBGL/src/BaseObject/GL/webGlUtil.ts\");\n\r\n\r\nclass Texture {\r\n    constructor(textureType = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_2D, clampMethod = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.CLAMP_TO_EDGE, filterMethod = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.LINEAR) {\r\n        this._texture = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.createTexture();\r\n        this.isUint = false;\r\n        this._textureType = textureType;\r\n        this._clampMethod = clampMethod;\r\n        this._filtrMethod = filterMethod;\r\n    }\r\n    loadtexture() {\r\n        this.bind();\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.texParameteri(this._textureType, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_WRAP_S, this._clampMethod);\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.texParameteri(this._textureType, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_WRAP_T, this._clampMethod);\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.texParameteri(this._textureType, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_MIN_FILTER, this._filtrMethod);\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.texParameteri(this._textureType, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_MAG_FILTER, this._filtrMethod);\r\n        if (this.isUint) {\r\n            _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.texImage2D(_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_2D, 0, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.RGBA, 1, 1, 0, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.RGBA, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.UNSIGNED_BYTE, this.source);\r\n        }\r\n        else {\r\n            //texImage2D(target: GLenum, level: GLint, internalformat: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\r\n            _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.texImage2D(_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_2D, 0, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.RGBA, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.RGBA, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.UNSIGNED_BYTE, this.source);\r\n        }\r\n    }\r\n    bind() {\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.bindTexture(_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_2D, this._texture);\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.activeTexture(_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE0);\r\n    }\r\n    loadImage(source) {\r\n        this.isUint = false;\r\n        this.source = source;\r\n        this.loadtexture();\r\n    }\r\n    load_uintImage(source) {\r\n        this.isUint = true;\r\n        this.source = source;\r\n        this.loadtexture();\r\n    }\r\n    unBind() {\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.activeTexture(_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE0);\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.bindTexture(this._textureType, null);\r\n    }\r\n}\r\nclass LoadableTexture extends Texture {\r\n    constructor(requestFile, textureType = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_2D, clampMethod = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.CLAMP_TO_EDGE, filterMethod = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.LINEAR) {\r\n        super(textureType, clampMethod, filterMethod);\r\n        this._request = requestFile;\r\n        this.load_uintImage(new Uint8Array([255, 255, 255, 255]));\r\n        this.requestImage();\r\n    }\r\n    reload(requests) {\r\n        this._request = requests;\r\n    }\r\n    onFileRecieved(asset) {\r\n        this.loadImage(asset.data);\r\n    }\r\n    requestImage() {\r\n        var fr = new _Loader_FileReuqest__WEBPACK_IMPORTED_MODULE_0__.FileRequest(this._request, this);\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL0Jhc2VPYmplY3QvQ29tcG9uZW50cy9UZXh0dXJlLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBeUQ7QUFFcEI7QUFFMUIsTUFBTSxPQUFPO0lBT2hCLFlBQ0ksY0FBdUIsd0RBQWEsRUFDcEMsY0FBd0IsMkRBQWdCLEVBQ3hDLGVBQXNCLG9EQUFTO1FBUjNCLGFBQVEsR0FBa0IsMkRBQWdCLEVBQUUsQ0FBQztRQWU3QyxXQUFNLEdBQWEsS0FBSyxDQUFDO1FBTDdCLElBQUksQ0FBQyxZQUFZLEdBQUcsV0FBVyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxZQUFZLEdBQUcsV0FBVyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO0lBQ3JDLENBQUM7SUFJTSxXQUFXO1FBQ2QsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ1osMkRBQWdCLENBQUUsSUFBSSxDQUFDLFlBQVksRUFBRyw0REFBaUIsRUFBTyxJQUFJLENBQUMsWUFBWSxDQUFFLENBQUM7UUFDbEYsMkRBQWdCLENBQUUsSUFBSSxDQUFDLFlBQVksRUFBRyw0REFBaUIsRUFBTyxJQUFJLENBQUMsWUFBWSxDQUFFLENBQUM7UUFDbEYsMkRBQWdCLENBQUUsSUFBSSxDQUFDLFlBQVksRUFBRyxnRUFBcUIsRUFBRyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDakYsMkRBQWdCLENBQUUsSUFBSSxDQUFDLFlBQVksRUFBRyxnRUFBcUIsRUFBRyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDakYsSUFBRyxJQUFJLENBQUMsTUFBTSxFQUFDO1lBQ1gsd0RBQWEsQ0FDVCx3REFBYSxFQUNiLENBQUMsRUFDRCxrREFBTyxFQUNQLENBQUMsRUFDRCxDQUFDLEVBQ0QsQ0FBQyxFQUNELGtEQUFPLEVBQ1AsMkRBQWdCLEVBQ2hCLElBQUksQ0FBQyxNQUFNLENBQ2QsQ0FBQztTQUNMO2FBQUk7WUFDRCw4SEFBOEg7WUFDOUgsd0RBQWEsQ0FDVCx3REFBYSxFQUNiLENBQUMsRUFDRCxrREFBTyxFQUFDLGtEQUFPLEVBQ2YsMkRBQWdCLEVBQ2hCLElBQUksQ0FBQyxNQUFNLENBQ2QsQ0FBQztTQUNMO0lBQ0wsQ0FBQztJQUVNLElBQUk7UUFDUCx5REFBYyxDQUFJLHdEQUFhLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2hELDJEQUFnQixDQUFFLHNEQUFXLENBQUUsQ0FBQztJQUNwQyxDQUFDO0lBRU0sU0FBUyxDQUFDLE1BQXNCO1FBQ25DLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUN2QixDQUFDO0lBRU0sY0FBYyxDQUFDLE1BQWtCO1FBQ3BDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ25CLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUN2QixDQUFDO0lBRU0sTUFBTTtRQUNULDJEQUFnQixDQUFDLHNEQUFXLENBQUMsQ0FBQztRQUM5Qix5REFBYyxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDNUMsQ0FBQztDQUNKO0FBR00sTUFBTSxlQUFnQixTQUFRLE9BQU87SUFJeEMsWUFDSSxXQUFvQixFQUNwQixjQUF1Qix3REFBYSxFQUNwQyxjQUF1QiwyREFBZ0IsRUFDdkMsZUFBdUIsb0RBQVM7UUFFaEMsS0FBSyxDQUFDLFdBQVcsRUFBRSxXQUFXLEVBQUUsWUFBWSxDQUFDO1FBQzdDLElBQUksQ0FBQyxRQUFRLEdBQUcsV0FBVyxDQUFDO1FBQzVCLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxVQUFVLENBQUMsQ0FBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdkQsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3hCLENBQUM7SUFFTSxNQUFNLENBQUMsUUFBUTtRQUNsQixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztJQUM3QixDQUFDO0lBRU0sY0FBYyxDQUFFLEtBQVc7UUFDOUIsSUFBSSxDQUFDLFNBQVMsQ0FBRSxLQUFLLENBQUMsSUFBc0IsQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFFTyxZQUFZO1FBQ2hCLElBQUksRUFBRSxHQUFpQixJQUFJLDREQUFXLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNoRSxDQUFDO0NBRUoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJnbHdlYnBhY2svLi9zcmMvV0VCR0wvc3JjL0Jhc2VPYmplY3QvQ29tcG9uZW50cy9UZXh0dXJlLnRzP2VhOGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRmlsZVJlcXVlc3QgfSBmcm9tIFwiLi8uLi8uLi9Mb2FkZXIvRmlsZVJldXFlc3RcIjtcclxuaW1wb3J0IHsgSUZpbGVSZXF1ZXN0UmVzcG9uc2UgfSBmcm9tIFwiLi8uLi8uLi9Mb2FkZXIvSUZpbGVSZXF1ZXN0UmVzcG9uc2VcIjtcclxuaW1wb3J0IHsgZ2wgfSBmcm9tIFwiLi4vR0wvd2ViR2xVdGlsXCI7XHJcblxyXG4gICAgZXhwb3J0IGNsYXNzIFRleHR1cmV7XHJcblxyXG4gICAgICAgIHByaXZhdGUgX3RleHR1cmUgOiBXZWJHTFRleHR1cmUgPSBnbC5jcmVhdGVUZXh0dXJlKCk7XHJcbiAgICAgICAgcHJpdmF0ZSBfdGV4dHVyZVR5cGUgOiBudW1iZXIgO1xyXG4gICAgICAgIHByaXZhdGUgX2NsYW1wTWV0aG9kIDogbnVtYmVyIDtcclxuICAgICAgICBwcml2YXRlIF9maWx0ck1ldGhvZCA6IG51bWJlciA7XHJcblxyXG4gICAgICAgIHB1YmxpYyBjb25zdHJ1Y3RvcihcclxuICAgICAgICAgICAgdGV4dHVyZVR5cGUgOiBudW1iZXIgPSBnbC5URVhUVVJFXzJELFxyXG4gICAgICAgICAgICBjbGFtcE1ldGhvZCA6IG51bWJlciA9ICBnbC5DTEFNUF9UT19FREdFICxcclxuICAgICAgICAgICAgZmlsdGVyTWV0aG9kOm51bWJlciA9IGdsLkxJTkVBUlxyXG4gICAgICAgICl7XHJcbiAgICAgICAgICAgIHRoaXMuX3RleHR1cmVUeXBlID0gdGV4dHVyZVR5cGU7XHJcbiAgICAgICAgICAgIHRoaXMuX2NsYW1wTWV0aG9kID0gY2xhbXBNZXRob2Q7XHJcbiAgICAgICAgICAgIHRoaXMuX2ZpbHRyTWV0aG9kID0gZmlsdGVyTWV0aG9kO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJpdmF0ZSBpc1VpbnQgOiBib29sZWFuID0gZmFsc2U7XHJcbiAgICAgICAgcHJpdmF0ZSBzb3VyY2UgOiBhbnk7XHJcbiAgICAgICAgcHVibGljIGxvYWR0ZXh0dXJlKCl7XHJcbiAgICAgICAgICAgIHRoaXMuYmluZCgpO1xyXG4gICAgICAgICAgICBnbC50ZXhQYXJhbWV0ZXJpKCB0aGlzLl90ZXh0dXJlVHlwZSAsIGdsLlRFWFRVUkVfV1JBUF9TICAgICAsIHRoaXMuX2NsYW1wTWV0aG9kICk7XHJcbiAgICAgICAgICAgIGdsLnRleFBhcmFtZXRlcmkoIHRoaXMuX3RleHR1cmVUeXBlICwgZ2wuVEVYVFVSRV9XUkFQX1QgICAgICwgdGhpcy5fY2xhbXBNZXRob2QgKTtcclxuICAgICAgICAgICAgZ2wudGV4UGFyYW1ldGVyaSggdGhpcy5fdGV4dHVyZVR5cGUgLCBnbC5URVhUVVJFX01JTl9GSUxURVIgLCB0aGlzLl9maWx0ck1ldGhvZCk7XHJcbiAgICAgICAgICAgIGdsLnRleFBhcmFtZXRlcmkoIHRoaXMuX3RleHR1cmVUeXBlICwgZ2wuVEVYVFVSRV9NQUdfRklMVEVSICwgdGhpcy5fZmlsdHJNZXRob2QpO1xyXG4gICAgICAgICAgICBpZih0aGlzLmlzVWludCl7XHJcbiAgICAgICAgICAgICAgICBnbC50ZXhJbWFnZTJEKCBcclxuICAgICAgICAgICAgICAgICAgICBnbC5URVhUVVJFXzJELFxyXG4gICAgICAgICAgICAgICAgICAgIDAsIFxyXG4gICAgICAgICAgICAgICAgICAgIGdsLlJHQkEsXHJcbiAgICAgICAgICAgICAgICAgICAgMSxcclxuICAgICAgICAgICAgICAgICAgICAxLFxyXG4gICAgICAgICAgICAgICAgICAgIDAsXHJcbiAgICAgICAgICAgICAgICAgICAgZ2wuUkdCQSwgXHJcbiAgICAgICAgICAgICAgICAgICAgZ2wuVU5TSUdORURfQllURSwgXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zb3VyY2VcclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgLy90ZXhJbWFnZTJEKHRhcmdldDogR0xlbnVtLCBsZXZlbDogR0xpbnQsIGludGVybmFsZm9ybWF0OiBHTGludCwgZm9ybWF0OiBHTGVudW0sIHR5cGU6IEdMZW51bSwgc291cmNlOiBUZXhJbWFnZVNvdXJjZSk6IHZvaWQ7XHJcbiAgICAgICAgICAgICAgICBnbC50ZXhJbWFnZTJEKFxyXG4gICAgICAgICAgICAgICAgICAgIGdsLlRFWFRVUkVfMkQsXHJcbiAgICAgICAgICAgICAgICAgICAgMCxcclxuICAgICAgICAgICAgICAgICAgICBnbC5SR0JBLGdsLlJHQkEsXHJcbiAgICAgICAgICAgICAgICAgICAgZ2wuVU5TSUdORURfQllURSxcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNvdXJjZVxyXG4gICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHVibGljIGJpbmQoKXtcclxuICAgICAgICAgICAgZ2wuYmluZFRleHR1cmUoICAgZ2wuVEVYVFVSRV8yRCwgdGhpcy5fdGV4dHVyZSk7XHJcbiAgICAgICAgICAgIGdsLmFjdGl2ZVRleHR1cmUoIGdsLlRFWFRVUkUwICk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgbG9hZEltYWdlKHNvdXJjZTogVGV4SW1hZ2VTb3VyY2Upe1xyXG4gICAgICAgICAgICB0aGlzLmlzVWludCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLnNvdXJjZSA9IHNvdXJjZTtcclxuICAgICAgICAgICAgdGhpcy5sb2FkdGV4dHVyZSgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHVibGljIGxvYWRfdWludEltYWdlKHNvdXJjZTogVWludDhBcnJheSl7XHJcbiAgICAgICAgICAgIHRoaXMuaXNVaW50ID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5zb3VyY2UgPSBzb3VyY2U7XHJcbiAgICAgICAgICAgIHRoaXMubG9hZHRleHR1cmUoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgcHVibGljIHVuQmluZCgpe1xyXG4gICAgICAgICAgICBnbC5hY3RpdmVUZXh0dXJlKGdsLlRFWFRVUkUwKTtcclxuICAgICAgICAgICAgZ2wuYmluZFRleHR1cmUodGhpcy5fdGV4dHVyZVR5cGUsIG51bGwpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBcclxuICAgIGV4cG9ydCBjbGFzcyBMb2FkYWJsZVRleHR1cmUgZXh0ZW5kcyBUZXh0dXJlIGltcGxlbWVudHMgSUZpbGVSZXF1ZXN0UmVzcG9uc2V7XHJcbiAgICAgICAgXHJcbiAgICAgICAgcHJpdmF0ZSBfcmVxdWVzdDtcclxuXHJcbiAgICAgICAgcHVibGljIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgICAgICByZXF1ZXN0RmlsZSA6IHN0cmluZyxcclxuICAgICAgICAgICAgdGV4dHVyZVR5cGUgOiBudW1iZXIgPSBnbC5URVhUVVJFXzJELFxyXG4gICAgICAgICAgICBjbGFtcE1ldGhvZCA6IG51bWJlciA9IGdsLkNMQU1QX1RPX0VER0UgLFxyXG4gICAgICAgICAgICBmaWx0ZXJNZXRob2Q6IG51bWJlciA9IGdsLkxJTkVBUlxyXG4gICAgICAgICl7XHJcbiAgICAgICAgICAgIHN1cGVyKHRleHR1cmVUeXBlICxjbGFtcE1ldGhvZCAsZmlsdGVyTWV0aG9kKVxyXG4gICAgICAgICAgICB0aGlzLl9yZXF1ZXN0ID0gcmVxdWVzdEZpbGU7XHJcbiAgICAgICAgICAgIHRoaXMubG9hZF91aW50SW1hZ2UobmV3IFVpbnQ4QXJyYXkoWzI1NSwyNTUsMjU1LDI1NV0pKTtcclxuICAgICAgICAgICAgdGhpcy5yZXF1ZXN0SW1hZ2UoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyByZWxvYWQocmVxdWVzdHMpOnZvaWR7XHJcbiAgICAgICAgICAgIHRoaXMuX3JlcXVlc3QgPSByZXF1ZXN0cztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBvbkZpbGVSZWNpZXZlZCggYXNzZXQgOiBhbnkpe1xyXG4gICAgICAgICAgICB0aGlzLmxvYWRJbWFnZSggYXNzZXQuZGF0YSBhcyBUZXhJbWFnZVNvdXJjZSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwcml2YXRlIHJlcXVlc3RJbWFnZSgpe1xyXG4gICAgICAgICAgICB2YXIgZnIgOiBGaWxlUmVxdWVzdCA9IG5ldyBGaWxlUmVxdWVzdCh0aGlzLl9yZXF1ZXN0LCB0aGlzKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG4gICAgXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/WEBGL/src/BaseObject/Components/Texture.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/BaseObject/Drawable.ts":
/*!**********************************************!*\
  !*** ./src/WEBGL/src/BaseObject/Drawable.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Drawable\": () => (/* binding */ Drawable),\n/* harmony export */   \"DefaultCube\": () => (/* binding */ DefaultCube)\n/* harmony export */ });\n/* harmony import */ var _Components_Mesh__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Components/Mesh */ \"./src/WEBGL/src/BaseObject/Components/Mesh.ts\");\n\r\nclass Drawable {\r\n    constructor() { }\r\n    bind() {\r\n        this._mesh.bind();\r\n    }\r\n    draw() {\r\n        this.bind();\r\n        this._mesh.draw();\r\n    }\r\n    getMesh() {\r\n        return this._mesh;\r\n    }\r\n    setMesh(nMesh, material) {\r\n        this._mesh = nMesh;\r\n        this._mesh.loadMaterialLocations(material);\r\n    }\r\n}\r\nclass DefaultCube extends Drawable {\r\n    constructor(material) {\r\n        super();\r\n        this.setMesh(_Components_Mesh__WEBPACK_IMPORTED_MODULE_0__.Mesh.createTestMesh(), material);\r\n    }\r\n    draw() {\r\n        //GLOBAL_WORLD.rotateWorld(0.01);\r\n        //gl.uniformMatrix4fv(this._shader.getUniformLocation(\"worldMatrix\"), false, GLOBAL_WORLD.worldMatrix.values    );\r\n        //gl.clearColor(0.75, 0.85, 0.8, 1.0);\r\n        //gl.clear(gl.DEPTH_BUFFER_BIT | gl.COLOR_BUFFER_BIT);\r\n        this.bind();\r\n        super.draw();\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL0Jhc2VPYmplY3QvRHJhd2FibGUudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ3lDO0FBUTlCLE1BQU0sUUFBUTtJQUdqQixnQkFBcUIsQ0FBQztJQUVmLElBQUk7UUFDUCxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO0lBRXRCLENBQUM7SUFFTSxJQUFJO1FBQ1AsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ1osSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBRU0sT0FBTztRQUNWLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUN0QixDQUFDO0lBQ00sT0FBTyxDQUFDLEtBQVksRUFBRSxRQUFpQjtRQUMxQyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsS0FBSyxDQUFDLHFCQUFxQixDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQy9DLENBQUM7Q0FFSjtBQUVNLE1BQU0sV0FBWSxTQUFRLFFBQVE7SUFDckMsWUFBbUIsUUFBbUI7UUFDbEMsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsT0FBTyxDQUFDLGlFQUFtQixFQUFFLEVBQUMsUUFBUSxDQUFDLENBQUM7SUFFakQsQ0FBQztJQUVNLElBQUk7UUFDUCxpQ0FBaUM7UUFDakMsa0hBQWtIO1FBQ2xILHNDQUFzQztRQUN0QyxzREFBc0Q7UUFDdEQsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ1osS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2pCLENBQUM7Q0FDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmdsd2VicGFjay8uL3NyYy9XRUJHTC9zcmMvQmFzZU9iamVjdC9EcmF3YWJsZS50cz9kNjU3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdMT0JBTF9XT1JMRCwgV29ybGQgfSBmcm9tIFwiLi8uLi9Xb3JsZC9Xb3JsZFwiO1xyXG5pbXBvcnQgeyBNZXNoIH0gZnJvbSBcIi4vQ29tcG9uZW50cy9NZXNoXCI7XHJcbmltcG9ydCB7IExvYWRhYmxlVGV4dHVyZSwgVGV4dHVyZSB9IGZyb20gXCIuL0NvbXBvbmVudHMvVGV4dHVyZVwiO1xyXG5pbXBvcnQgeyBEZWZhdWx0U2hhZGVyLCBTaGFkZXIgfSBmcm9tIFwiLi9HTC9TaGFkZXJcIjtcclxuaW1wb3J0IHsgZ2wgfSBmcm9tIFwiLi9HTC93ZWJHbFV0aWxcIjtcclxuaW1wb3J0IHsgSURyYXdhYmxlIH0gZnJvbSAnLi9JRHJhd2FibGUnO1xyXG5pbXBvcnQgeyBNYXRlcmlhbCB9IGZyb20gJy4vQ29tcG9uZW50cy9NYXRlcmlhbCc7XHJcbmltcG9ydCB7IG1hdDQgfSBmcm9tICcuLi9NYXRoL1RTTV9MaWJyYXJ5L21hdDQnO1xyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBEcmF3YWJsZSBpbXBsZW1lbnRzIElEcmF3YWJsZXtcclxuICAgICAgICBwcml2YXRlIF9tZXNoIDogTWVzaDtcclxuXHJcbiAgICAgICAgcHVibGljIGNvbnN0cnVjdG9yKCl7fVxyXG4gICBcclxuICAgICAgICBwdWJsaWMgYmluZCgpe1xyXG4gICAgICAgICAgICB0aGlzLl9tZXNoLmJpbmQoKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgZHJhdygpe1xyXG4gICAgICAgICAgICB0aGlzLmJpbmQoKTtcclxuICAgICAgICAgICAgdGhpcy5fbWVzaC5kcmF3KCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgZ2V0TWVzaCgpOk1lc2h7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9tZXNoO1xyXG4gICAgICAgIH1cclxuICAgICAgICBwdWJsaWMgc2V0TWVzaChuTWVzaCA6IE1lc2gsIG1hdGVyaWFsOk1hdGVyaWFsKTp2b2lke1xyXG4gICAgICAgICAgICB0aGlzLl9tZXNoID0gbk1lc2g7XHJcbiAgICAgICAgICAgIHRoaXMuX21lc2gubG9hZE1hdGVyaWFsTG9jYXRpb25zKG1hdGVyaWFsKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBEZWZhdWx0Q3ViZSBleHRlbmRzIERyYXdhYmxle1xyXG4gICAgICAgIHB1YmxpYyBjb25zdHJ1Y3RvcihtYXRlcmlhbCA6IE1hdGVyaWFsKXtcclxuICAgICAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICAgICAgdGhpcy5zZXRNZXNoKE1lc2guY3JlYXRlVGVzdE1lc2goKSxtYXRlcmlhbCk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBwdWJsaWMgZHJhdygpOnZvaWR7XHJcbiAgICAgICAgICAgIC8vR0xPQkFMX1dPUkxELnJvdGF0ZVdvcmxkKDAuMDEpO1xyXG4gICAgICAgICAgICAvL2dsLnVuaWZvcm1NYXRyaXg0ZnYodGhpcy5fc2hhZGVyLmdldFVuaWZvcm1Mb2NhdGlvbihcIndvcmxkTWF0cml4XCIpLCBmYWxzZSwgR0xPQkFMX1dPUkxELndvcmxkTWF0cml4LnZhbHVlcyAgICApO1xyXG4gICAgICAgICAgICAvL2dsLmNsZWFyQ29sb3IoMC43NSwgMC44NSwgMC44LCAxLjApO1xyXG4gICAgICAgICAgICAvL2dsLmNsZWFyKGdsLkRFUFRIX0JVRkZFUl9CSVQgfCBnbC5DT0xPUl9CVUZGRVJfQklUKTtcclxuICAgICAgICAgICAgdGhpcy5iaW5kKCk7XHJcbiAgICAgICAgICAgIHN1cGVyLmRyYXcoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgXHJcbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/WEBGL/src/BaseObject/Drawable.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/BaseObject/GL/Buffer.ts":
/*!***********************************************!*\
  !*** ./src/WEBGL/src/BaseObject/GL/Buffer.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"UniformInfo\": () => (/* binding */ UniformInfo),\n/* harmony export */   \"AttributeInfo\": () => (/* binding */ AttributeInfo),\n/* harmony export */   \"GLBuffer\": () => (/* binding */ GLBuffer)\n/* harmony export */ });\n/* harmony import */ var _webGlUtil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webGlUtil */ \"./src/WEBGL/src/BaseObject/GL/webGlUtil.ts\");\n// source https://www.youtube.com/watch?v=lbnr1gGmSMA\r\n\r\nclass UniformInfo {\r\n}\r\nclass AttributeInfo {\r\n    constructor(location = 0, size = 0, offset = 0) {\r\n        this.location = location;\r\n        this.size = size;\r\n        this.offset = offset;\r\n    }\r\n}\r\nclass GLBuffer {\r\n    constructor(elementSize, dataType = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.FLOAT, targerBufferType = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.ARRAY_BUFFER, mode = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.TRIANGLES) {\r\n        // ATTRIBUTES \r\n        this._hasAttributelocation = false;\r\n        this._attributes = [];\r\n        // UNIFORMS \r\n        this._hasUniformlocation = false;\r\n        this._uniforms = [];\r\n        this._data = [];\r\n        this._numElementsPerVertex = elementSize;\r\n        this._dataType = dataType;\r\n        this._targerBufferType = targerBufferType;\r\n        this._mode = mode;\r\n        // Byte Size\r\n        switch (this._dataType) {\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.FLOAT:\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.INT:\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.UNSIGNED_INT:\r\n                this._typeSize = 4;\r\n                break;\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.SHORT:\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.UNSIGNED_SHORT:\r\n                this._typeSize = 2;\r\n                break;\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.BYTE:\r\n                this._typeSize = 1;\r\n                break;\r\n            default:\r\n                throw new Error(\"Unrecognised data type \" + this._dataType.toString());\r\n        }\r\n        this._VertexSize = this._numElementsPerVertex * this._typeSize;\r\n        this._buffer = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.createBuffer();\r\n    }\r\n    destroy() {\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.deleteBuffer(this._buffer);\r\n    }\r\n    bind(normalized = false, name = \"del\") {\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.bindBuffer(this._targerBufferType, this._buffer);\r\n        if (this._hasAttributelocation) {\r\n            for (let i = 0; i < this._attributes.length; i++) {\r\n                let a = this._attributes[i];\r\n                // the notes below references an \"array\" this is the data given to the Vertecies,                     \r\n                _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.vertexAttribPointer(a.location, // Where the Attribute we want to change is.\r\n                a.size, // the Number of Components Per a single vertex\r\n                this._dataType, // what type of Data is a single component\r\n                normalized, // should the data be fitted into a certain range between 1 and 0 \r\n                this._VertexSize, // How many elements to skip? between noteS?!!       \r\n                a.offset * this._typeSize // this is how far into the Array ( in bytes) we need to look for the start of this data entry\r\n                );\r\n                _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.enableVertexAttribArray(a.location);\r\n            }\r\n        }\r\n        if (this._hasUniformlocation) {\r\n            for (let i = 0; i < this._uniforms.length; i++) {\r\n                _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.uniformMatrix4fv(this._uniforms[i].location, false, this._uniforms[i].data);\r\n            }\r\n        }\r\n    }\r\n    unbind() {\r\n        if (this._hasAttributelocation) {\r\n            for (let i = 0; i < this._attributes.length; i++) {\r\n                _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.disableVertexAttribArray(this._attributes[i].location);\r\n            }\r\n        }\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.bindBuffer(this._targerBufferType, this._buffer);\r\n    }\r\n    addAttribute(data) {\r\n        this._hasAttributelocation = true;\r\n        this._attributes.push(data);\r\n    }\r\n    addUniformM4(data) {\r\n        this._hasUniformlocation = true;\r\n        this._uniforms.push(data);\r\n    }\r\n    pushData(data) {\r\n        for (let i = 0; i < data.length; i++) {\r\n            this._data.push(data[i]);\r\n        }\r\n    }\r\n    setData(data) {\r\n        this._data = [];\r\n        this.pushData(data);\r\n    }\r\n    upload() {\r\n        let bufferData;\r\n        switch (this._dataType) {\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.FLOAT:\r\n                bufferData = new Float32Array(this._data);\r\n                break;\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.INT:\r\n                bufferData = new Int32Array(this._data);\r\n                break;\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.UNSIGNED_INT:\r\n                bufferData = new Uint32Array(this._data);\r\n                break;\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.SHORT:\r\n                bufferData = new Int16Array(this._data);\r\n                break;\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.UNSIGNED_SHORT:\r\n                bufferData = new Uint16Array(this._data);\r\n                break;\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.BYTE:\r\n                bufferData = new Int8Array(this._data);\r\n                break;\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.UNSIGNED_BYTE:\r\n                bufferData = new Uint8Array(this._data);\r\n                break;\r\n            default:\r\n                throw new Error(\"Unrecognised data type in System failed. \" + this._dataType.toString());\r\n        }\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.bufferData(this._targerBufferType, bufferData, _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.STATIC_DRAW);\r\n    }\r\n    draw() {\r\n        if (this._targerBufferType === _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.ARRAY_BUFFER) {\r\n            _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.drawArrays(this._mode, 0, this._data.length / this._numElementsPerVertex);\r\n        }\r\n        else if (this._targerBufferType === _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.ELEMENT_ARRAY_BUFFER) {\r\n            _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.drawElements(this._mode, this._data.length, this._dataType, 0);\r\n        }\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEBGL/src/BaseObject/GL/Buffer.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/BaseObject/GL/Shader.ts":
/*!***********************************************!*\
  !*** ./src/WEBGL/src/BaseObject/GL/Shader.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Shader\": () => (/* binding */ Shader),\n/* harmony export */   \"DefaultShader\": () => (/* binding */ DefaultShader)\n/* harmony export */ });\n/* harmony import */ var _webGlUtil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webGlUtil */ \"./src/WEBGL/src/BaseObject/GL/webGlUtil.ts\");\n// SOURCE https://www.youtube.com/watch?v=HQbzO0xDuX8\r\n\r\nclass Shader {\r\n    /**\r\n     * Creates a new Shader Object, that contains vertex shader and fragment shader\r\n     * And a name for identification.\r\n     * @param name\r\n     * @param VertexSRC\r\n     * @param FragmentSRC\r\n     */\r\n    constructor(name, VertexSRC, FragmentSRC) {\r\n        this._attributes = {};\r\n        this._uniforms = {};\r\n        this._name = name;\r\n        let vShader = this.loadShader(VertexSRC, _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.VERTEX_SHADER);\r\n        let fShader = this.loadShader(FragmentSRC, _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.FRAGMENT_SHADER);\r\n        this.createProgram(vShader, fShader);\r\n        this.detectAttributes();\r\n        this.detectUniforms();\r\n    }\r\n    use() {\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.useProgram(this._program);\r\n        this.checkForErrors();\r\n    }\r\n    loadShader(src, shaderType) {\r\n        let shader = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.createShader(shaderType);\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.shaderSource(shader, src);\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.compileShader(shader);\r\n        let err = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getShaderInfoLog(shader);\r\n        if (err !== \"\") {\r\n            throw new Error(\"error compiling shader \\n\" + this._name + \" \" + err);\r\n        }\r\n        return shader;\r\n    }\r\n    createProgram(vShader, fShader) {\r\n        this._program = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.createProgram();\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.attachShader(this._program, vShader);\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.attachShader(this._program, fShader);\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.linkProgram(this._program);\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.linkProgram(this._program);\r\n        if (!_webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getProgramParameter(this._program, _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.LINK_STATUS)) {\r\n            console.error(\"Error in Linking Program\", _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getProgramInfoLog(this._program));\r\n            return;\r\n        }\r\n        this.checkForErrors();\r\n    }\r\n    detectAttributes() {\r\n        let aCount = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getProgramParameter(this._program, _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.ACTIVE_ATTRIBUTES);\r\n        for (let i = 0; i < aCount; i++) {\r\n            let aInfo = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getActiveAttrib(this._program, i);\r\n            if (!aInfo) {\r\n                break;\r\n            }\r\n            this._attributes[aInfo.name] = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getAttribLocation(this._program, aInfo.name);\r\n        }\r\n    }\r\n    detectUniforms() {\r\n        let uCount = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getProgramParameter(this._program, _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.ACTIVE_UNIFORMS);\r\n        for (let i = 0; i < uCount; i++) {\r\n            let uInfo = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getActiveUniform(this._program, i);\r\n            if (!uInfo) {\r\n                break;\r\n            }\r\n            this._uniforms[uInfo.name] = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getUniformLocation(this._program, uInfo.name);\r\n        }\r\n    }\r\n    getAttributeLocation(name) {\r\n        if (this._attributes[name] === undefined) {\r\n            throw new Error(\"unable to find shader \" + name + \" in shader \" + this._name);\r\n        }\r\n        return this._attributes[name];\r\n    }\r\n    getUniformLocation(name) {\r\n        if (this._uniforms[name] === undefined) {\r\n            throw new Error(\"unable to find uniform \" + name + \" in shader \" + this._name);\r\n        }\r\n        return this._uniforms[name];\r\n    }\r\n    checkForErrors() {\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.validateProgram(this._program);\r\n        if (!_webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getProgramParameter(this._program, _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.VALIDATE_STATUS)) {\r\n            console.error(\"Error in Validating Program\", _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getProgramInfoLog(this._program));\r\n            return;\r\n        }\r\n        let err = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getProgramInfoLog(this._program);\r\n        if (err !== \"\") {\r\n            throw new Error(\"error Linking shader \" + this._name + \"\\n\" + err);\r\n        }\r\n    }\r\n}\r\nclass DefaultShader extends Shader {\r\n    constructor(name) {\r\n        let _vShaderSource = `\r\n\t\t\tattribute vec3 a_position;\r\n\t\t\tattribute vec2 a_texCord;\r\n\t\t\tattribute vec3 a_normal;\r\n\r\n\t\t\tvarying vec3 fragNormal;\r\n\t\t\tvarying vec2 fragTexCord;\r\n\t\t\t\r\n\t\t\tuniform mat4 worldMatrix;\r\n\t\t\tuniform mat4 viewMatrix;\r\n\t\t\tuniform mat4 projMatrix;\r\n\r\n\t\t\tvoid main(){\r\n\t\t\t\tfragTexCord = a_texCord;\r\n\t\t\t\tfragNormal  = a_normal ;\r\n\t\t\t\tgl_Position = projMatrix * viewMatrix * worldMatrix * vec4(a_position, 1.0);\r\n\t\t\t}`;\r\n        let _fShaderSource = `\r\n\t\t\t\t\r\n\t\t\t\tprecision mediump float;\r\n\t\t\t\t\r\n\t\t\t\tvarying vec2 fragTexCord;\r\n\t\t\t\t\r\n\t\t\t\tuniform sampler2D diffuseTex;\r\n\r\n\t\t\t\tvoid main(){\r\n\t\t\t\t\tgl_FragColor =  texture2D(diffuseTex, fragTexCord);\r\n\t\t\t\t\t//gl_FragColor = vec4( test, 0.5 , 1.0 );\r\n\t\t\t}`;\r\n        super(name, _vShaderSource, _fShaderSource);\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEBGL/src/BaseObject/GL/Shader.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/BaseObject/GL/webGlUtil.ts":
/*!**************************************************!*\
  !*** ./src/WEBGL/src/BaseObject/GL/webGlUtil.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gl\": () => (/* binding */ gl),\n/* harmony export */   \"WebGLUtil\": () => (/* binding */ WebGLUtil)\n/* harmony export */ });\nvar gl;\r\nclass WebGLUtil {\r\n    // SOURCE https://www.youtube.com/watch?v=q7_6CSf5HlI\r\n    /**\r\n     * Initializes WebGl and Gl Variable. also creates a reference to a Canvas element,either by id or create a new one.\r\n     * @param idName\r\n     */\r\n    static initialize(idName) {\r\n        let canvas;\r\n        if (idName !== undefined) {\r\n            canvas = document.getElementById(idName);\r\n            if (canvas === undefined) {\r\n                throw new Error(\"Could not find Canvas element of Id \" + idName);\r\n            }\r\n        }\r\n        else {\r\n            canvas = document.createElement(\"canvas\");\r\n            document.body.appendChild(canvas);\r\n        }\r\n        gl = canvas.getContext(\"webgl\");\r\n        if (gl === undefined) {\r\n            throw new Error(\"Unable to initialize WebGL\");\r\n        }\r\n        gl.enable(gl.CULL_FACE);\r\n        return canvas;\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL0Jhc2VPYmplY3QvR0wvd2ViR2xVdGlsLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQVcsSUFBSSxFQUF5QixDQUFDO0FBRTlCLE1BQU0sU0FBUztJQUNsQixxREFBcUQ7SUFDckQ7OztPQUdHO0lBQ0ksTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUFlO1FBRXBDLElBQUksTUFBeUIsQ0FBQztRQUM5QixJQUFJLE1BQU0sS0FBSyxTQUFTLEVBQUU7WUFDdEIsTUFBTSxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFzQixDQUFDO1lBQzlELElBQUksTUFBTSxLQUFLLFNBQVMsRUFBRTtnQkFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHNDQUFzQyxHQUFHLE1BQU0sQ0FBQyxDQUFDO2FBQUU7U0FDbEc7YUFBTTtZQUNILE1BQU0sR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBc0IsQ0FBQztZQUMvRCxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUNyQztRQUVELEVBQUUsR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2hDLElBQUksRUFBRSxLQUFLLFNBQVMsRUFBRTtZQUNsQixNQUFNLElBQUksS0FBSyxDQUFDLDRCQUE0QixDQUFDLENBQUM7U0FDakQ7UUFDRCxFQUFFLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUV4QixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0NBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJnbHdlYnBhY2svLi9zcmMvV0VCR0wvc3JjL0Jhc2VPYmplY3QvR0wvd2ViR2xVdGlsLnRzP2Y0NjUiXSwic291cmNlc0NvbnRlbnQiOlsiICAgIGV4cG9ydCB2YXIgZ2w6IFdlYkdMUmVuZGVyaW5nQ29udGV4dDtcclxuXHJcbiAgICBleHBvcnQgY2xhc3MgV2ViR0xVdGlsIHtcclxuICAgICAgICAvLyBTT1VSQ0UgaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1xN182Q1NmNUhsSVxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEluaXRpYWxpemVzIFdlYkdsIGFuZCBHbCBWYXJpYWJsZS4gYWxzbyBjcmVhdGVzIGEgcmVmZXJlbmNlIHRvIGEgQ2FudmFzIGVsZW1lbnQsZWl0aGVyIGJ5IGlkIG9yIGNyZWF0ZSBhIG5ldyBvbmUuIFxyXG4gICAgICAgICAqIEBwYXJhbSBpZE5hbWVcclxuICAgICAgICAgKi9cclxuICAgICAgICBwdWJsaWMgc3RhdGljIGluaXRpYWxpemUoaWROYW1lPzogc3RyaW5nKTogSFRNTENhbnZhc0VsZW1lbnQge1xyXG5cclxuICAgICAgICAgICAgbGV0IGNhbnZhczogSFRNTENhbnZhc0VsZW1lbnQ7XHJcbiAgICAgICAgICAgIGlmIChpZE5hbWUgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWROYW1lKSBhcyBIVE1MQ2FudmFzRWxlbWVudDtcclxuICAgICAgICAgICAgICAgIGlmIChjYW52YXMgPT09IHVuZGVmaW5lZCkgeyB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZCBub3QgZmluZCBDYW52YXMgZWxlbWVudCBvZiBJZCBcIiArIGlkTmFtZSk7IH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIikgYXMgSFRNTENhbnZhc0VsZW1lbnQ7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNhbnZhcyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGdsID0gY2FudmFzLmdldENvbnRleHQoXCJ3ZWJnbFwiKTtcclxuICAgICAgICAgICAgaWYgKGdsID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byBpbml0aWFsaXplIFdlYkdMXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGdsLmVuYWJsZShnbC5DVUxMX0ZBQ0UpO1xyXG5cclxuICAgICAgICAgICAgcmV0dXJuIGNhbnZhcztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/WEBGL/src/BaseObject/GL/webGlUtil.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Loader/Assets/AssetManager.ts":
/*!*****************************************************!*\
  !*** ./src/WEBGL/src/Loader/Assets/AssetManager.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MESSAGE_ASSET_LOADER_ASSET_LOADED\": () => (/* binding */ MESSAGE_ASSET_LOADER_ASSET_LOADED),\n/* harmony export */   \"AssetManager\": () => (/* binding */ AssetManager)\n/* harmony export */ });\n/* harmony import */ var _Message_Message__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Message/Message */ \"./src/WEBGL/src/Loader/Message/Message.ts\");\n/* harmony import */ var _Loaders_AssetLoader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Loaders/AssetLoader */ \"./src/WEBGL/src/Loader/Assets/Loaders/AssetLoader.ts\");\n/* harmony import */ var _Loaders_JSONAssetLoader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Loaders/JSONAssetLoader */ \"./src/WEBGL/src/Loader/Assets/Loaders/JSONAssetLoader.ts\");\n\r\n\r\n\r\n// Source https://www.youtube.com/watch?v=_wvvtCqXwYY&list=PLv8Ddw9K0JPiTHLMQw31Yh4qyTAcHRnJx&index=7 \r\nconst MESSAGE_ASSET_LOADER_ASSET_LOADED = \"LOADED::\";\r\nclass AssetManager {\r\n    constructor() {\r\n    }\r\n    static initialize() {\r\n        //console.log(\"IMAGE LOADER ADDED\");\r\n        AssetManager._loaders.push(new _Loaders_AssetLoader__WEBPACK_IMPORTED_MODULE_1__.ImageAssetLoader());\r\n        //console.log(\"JSON LOADER ADDED\");\r\n        AssetManager._loaders.push(new _Loaders_JSONAssetLoader__WEBPACK_IMPORTED_MODULE_2__.JSONAssetLoader());\r\n    }\r\n    static registerLoader(loader) {\r\n        AssetManager._loaders.push(loader);\r\n    }\r\n    static onAssetLoaded(asset) {\r\n        AssetManager._loadedAssets[asset.name] = asset;\r\n        _Message_Message__WEBPACK_IMPORTED_MODULE_0__.Message.send(MESSAGE_ASSET_LOADER_ASSET_LOADED + asset.name, this, asset);\r\n    }\r\n    static loadAsset(assetName) {\r\n        try {\r\n            let extension = assetName.split('.').pop().toLowerCase();\r\n            for (let i = 0; i < AssetManager._loaders.length; i++) {\r\n                let l = AssetManager._loaders[i];\r\n                if (l.supportedExtensions.indexOf(extension) !== -1) {\r\n                    l.LoadAsset(assetName);\r\n                    return;\r\n                }\r\n            }\r\n            console.warn(\"Unable to Load Asset with extension of ::\" + extension);\r\n        }\r\n        catch (_a) {\r\n            console.log(\"ERROR AT EXTENSIION : WAS : \" + assetName);\r\n        }\r\n    }\r\n    static isAssetLoaded(assetName) {\r\n        return AssetManager._loadedAssets[assetName] !== undefined;\r\n    }\r\n    static getAsset(assetName) {\r\n        if (AssetManager.isAssetLoaded(assetName)) {\r\n            return AssetManager._loadedAssets[assetName];\r\n        }\r\n        AssetManager.loadAsset(assetName);\r\n        return undefined;\r\n    }\r\n}\r\nAssetManager._loaders = [];\r\nAssetManager._loadedAssets = {};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL0xvYWRlci9Bc3NldHMvQXNzZXRNYW5hZ2VyLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTZDO0FBQ1k7QUFHRztBQUV4RCxzR0FBc0c7QUFDL0YsTUFBTSxpQ0FBaUMsR0FBRyxVQUFVO0FBQ3BELE1BQU0sWUFBWTtJQUtyQjtJQUNBLENBQUM7SUFFTSxNQUFNLENBQUMsVUFBVTtRQUNwQixvQ0FBb0M7UUFDcEMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxrRUFBZ0IsRUFBRSxDQUFDLENBQUM7UUFDbkQsbUNBQW1DO1FBQ25DLFlBQVksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUkscUVBQWUsRUFBRSxDQUFDLENBQUM7SUFFdEQsQ0FBQztJQUVNLE1BQU0sQ0FBQyxjQUFjLENBQUUsTUFBb0I7UUFDOUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUVNLE1BQU0sQ0FBQyxhQUFhLENBQUMsS0FBWTtRQUNwQyxZQUFZLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxLQUFLLENBQUM7UUFDL0MsMERBQVksQ0FDUixpQ0FBaUMsR0FBRyxLQUFLLENBQUMsSUFBSSxFQUM5QyxJQUFJLEVBQ0osS0FBSyxDQUNSLENBQUM7SUFDTixDQUFDO0lBRU0sTUFBTSxDQUFDLFNBQVMsQ0FBQyxTQUFnQjtRQUNwQyxJQUFHO1lBQ0MsSUFBSSxTQUFTLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUN6RCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsWUFBWSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQ25ELElBQUksQ0FBQyxHQUFHLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2pDLElBQUksQ0FBQyxDQUFDLG1CQUFtQixDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBQztvQkFDaEQsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQztvQkFDdkIsT0FBTztpQkFDVjthQUNKO1lBQ0QsT0FBTyxDQUFDLElBQUksQ0FBQywyQ0FBMkMsR0FBRyxTQUFTLENBQUMsQ0FBQztTQUN6RTtRQUFBLFdBQUs7WUFDRixPQUFPLENBQUMsR0FBRyxDQUFDLDhCQUE4QixHQUFHLFNBQVMsQ0FBQyxDQUFDO1NBQzNEO0lBQ0wsQ0FBQztJQUVNLE1BQU0sQ0FBQyxhQUFhLENBQUMsU0FBZ0I7UUFDeEMsT0FBTyxZQUFZLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxLQUFNLFNBQVMsQ0FBQztJQUNoRSxDQUFDO0lBRU0sTUFBTSxDQUFDLFFBQVEsQ0FBQyxTQUFnQjtRQUNuQyxJQUFHLFlBQVksQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEVBQUM7WUFDckMsT0FBTyxZQUFZLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1NBQ2hEO1FBQ0QsWUFBWSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNsQyxPQUFPLFNBQVMsQ0FBQztJQUNyQixDQUFDOztBQXJEYyxxQkFBUSxHQUFtQixFQUFFLENBQUM7QUFDOUIsMEJBQWEsR0FBNEIsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmdsd2VicGFjay8uL3NyYy9XRUJHTC9zcmMvTG9hZGVyL0Fzc2V0cy9Bc3NldE1hbmFnZXIudHM/ZDA4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNZXNzYWdlIH0gZnJvbSBcIi4uL01lc3NhZ2UvTWVzc2FnZVwiO1xyXG5pbXBvcnQgeyBJbWFnZUFzc2V0TG9hZGVyIH0gZnJvbSBcIi4vTG9hZGVycy9Bc3NldExvYWRlclwiO1xyXG5pbXBvcnQgeyBJQXNzZXQgfSBmcm9tIFwiLi9JQXNzZXRcIjtcclxuaW1wb3J0IHsgSUFzc2V0TG9hZGVyIH0gZnJvbSBcIi4vTG9hZGVycy9JQXNzZXRMb2FkZXJcIjtcclxuaW1wb3J0IHsgSlNPTkFzc2V0TG9hZGVyIH0gZnJvbSBcIi4vTG9hZGVycy9KU09OQXNzZXRMb2FkZXJcIjtcclxuXHJcbiAgICAvLyBTb3VyY2UgaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1fd3Z2dENxWHdZWSZsaXN0PVBMdjhEZHc5SzBKUGlUSExNUXczMVloNHF5VEFjSFJuSngmaW5kZXg9NyBcclxuICAgIGV4cG9ydCBjb25zdCBNRVNTQUdFX0FTU0VUX0xPQURFUl9BU1NFVF9MT0FERUQgPSBcIkxPQURFRDo6XCJcclxuICAgIGV4cG9ydCBjbGFzcyBBc3NldE1hbmFnZXJ7XHJcblxyXG4gICAgICAgIHByaXZhdGUgc3RhdGljIF9sb2FkZXJzOiBJQXNzZXRMb2FkZXJbXSA9IFtdO1xyXG4gICAgICAgIHByaXZhdGUgc3RhdGljIF9sb2FkZWRBc3NldHM6IHtbbmFtZTpzdHJpbmddOklBc3NldCB9ID0ge31cclxuXHJcbiAgICAgICAgcHJpdmF0ZSBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHVibGljIHN0YXRpYyBpbml0aWFsaXplKCk6dm9pZHtcclxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcIklNQUdFIExPQURFUiBBRERFRFwiKTtcclxuICAgICAgICAgICAgQXNzZXRNYW5hZ2VyLl9sb2FkZXJzLnB1c2gobmV3IEltYWdlQXNzZXRMb2FkZXIoKSk7XHJcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCJKU09OIExPQURFUiBBRERFRFwiKTtcclxuICAgICAgICAgICAgQXNzZXRNYW5hZ2VyLl9sb2FkZXJzLnB1c2gobmV3IEpTT05Bc3NldExvYWRlcigpKTtcclxuICAgICAgICAgICBcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgcmVnaXN0ZXJMb2FkZXIoIGxvYWRlcjogSUFzc2V0TG9hZGVyICk6dm9pZHtcclxuICAgICAgICAgICAgQXNzZXRNYW5hZ2VyLl9sb2FkZXJzLnB1c2gobG9hZGVyKTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBwdWJsaWMgc3RhdGljIG9uQXNzZXRMb2FkZWQoYXNzZXQ6SUFzc2V0KTp2b2lke1xyXG4gICAgICAgICAgICBBc3NldE1hbmFnZXIuX2xvYWRlZEFzc2V0c1thc3NldC5uYW1lXSA9IGFzc2V0O1xyXG4gICAgICAgICAgICBNZXNzYWdlLnNlbmQoXHJcbiAgICAgICAgICAgICAgICBNRVNTQUdFX0FTU0VUX0xPQURFUl9BU1NFVF9MT0FERUQgKyBhc3NldC5uYW1lLFxyXG4gICAgICAgICAgICAgICAgdGhpcyxcclxuICAgICAgICAgICAgICAgIGFzc2V0XHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgc3RhdGljIGxvYWRBc3NldChhc3NldE5hbWU6c3RyaW5nKTp2b2lke1xyXG4gICAgICAgICAgICB0cnl7XHJcbiAgICAgICAgICAgICAgICBsZXQgZXh0ZW5zaW9uID0gYXNzZXROYW1lLnNwbGl0KCcuJykucG9wKCkudG9Mb3dlckNhc2UoKTtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgQXNzZXRNYW5hZ2VyLl9sb2FkZXJzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGwgPSBBc3NldE1hbmFnZXIuX2xvYWRlcnNbaV07XHJcbiAgICAgICAgICAgICAgICAgICAgaWYoIGwuc3VwcG9ydGVkRXh0ZW5zaW9ucy5pbmRleE9mKGV4dGVuc2lvbikgIT09IC0xKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbC5Mb2FkQXNzZXQoYXNzZXROYW1lKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihcIlVuYWJsZSB0byBMb2FkIEFzc2V0IHdpdGggZXh0ZW5zaW9uIG9mIDo6XCIgKyBleHRlbnNpb24pO1xyXG4gICAgICAgICAgICB9Y2F0Y2h7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkVSUk9SIEFUIEVYVEVOU0lJT04gOiBXQVMgOiBcIiArIGFzc2V0TmFtZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgaXNBc3NldExvYWRlZChhc3NldE5hbWU6c3RyaW5nKTogYm9vbGVhbntcclxuICAgICAgICAgICAgcmV0dXJuIEFzc2V0TWFuYWdlci5fbG9hZGVkQXNzZXRzW2Fzc2V0TmFtZV0gICE9PSB1bmRlZmluZWQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgc3RhdGljIGdldEFzc2V0KGFzc2V0TmFtZTpzdHJpbmcpOklBc3NldHtcclxuICAgICAgICAgICAgaWYoQXNzZXRNYW5hZ2VyLmlzQXNzZXRMb2FkZWQoYXNzZXROYW1lKSl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gQXNzZXRNYW5hZ2VyLl9sb2FkZWRBc3NldHNbYXNzZXROYW1lXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBBc3NldE1hbmFnZXIubG9hZEFzc2V0KGFzc2V0TmFtZSk7XHJcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Loader/Assets/AssetManager.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Loader/Assets/Loaders/AssetLoader.ts":
/*!************************************************************!*\
  !*** ./src/WEBGL/src/Loader/Assets/Loaders/AssetLoader.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ImageAsset\": () => (/* binding */ ImageAsset),\n/* harmony export */   \"ImageAssetLoader\": () => (/* binding */ ImageAssetLoader)\n/* harmony export */ });\n/* harmony import */ var _AssetManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../AssetManager */ \"./src/WEBGL/src/Loader/Assets/AssetManager.ts\");\n//https://github.com/travisvroman/NamorvTech/blob/master/src/Engine/Core/Assets/ImageAssetLoader.ts\r\n\r\nclass ImageAsset {\r\n    constructor(name, data) {\r\n        this.name = name;\r\n        this.data = data;\r\n    }\r\n    get width() {\r\n        return this.data.width;\r\n    }\r\n    get Height() {\r\n        return this.data.height;\r\n    }\r\n}\r\nclass ImageAssetLoader {\r\n    get supportedExtensions() {\r\n        return [\"png\", \"gif\", \"jpg\"];\r\n    }\r\n    LoadAsset(assetName) {\r\n        let image = new Image();\r\n        image.onload = this.onImageLoaded.bind(this, assetName, image);\r\n        image.src = assetName;\r\n    }\r\n    onImageLoaded(assetName, image) {\r\n        //console.log(\"onImageLoaded + assetName/image\"+assetName+\"/\"+image);\r\n        let asset = new ImageAsset(assetName, image);\r\n        _AssetManager__WEBPACK_IMPORTED_MODULE_0__.AssetManager.onAssetLoaded(asset);\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL0xvYWRlci9Bc3NldHMvTG9hZGVycy9Bc3NldExvYWRlci50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxtR0FBbUc7QUFFcEQ7QUFLcEMsTUFBTSxVQUFVO0lBSW5CLFlBQW1CLElBQWEsRUFBRSxJQUF1QjtRQUNyRCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNyQixDQUFDO0lBQ0QsSUFBVyxLQUFLO1FBQ1osT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztJQUMzQixDQUFDO0lBQ0QsSUFBVyxNQUFNO1FBQ2IsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUM1QixDQUFDO0NBQ0o7QUFFTSxNQUFNLGdCQUFnQjtJQUV6QixJQUFXLG1CQUFtQjtRQUMxQixPQUFPLENBQUMsS0FBSyxFQUFDLEtBQUssRUFBQyxLQUFLLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRU0sU0FBUyxDQUFDLFNBQWlCO1FBQzlCLElBQUksS0FBSyxHQUFxQixJQUFJLEtBQUssRUFBRSxDQUFDO1FBQzFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFDLFNBQVMsRUFBQyxLQUFLLENBQUMsQ0FBQztRQUM3RCxLQUFLLENBQUMsR0FBRyxHQUFHLFNBQVMsQ0FBQztJQUMxQixDQUFDO0lBRU8sYUFBYSxDQUFDLFNBQWdCLEVBQUUsS0FBc0I7UUFDM0QscUVBQXFFO1FBQ3BFLElBQUksS0FBSyxHQUFHLElBQUksVUFBVSxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUM3QyxxRUFBMEIsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN0QyxDQUFDO0NBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJnbHdlYnBhY2svLi9zcmMvV0VCR0wvc3JjL0xvYWRlci9Bc3NldHMvTG9hZGVycy9Bc3NldExvYWRlci50cz9lZmViIl0sInNvdXJjZXNDb250ZW50IjpbIi8vaHR0cHM6Ly9naXRodWIuY29tL3RyYXZpc3Zyb21hbi9OYW1vcnZUZWNoL2Jsb2IvbWFzdGVyL3NyYy9FbmdpbmUvQ29yZS9Bc3NldHMvSW1hZ2VBc3NldExvYWRlci50c1xyXG5cclxuaW1wb3J0IHsgQXNzZXRNYW5hZ2VyIH0gZnJvbSBcIi4uL0Fzc2V0TWFuYWdlclwiO1xyXG5pbXBvcnQgeyBJQXNzZXQgfSBmcm9tIFwiLi4vSUFzc2V0XCI7XHJcbmltcG9ydCB7IElBc3NldExvYWRlciB9IGZyb20gXCIuL0lBc3NldExvYWRlclwiO1xyXG5cclxuICAgIFxyXG4gICAgZXhwb3J0IGNsYXNzIEltYWdlQXNzZXQgaW1wbGVtZW50cyBJQXNzZXR7XHJcbiAgICAgICAgcHVibGljIHJlYWRvbmx5IG5hbWU6IHN0cmluZztcclxuICAgICAgICBwdWJsaWMgcmVhZG9ubHkgZGF0YTogSFRNTEltYWdlRWxlbWVudDtcclxuXHJcbiAgICAgICAgcHVibGljIGNvbnN0cnVjdG9yKG5hbWUgOiBzdHJpbmcsIGRhdGEgOiBIVE1MSW1hZ2VFbGVtZW50KXtcclxuICAgICAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcclxuICAgICAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcHVibGljIGdldCB3aWR0aCgpOm51bWJlcntcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGF0YS53aWR0aDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcHVibGljIGdldCBIZWlnaHQoKTpudW1iZXJ7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRhdGEuaGVpZ2h0O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBleHBvcnQgY2xhc3MgSW1hZ2VBc3NldExvYWRlciBpbXBsZW1lbnRzIElBc3NldExvYWRlcntcclxuXHJcbiAgICAgICAgcHVibGljIGdldCBzdXBwb3J0ZWRFeHRlbnNpb25zKCk6IHN0cmluZ1tde1xyXG4gICAgICAgICAgICByZXR1cm4gW1wicG5nXCIsXCJnaWZcIixcImpwZ1wiXTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBMb2FkQXNzZXQoYXNzZXROYW1lOiBzdHJpbmcpOiB2b2lkIHtcclxuICAgICAgICAgICAgbGV0IGltYWdlOiBIVE1MSW1hZ2VFbGVtZW50ID0gbmV3IEltYWdlKCk7XHJcbiAgICAgICAgICAgIGltYWdlLm9ubG9hZCA9IHRoaXMub25JbWFnZUxvYWRlZC5iaW5kKHRoaXMsYXNzZXROYW1lLGltYWdlKTtcclxuICAgICAgICAgICAgaW1hZ2Uuc3JjID0gYXNzZXROYW1lO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJpdmF0ZSBvbkltYWdlTG9hZGVkKGFzc2V0TmFtZTpzdHJpbmcsIGltYWdlOkhUTUxJbWFnZUVsZW1lbnQpOnZvaWR7XHJcbiAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcIm9uSW1hZ2VMb2FkZWQgKyBhc3NldE5hbWUvaW1hZ2VcIithc3NldE5hbWUrXCIvXCIraW1hZ2UpO1xyXG4gICAgICAgICAgICBsZXQgYXNzZXQgPSBuZXcgSW1hZ2VBc3NldChhc3NldE5hbWUsIGltYWdlKTtcclxuICAgICAgICAgICAgQXNzZXRNYW5hZ2VyLm9uQXNzZXRMb2FkZWQoYXNzZXQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG4gIFxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Loader/Assets/Loaders/AssetLoader.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Loader/Assets/Loaders/JSONAssetLoader.ts":
/*!****************************************************************!*\
  !*** ./src/WEBGL/src/Loader/Assets/Loaders/JSONAssetLoader.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"JSONAsset\": () => (/* binding */ JSONAsset),\n/* harmony export */   \"JSONAssetLoader\": () => (/* binding */ JSONAssetLoader),\n/* harmony export */   \"BitangentEnum\": () => (/* binding */ BitangentEnum)\n/* harmony export */ });\n/* harmony import */ var _AssetManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../AssetManager */ \"./src/WEBGL/src/Loader/Assets/AssetManager.ts\");\n\r\nclass JSONAsset {\r\n    constructor(name, data) {\r\n        this.name = name;\r\n        this.data = data;\r\n    }\r\n}\r\nclass JSONAssetLoader {\r\n    get supportedExtensions() {\r\n        return [\"json\"];\r\n    }\r\n    LoadAsset(assetName) {\r\n        var rawFile = new XMLHttpRequest();\r\n        rawFile.overrideMimeType(\"application/json\");\r\n        rawFile.open(\"GET\", assetName, true);\r\n        rawFile.onreadystatechange = function () {\r\n            if (rawFile.readyState === 4) {\r\n                JSONAssetLoader.onload(assetName, rawFile.responseText);\r\n            }\r\n        };\r\n        rawFile.send(null);\r\n    }\r\n    static onload(assetName, rawData) {\r\n        var JsonAsset = JSON.parse(rawData);\r\n        var asset = new JSONAsset(assetName, JsonAsset);\r\n        _AssetManager__WEBPACK_IMPORTED_MODULE_0__.AssetManager.onAssetLoaded(asset);\r\n    }\r\n}\r\nvar BitangentEnum;\r\n(function (BitangentEnum) {\r\n    BitangentEnum[\"NaN\"] = \"NaN\";\r\n})(BitangentEnum || (BitangentEnum = {}));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL0xvYWRlci9Bc3NldHMvTG9hZGVycy9KU09OQXNzZXRMb2FkZXIudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUErQztBQUt4QyxNQUFNLFNBQVM7SUFHbEIsWUFBbUIsSUFBVyxFQUFHLElBQVc7UUFDeEMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDckIsQ0FBQztDQUNKO0FBRU0sTUFBTSxlQUFlO0lBRXhCLElBQVcsbUJBQW1CO1FBQzFCLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNwQixDQUFDO0lBQ00sU0FBUyxDQUFDLFNBQWlCO1FBQzlCLElBQUksT0FBTyxHQUFHLElBQUksY0FBYyxFQUFFLENBQUM7UUFDbkMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLGtCQUFrQixDQUFDLENBQUM7UUFDN0MsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3JDLE9BQU8sQ0FBQyxrQkFBa0IsR0FBRztZQUN6QixJQUFJLE9BQU8sQ0FBQyxVQUFVLEtBQUssQ0FBQyxFQUFFO2dCQUUxQixlQUFlLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7YUFFMUQ7UUFDTCxDQUFDO1FBQ0QsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUV2QixDQUFDO0lBRU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFnQixFQUFFLE9BQWdCO1FBQ3BELElBQUksU0FBUyxHQUFhLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFFLENBQUU7UUFDaEQsSUFBSSxLQUFLLEdBQUcsSUFBSSxTQUFTLENBQUMsU0FBUyxFQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQy9DLHFFQUEwQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3RDLENBQUM7Q0FDSjtBQStFRCxJQUFZLGFBRVg7QUFGRCxXQUFZLGFBQWE7SUFDckIsNEJBQVc7QUFDZixDQUFDLEVBRlcsYUFBYSxLQUFiLGFBQWEsUUFFeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJnbHdlYnBhY2svLi9zcmMvV0VCR0wvc3JjL0xvYWRlci9Bc3NldHMvTG9hZGVycy9KU09OQXNzZXRMb2FkZXIudHM/MGRhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc3NldE1hbmFnZXIgfSBmcm9tIFwiLi4vQXNzZXRNYW5hZ2VyXCI7XHJcbmltcG9ydCB7IElBc3NldCB9IGZyb20gXCIuLi9JQXNzZXRcIjtcclxuaW1wb3J0IHsgSUFzc2V0TG9hZGVyIH0gZnJvbSBcIi4vSUFzc2V0TG9hZGVyXCI7XHJcblxyXG5cclxuZXhwb3J0IGNsYXNzIEpTT05Bc3NldCBpbXBsZW1lbnRzIElBc3NldHtcclxuICAgIHB1YmxpYyByZWFkb25seSBuYW1lOiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgcmVhZG9ubHkgZGF0YTogSlNPTjNEO1xyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKG5hbWU6c3RyaW5nICwgZGF0YTpKU09OM0Qpe1xyXG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEpTT05Bc3NldExvYWRlciBpbXBsZW1lbnRzIElBc3NldExvYWRlcntcclxuXHJcbiAgICBwdWJsaWMgZ2V0IHN1cHBvcnRlZEV4dGVuc2lvbnMoKTogc3RyaW5nW10ge1xyXG4gICAgICAgIHJldHVybiBbXCJqc29uXCJdO1xyXG4gICAgfVxyXG4gICAgcHVibGljIExvYWRBc3NldChhc3NldE5hbWU6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgICAgIHZhciByYXdGaWxlID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XHJcbiAgICAgICAgcmF3RmlsZS5vdmVycmlkZU1pbWVUeXBlKFwiYXBwbGljYXRpb24vanNvblwiKTtcclxuICAgICAgICByYXdGaWxlLm9wZW4oXCJHRVRcIiwgYXNzZXROYW1lLCB0cnVlKTtcclxuICAgICAgICByYXdGaWxlLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICBpZiAocmF3RmlsZS5yZWFkeVN0YXRlID09PSA0KSB7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIEpTT05Bc3NldExvYWRlci5vbmxvYWQoYXNzZXROYW1lLHJhd0ZpbGUucmVzcG9uc2VUZXh0KTtcclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmF3RmlsZS5zZW5kKG51bGwpO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHN0YXRpYyBvbmxvYWQoYXNzZXROYW1lOnN0cmluZyAscmF3RGF0YSA6IHN0cmluZyApOnZvaWR7XHJcbiAgICAgICAgdmFyIEpzb25Bc3NldCA6IEpTT04zRCA9ICBKU09OLnBhcnNlKHJhd0RhdGEgKSA7XHJcbiAgICAgICAgdmFyIGFzc2V0ID0gbmV3IEpTT05Bc3NldChhc3NldE5hbWUsSnNvbkFzc2V0KTtcclxuICAgICAgICBBc3NldE1hbmFnZXIub25Bc3NldExvYWRlZChhc3NldCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIEdlbmVyYXRlZCBieSBodHRwczovL3F1aWNrdHlwZS5pb1xyXG4vLyBUbyBjaGFuZ2UgcXVpY2t0eXBlJ3MgdGFyZ2V0IGxhbmd1YWdlLCBydW4gY29tbWFuZDpcclxuLy8gICBcIlNldCBxdWlja3R5cGUgdGFyZ2V0IGxhbmd1YWdlXCJcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSlNPTjNEIHtcclxuICAgIHJvb3Rub2RlOiAgIFJvb3Rub2RlO1xyXG4gICAgZmxhZ3M6ICAgICAgbnVtYmVyO1xyXG4gICAgbWVzaGVzOiAgICAgTWVzaFtdO1xyXG4gICAgbWF0ZXJpYWxzOiAgTWF0ZXJpYWxbXTtcclxuICAgIGFuaW1hdGlvbnM6IEFuaW1hdGlvbltdO1xyXG4gICAgbGlnaHRzOiAgICAgTGlnaHRbXTtcclxuICAgIGNhbWVyYXM6ICAgIENhbWVyYVtdO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEFuaW1hdGlvbiB7XHJcbiAgICBuYW1lOiAgICAgICAgICAgc3RyaW5nO1xyXG4gICAgdGlja3NwZXJzZWNvbmQ6IG51bWJlcjtcclxuICAgIGR1cmF0aW9uOiAgICAgICBudW1iZXI7XHJcbiAgICBjaGFubmVsczogICAgICAgQ2hhbm5lbFtdO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIENoYW5uZWwge1xyXG4gICAgbmFtZTogICAgICAgICBzdHJpbmc7XHJcbiAgICBwcmVzdGF0ZTogICAgIG51bWJlcjtcclxuICAgIHBvc3RzdGF0ZTogICAgbnVtYmVyO1xyXG4gICAgcG9zaXRpb25rZXlzOiBBcnJheTxBcnJheTxudW1iZXJbXSB8IG51bWJlcj4+O1xyXG4gICAgcm90YXRpb25rZXlzOiBBcnJheTxBcnJheTxudW1iZXJbXSB8IG51bWJlcj4+O1xyXG4gICAgc2NhbGluZ2tleXM6ICBBcnJheTxBcnJheTxudW1iZXJbXSB8IG51bWJlcj4+O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIENhbWVyYSB7XHJcbiAgICBuYW1lOiAgICAgICAgICBzdHJpbmc7XHJcbiAgICBhc3BlY3Q6ICAgICAgICBudW1iZXI7XHJcbiAgICBjbGlwcGxhbmVmYXI6ICBudW1iZXI7XHJcbiAgICBjbGlwcGxhbmVuZWFyOiBudW1iZXI7XHJcbiAgICBob3Jpem9udGFsZm92OiBudW1iZXI7XHJcbiAgICB1cDogICAgICAgICAgICBudW1iZXJbXTtcclxuICAgIGxvb2thdDogICAgICAgIG51bWJlcltdO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIExpZ2h0IHtcclxuICAgIG5hbWU6ICAgICAgICAgICAgICAgICBzdHJpbmc7XHJcbiAgICB0eXBlOiAgICAgICAgICAgICAgICAgbnVtYmVyO1xyXG4gICAgYXR0ZW51YXRpb25jb25zdGFudDogIG51bWJlcjtcclxuICAgIGF0dGVudWF0aW9ubGluZWFyOiAgICBudW1iZXI7XHJcbiAgICBhdHRlbnVhdGlvbnF1YWRyYXRpYzogbnVtYmVyO1xyXG4gICAgZGlmZnVzZWNvbG9yOiAgICAgICAgIG51bWJlcltdO1xyXG4gICAgc3BlY3VsYXJjb2xvcjogICAgICAgIG51bWJlcltdO1xyXG4gICAgYW1iaWVudGNvbG9yOiAgICAgICAgIG51bWJlcltdO1xyXG4gICAgcG9zaXRpb246ICAgICAgICAgICAgIG51bWJlcltdO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE1hdGVyaWFsIHtcclxuICAgIHByb3BlcnRpZXM6IFByb3BlcnR5W107XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUHJvcGVydHkge1xyXG4gICAga2V5OiAgICAgIHN0cmluZztcclxuICAgIHNlbWFudGljOiBudW1iZXI7XHJcbiAgICBpbmRleDogICAgbnVtYmVyO1xyXG4gICAgdHlwZTogICAgIG51bWJlcjtcclxuICAgIHZhbHVlOiAgICBudW1iZXJbXSB8IG51bWJlciB8IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBNZXNoIHtcclxuICAgIG5hbWU6ICAgICAgICAgICAgc3RyaW5nO1xyXG4gICAgbWF0ZXJpYWxpbmRleDogICBudW1iZXI7XHJcbiAgICBwcmltaXRpdmV0eXBlczogIG51bWJlcjtcclxuICAgIHZlcnRpY2VzOiAgICAgICAgbnVtYmVyW107XHJcbiAgICBub3JtYWxzOiAgICAgICAgIG51bWJlcltdO1xyXG4gICAgdGFuZ2VudHM6ICAgICAgICBBcnJheTxudW1iZXIgfCBCaXRhbmdlbnRFbnVtPjtcclxuICAgIGJpdGFuZ2VudHM6ICAgICAgQXJyYXk8bnVtYmVyIHwgQml0YW5nZW50RW51bT47XHJcbiAgICBudW11dmNvbXBvbmVudHM6IG51bWJlcltdO1xyXG4gICAgdGV4dHVyZWNvb3JkczogICBBcnJheTxudW1iZXJbXT47XHJcbiAgICBmYWNlczogICAgICAgICAgIEFycmF5PG51bWJlcltdPjtcclxufVxyXG5cclxuZXhwb3J0IGVudW0gQml0YW5nZW50RW51bSB7XHJcbiAgICBOYU4gPSBcIk5hTlwiLFxyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFJvb3Rub2RlIHtcclxuICAgIG5hbWU6ICAgICAgICAgICBzdHJpbmc7XHJcbiAgICB0cmFuc2Zvcm1hdGlvbjogbnVtYmVyW107XHJcbiAgICBjaGlsZHJlbjogICAgICAgUm9vdG5vZGVDaGlsZFtdO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFJvb3Rub2RlQ2hpbGQge1xyXG4gICAgbmFtZTogICAgICAgICAgIHN0cmluZztcclxuICAgIHRyYW5zZm9ybWF0aW9uOiBudW1iZXJbXTtcclxuICAgIG1lc2hlcz86ICAgICAgICBudW1iZXJbXTtcclxuICAgIGNoaWxkcmVuPzogICAgICBQdXJwbGVDaGlsZFtdO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFB1cnBsZUNoaWxkIHtcclxuICAgIG5hbWU6ICAgICAgICAgICBzdHJpbmc7XHJcbiAgICB0cmFuc2Zvcm1hdGlvbjogbnVtYmVyW107XHJcbiAgICBjaGlsZHJlbjogICAgICAgRmx1ZmZ5Q2hpbGRbXTtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGbHVmZnlDaGlsZCB7XHJcbiAgICBuYW1lOiAgICAgICAgICAgc3RyaW5nO1xyXG4gICAgdHJhbnNmb3JtYXRpb246IG51bWJlcltdO1xyXG4gICAgY2hpbGRyZW46ICAgICAgIFRlbnRhY2xlZENoaWxkW107XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgVGVudGFjbGVkQ2hpbGQge1xyXG4gICAgbmFtZTogICAgICAgICAgIHN0cmluZztcclxuICAgIHRyYW5zZm9ybWF0aW9uOiBudW1iZXJbXTtcclxuICAgIGNoaWxkcmVuOiAgICAgICBTdGlja3lDaGlsZFtdO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFN0aWNreUNoaWxkIHtcclxuICAgIG5hbWU6ICAgICAgICAgICBzdHJpbmc7XHJcbiAgICB0cmFuc2Zvcm1hdGlvbjogbnVtYmVyW107XHJcbiAgICBjaGlsZHJlbjogICAgICAgSW5kaWdvQ2hpbGRbXTtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJbmRpZ29DaGlsZCB7XHJcbiAgICBuYW1lOiAgICAgICAgICAgc3RyaW5nO1xyXG4gICAgdHJhbnNmb3JtYXRpb246IG51bWJlcltdO1xyXG4gICAgY2hpbGRyZW46ICAgICAgIEluZGVjZW50Q2hpbGRbXTtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJbmRlY2VudENoaWxkIHtcclxuICAgIG5hbWU6ICAgICAgICAgICBzdHJpbmc7XHJcbiAgICB0cmFuc2Zvcm1hdGlvbjogbnVtYmVyW107XHJcbiAgICBtZXNoZXM/OiAgICAgICAgbnVtYmVyW107XHJcbiAgICBjaGlsZHJlbj86ICAgICAgSW5kZWNlbnRDaGlsZFtdO1xyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Loader/Assets/Loaders/JSONAssetLoader.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Loader/FileReuqest.ts":
/*!*********************************************!*\
  !*** ./src/WEBGL/src/Loader/FileReuqest.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FileRequest\": () => (/* binding */ FileRequest)\n/* harmony export */ });\n/* harmony import */ var _Assets_AssetManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Assets/AssetManager */ \"./src/WEBGL/src/Loader/Assets/AssetManager.ts\");\n/* harmony import */ var _Message_MessageBus__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Message/MessageBus */ \"./src/WEBGL/src/Loader/Message/MessageBus.ts\");\n\r\n\r\nclass FileRequest {\r\n    constructor(requestString, handler) {\r\n        this.requestStr = requestString;\r\n        this.handler = handler;\r\n        _Message_MessageBus__WEBPACK_IMPORTED_MODULE_1__.MessageBus.addSubscription(_Assets_AssetManager__WEBPACK_IMPORTED_MODULE_0__.MESSAGE_ASSET_LOADER_ASSET_LOADED + requestString, this);\r\n        this.content = _Assets_AssetManager__WEBPACK_IMPORTED_MODULE_0__.AssetManager.getAsset(requestString);\r\n        if (this.content != undefined || this.content != null) {\r\n            _Message_MessageBus__WEBPACK_IMPORTED_MODULE_1__.MessageBus.removeSubscription(_Assets_AssetManager__WEBPACK_IMPORTED_MODULE_0__.MESSAGE_ASSET_LOADER_ASSET_LOADED + requestString, this);\r\n            this.handler.onFileRecieved(this.content.data);\r\n        }\r\n    }\r\n    onMessage(message) {\r\n        this.handler.onFileRecieved(message.context);\r\n        //MessageBus.removeSubscription(MESSAGE_ASSET_LOADER_ASSET_LOADED +  this.requestStr, this);\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL0xvYWRlci9GaWxlUmV1cWVzdC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0Y7QUFLdEM7QUFHdkMsTUFBTSxXQUFXO0lBTXBCLFlBQW9CLGFBQXNCLEVBQUcsT0FBOEI7UUFFdkUsSUFBSSxDQUFDLFVBQVUsR0FBRyxhQUFhLENBQUM7UUFDaEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFFdkIsMkVBQTBCLENBQUMsbUZBQWlDLEdBQUksYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3JGLElBQUksQ0FBQyxPQUFPLEdBQUcsdUVBQXFCLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDcEQsSUFBSSxJQUFJLENBQUMsT0FBTyxJQUFJLFNBQVMsSUFBSSxJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksRUFBQztZQUNsRCw4RUFBNkIsQ0FBQyxtRkFBaUMsR0FBSSxhQUFhLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDeEYsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNsRDtJQUNMLENBQUM7SUFFRCxTQUFTLENBQUMsT0FBaUI7UUFDdkIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBRSxDQUFDO1FBQzlDLDRGQUE0RjtJQUNoRyxDQUFDO0NBRUoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJnbHdlYnBhY2svLi9zcmMvV0VCR0wvc3JjL0xvYWRlci9GaWxlUmV1cWVzdC50cz84NGNlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFzc2V0TWFuYWdlciwgTUVTU0FHRV9BU1NFVF9MT0FERVJfQVNTRVRfTE9BREVEIH0gZnJvbSBcIi4vQXNzZXRzL0Fzc2V0TWFuYWdlclwiO1xyXG5pbXBvcnQgeyBJQXNzZXQgfSBmcm9tIFwiLi9Bc3NldHMvSUFzc2V0XCI7XHJcbmltcG9ydCB7IElGaWxlUmVxdWVzdFJlc3BvbnNlIH0gZnJvbSBcIi4vSUZpbGVSZXF1ZXN0UmVzcG9uc2VcIjtcclxuaW1wb3J0IHsgSU1lc3NhZ2VIYW5kbGVyIH0gZnJvbSBcIi4vTWVzc2FnZS9JTWVzc2FnZUhhbmRsZXJcIjtcclxuaW1wb3J0IHsgTWVzc2FnZSB9IGZyb20gXCIuL01lc3NhZ2UvTWVzc2FnZVwiO1xyXG5pbXBvcnQgeyBNZXNzYWdlQnVzIH0gZnJvbSBcIi4vTWVzc2FnZS9NZXNzYWdlQnVzXCI7XHJcblxyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBGaWxlUmVxdWVzdCBpbXBsZW1lbnRzIElNZXNzYWdlSGFuZGxlcntcclxuICAgICAgICBcclxuICAgICAgICBjb250ZW50IDogSUFzc2V0IDtcclxuICAgICAgICBoYW5kbGVyIDogSUZpbGVSZXF1ZXN0UmVzcG9uc2UgXHJcbiAgICAgICAgcmVxdWVzdFN0ciA6IFN0cmluZztcclxuXHJcbiAgICAgICAgcHVibGljIGNvbnN0cnVjdG9yKCByZXF1ZXN0U3RyaW5nIDogc3RyaW5nICwgaGFuZGxlciA6IElGaWxlUmVxdWVzdFJlc3BvbnNlICl7XHJcblxyXG4gICAgICAgICAgICB0aGlzLnJlcXVlc3RTdHIgPSByZXF1ZXN0U3RyaW5nO1xyXG4gICAgICAgICAgICB0aGlzLmhhbmRsZXIgPSBoYW5kbGVyO1xyXG5cclxuICAgICAgICAgICAgTWVzc2FnZUJ1cy5hZGRTdWJzY3JpcHRpb24oTUVTU0FHRV9BU1NFVF9MT0FERVJfQVNTRVRfTE9BREVEICsgIHJlcXVlc3RTdHJpbmcsIHRoaXMpOyAgICAgICAgXHJcbiAgICAgICAgICAgIHRoaXMuY29udGVudCA9IEFzc2V0TWFuYWdlci5nZXRBc3NldChyZXF1ZXN0U3RyaW5nKTtcclxuICAgICAgICAgICAgaWYoIHRoaXMuY29udGVudCAhPSB1bmRlZmluZWQgfHwgdGhpcy5jb250ZW50ICE9IG51bGwpe1xyXG4gICAgICAgICAgICAgICAgTWVzc2FnZUJ1cy5yZW1vdmVTdWJzY3JpcHRpb24oTUVTU0FHRV9BU1NFVF9MT0FERVJfQVNTRVRfTE9BREVEICsgIHJlcXVlc3RTdHJpbmcsIHRoaXMpOyAgICAgICAgXHJcbiAgICAgICAgICAgICAgICB0aGlzLmhhbmRsZXIub25GaWxlUmVjaWV2ZWQodGhpcy5jb250ZW50LmRhdGEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgb25NZXNzYWdlKG1lc3NhZ2UgOiBNZXNzYWdlKXtcclxuICAgICAgICAgICAgdGhpcy5oYW5kbGVyLm9uRmlsZVJlY2lldmVkKG1lc3NhZ2UuY29udGV4dCApO1xyXG4gICAgICAgICAgICAvL01lc3NhZ2VCdXMucmVtb3ZlU3Vic2NyaXB0aW9uKE1FU1NBR0VfQVNTRVRfTE9BREVSX0FTU0VUX0xPQURFRCArICB0aGlzLnJlcXVlc3RTdHIsIHRoaXMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH1cclxuXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Loader/FileReuqest.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Loader/Message/Message.ts":
/*!*************************************************!*\
  !*** ./src/WEBGL/src/Loader/Message/Message.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MessagePriority\": () => (/* binding */ MessagePriority),\n/* harmony export */   \"Message\": () => (/* binding */ Message)\n/* harmony export */ });\n/* harmony import */ var _MessageBus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MessageBus */ \"./src/WEBGL/src/Loader/Message/MessageBus.ts\");\n// // Source https://www.youtube.com/watch?v=_wvvtCqXwYY&list=PLv8Ddw9K0JPiTHLMQw31Yh4qyTAcHRnJx&index=7 \r\n\r\nvar MessagePriority;\r\n(function (MessagePriority) {\r\n    MessagePriority[MessagePriority[\"NORMAL\"] = 0] = \"NORMAL\";\r\n    MessagePriority[MessagePriority[\"HIGH\"] = 1] = \"HIGH\";\r\n})(MessagePriority || (MessagePriority = {}));\r\n/**\r\n * @Message class er en kort besked om noget der sket i programmet\r\n// @code er den key der bliver brugt i MessageBus classen\r\n// @context dataen der sendes med\r\n// @sender er den classe der sender beskeden.\r\n// @priority en værdi der bruges til at enten gå i message Queuen eller gå directe til send. */\r\nclass Message {\r\n    constructor(code, sender, context, priority = MessagePriority.NORMAL) {\r\n        this.code = code;\r\n        this.sender = sender;\r\n        this.context = context;\r\n        this.priority = priority;\r\n    }\r\n    static send(code, sender, context) {\r\n        _MessageBus__WEBPACK_IMPORTED_MODULE_0__.MessageBus.post(new Message(code, sender, context, MessagePriority.NORMAL));\r\n    }\r\n    static sendPriority(code, sender, context) {\r\n        _MessageBus__WEBPACK_IMPORTED_MODULE_0__.MessageBus.post(new Message(code, sender, context, MessagePriority.HIGH));\r\n    }\r\n    static subscribe(code, handler) {\r\n        _MessageBus__WEBPACK_IMPORTED_MODULE_0__.MessageBus.addSubscription(code, handler);\r\n    }\r\n    static unSubscribe(code, handler) {\r\n        _MessageBus__WEBPACK_IMPORTED_MODULE_0__.MessageBus.removeSubscription(code, handler);\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL0xvYWRlci9NZXNzYWdlL01lc3NhZ2UudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEseUdBQXlHO0FBRy9EO0FBR3RDLElBQVksZUFHWDtBQUhELFdBQVksZUFBZTtJQUN2Qix5REFBTTtJQUNOLHFEQUFJO0FBQ1IsQ0FBQyxFQUhXLGVBQWUsS0FBZixlQUFlLFFBRzFCO0FBRUQ7Ozs7OytGQUsrRjtBQUN4RixNQUFNLE9BQU87SUFPaEIsWUFBbUIsSUFBVyxFQUFFLE1BQVUsRUFBRSxPQUFhLEVBQUUsV0FBMkIsZUFBZSxDQUFDLE1BQU07UUFDeEcsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7SUFDN0IsQ0FBQztJQUVNLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBYSxFQUFHLE1BQVksRUFBRSxPQUFhO1FBQzFELHdEQUFlLENBQUMsSUFBSSxPQUFPLENBQUMsSUFBSSxFQUFDLE1BQU0sRUFBQyxPQUFPLEVBQUUsZUFBZSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDOUUsQ0FBQztJQUVNLE1BQU0sQ0FBQyxZQUFZLENBQUMsSUFBYSxFQUFHLE1BQVksRUFBRSxPQUFhO1FBQ2xFLHdEQUFlLENBQUMsSUFBSSxPQUFPLENBQUMsSUFBSSxFQUFDLE1BQU0sRUFBQyxPQUFPLEVBQUUsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDNUUsQ0FBQztJQUVNLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBVyxFQUFFLE9BQXlCO1FBQzFELG1FQUEwQixDQUFDLElBQUksRUFBQyxPQUFPLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRU0sTUFBTSxDQUFDLFdBQVcsQ0FBQyxJQUFXLEVBQUUsT0FBeUI7UUFDNUQsc0VBQTZCLENBQUMsSUFBSSxFQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2hELENBQUM7Q0FDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmdsd2VicGFjay8uL3NyYy9XRUJHTC9zcmMvTG9hZGVyL01lc3NhZ2UvTWVzc2FnZS50cz82ZjBhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIC8vIFNvdXJjZSBodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PV93dnZ0Q3FYd1lZJmxpc3Q9UEx2OERkdzlLMEpQaVRITE1RdzMxWWg0cXlUQWNIUm5KeCZpbmRleD03IFxyXG5cclxuaW1wb3J0IHsgSU1lc3NhZ2VIYW5kbGVyIH0gZnJvbSBcIi4vSU1lc3NhZ2VIYW5kbGVyXCI7XHJcbmltcG9ydCB7IE1lc3NhZ2VCdXMgfSBmcm9tIFwiLi9NZXNzYWdlQnVzXCI7XHJcblxyXG4gICAgXHJcbiAgICBleHBvcnQgZW51bSBNZXNzYWdlUHJpb3JpdHl7XHJcbiAgICAgICAgTk9STUFMLFxyXG4gICAgICAgIEhJR0gsXHJcbiAgICB9XHJcblxyXG4gICAgLyoqIFxyXG4gICAgICogQE1lc3NhZ2UgY2xhc3MgZXIgZW4ga29ydCBiZXNrZWQgb20gbm9nZXQgZGVyIHNrZXQgaSBwcm9ncmFtbWV0XHJcbiAgICAvLyBAY29kZSBlciBkZW4ga2V5IGRlciBibGl2ZXIgYnJ1Z3QgaSBNZXNzYWdlQnVzIGNsYXNzZW4gXHJcbiAgICAvLyBAY29udGV4dCBkYXRhZW4gZGVyIHNlbmRlcyBtZWRcclxuICAgIC8vIEBzZW5kZXIgZXIgZGVuIGNsYXNzZSBkZXIgc2VuZGVyIGJlc2tlZGVuLiBcclxuICAgIC8vIEBwcmlvcml0eSBlbiB2w6ZyZGkgZGVyIGJydWdlcyB0aWwgYXQgZW50ZW4gZ8OlIGkgbWVzc2FnZSBRdWV1ZW4gZWxsZXIgZ8OlIGRpcmVjdGUgdGlsIHNlbmQuICovXHJcbiAgICBleHBvcnQgY2xhc3MgTWVzc2FnZXtcclxuICAgICAgICBcclxuICAgICAgICBwdWJsaWMgY29kZTogc3RyaW5nO1xyXG4gICAgICAgIHB1YmxpYyBjb250ZXh0OiBhbnk7XHJcbiAgICAgICAgcHVibGljIHNlbmRlcjogYW55O1xyXG4gICAgICAgIHB1YmxpYyBwcmlvcml0eTogTWVzc2FnZVByaW9yaXR5O1xyXG5cclxuICAgICAgICBwdWJsaWMgY29uc3RydWN0b3IoY29kZTpzdHJpbmcsIHNlbmRlcjphbnksIGNvbnRleHQ/OiBhbnksIHByaW9yaXR5Ok1lc3NhZ2VQcmlvcml0eSA9IE1lc3NhZ2VQcmlvcml0eS5OT1JNQUwpe1xyXG4gICAgICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xyXG4gICAgICAgICAgICB0aGlzLnNlbmRlciA9IHNlbmRlcjtcclxuICAgICAgICAgICAgdGhpcy5jb250ZXh0ID0gY29udGV4dDtcclxuICAgICAgICAgICAgdGhpcy5wcmlvcml0eSA9IHByaW9yaXR5O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHVibGljIHN0YXRpYyBzZW5kKGNvZGUgOiBzdHJpbmcgLCBzZW5kZXIgOiBhbnksIGNvbnRleHQ/OiBhbnkpOnZvaWR7XHJcbiAgICAgICAgICAgIE1lc3NhZ2VCdXMucG9zdChuZXcgTWVzc2FnZShjb2RlLHNlbmRlcixjb250ZXh0LCBNZXNzYWdlUHJpb3JpdHkuTk9STUFMKSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgc3RhdGljIHNlbmRQcmlvcml0eShjb2RlIDogc3RyaW5nICwgc2VuZGVyIDogYW55LCBjb250ZXh0PzogYW55KTp2b2lke1xyXG4gICAgICAgICAgICBNZXNzYWdlQnVzLnBvc3QobmV3IE1lc3NhZ2UoY29kZSxzZW5kZXIsY29udGV4dCwgTWVzc2FnZVByaW9yaXR5LkhJR0gpKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgc3Vic2NyaWJlKGNvZGU6c3RyaW5nLCBoYW5kbGVyIDogSU1lc3NhZ2VIYW5kbGVyKTp2b2lkIHtcclxuICAgICAgICAgICAgTWVzc2FnZUJ1cy5hZGRTdWJzY3JpcHRpb24oY29kZSxoYW5kbGVyKTsgICAgICAgICAgICBcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgdW5TdWJzY3JpYmUoY29kZTpzdHJpbmcsIGhhbmRsZXIgOiBJTWVzc2FnZUhhbmRsZXIpOnZvaWQge1xyXG4gICAgICAgICAgICBNZXNzYWdlQnVzLnJlbW92ZVN1YnNjcmlwdGlvbihjb2RlLGhhbmRsZXIpOyAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Loader/Message/Message.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Loader/Message/MessageBus.ts":
/*!****************************************************!*\
  !*** ./src/WEBGL/src/Loader/Message/MessageBus.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MessageBus\": () => (/* binding */ MessageBus)\n/* harmony export */ });\n/* harmony import */ var _Message__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Message */ \"./src/WEBGL/src/Loader/Message/Message.ts\");\n/* harmony import */ var _MessageSubscriptionNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MessageSubscriptionNode */ \"./src/WEBGL/src/Loader/Message/MessageSubscriptionNode.ts\");\n// // Source https://www.youtube.com/watch?v=_wvvtCqXwYY&list=PLv8Ddw9K0JPiTHLMQw31Yh4qyTAcHRnJx&index=7 \r\n\r\n\r\n/**\r\n *  forklaring\r\n@code er et keyword der mapper hvor dataen ligger.\r\n@IMessageHandler er et simpelt listener pattern.\r\n@subscriptions er en array and arrays af IMessageHandlers . Så flere steder kan lytte til om messages kommer ud\r\n\r\n@POST er en metode der Ser efter listeners \"subscribers\" til en specifik \"code\"\r\nog for hver listener til den \"code\" sender et onMessage() signal.\r\n\r\ndenne classe implementere også en que. sådan at man kan begrænse antal \"messages\" der biver sendt*/\r\nclass MessageBus {\r\n    constructor() { }\r\n    ;\r\n    static addSubscription(code, handler) {\r\n        if (MessageBus._subscriptions[code] === undefined) {\r\n            MessageBus._subscriptions[code] = [];\r\n        }\r\n        if (MessageBus._subscriptions[code].indexOf(handler) !== -1) { // if this hanlder exists \r\n            console.warn(\"attempt to add a duplicate handler\" + code + \". subscription not added\");\r\n        }\r\n        else {\r\n            MessageBus._subscriptions[code].push(handler);\r\n        }\r\n    }\r\n    static removeSubscription(code, handler) {\r\n        if (MessageBus._subscriptions[code] === undefined) {\r\n            console.warn(\"cannot unsubscribe handler from \" + code + \". because\" + code + \"is not subscribed to\");\r\n            return;\r\n        }\r\n        let nodeIndex = MessageBus._subscriptions[code].indexOf(handler);\r\n        if (nodeIndex !== -1) { // if this hanlder exists \r\n            console.warn(\"cannot unsubscribe handler from \" + code + \". because\" + code + \"is not subscribed to\");\r\n            MessageBus._subscriptions[code].splice(nodeIndex, 1);\r\n        }\r\n    }\r\n    static post(message) {\r\n        //console.log(\"message posted:\", message);\r\n        let handlers = MessageBus._subscriptions[message.code];\r\n        if (handlers === undefined)\r\n            return;\r\n        for (let i = 0; i < handlers.length; i++) {\r\n            let h = handlers[i];\r\n            if (message.priority = _Message__WEBPACK_IMPORTED_MODULE_0__.MessagePriority.HIGH) {\r\n                h.onMessage(message);\r\n            }\r\n            else {\r\n                MessageBus._normalQueMessage.push(new _MessageSubscriptionNode__WEBPACK_IMPORTED_MODULE_1__.MessageSubscriptionNode(message, h));\r\n            }\r\n        }\r\n    }\r\n    static update(time) {\r\n        if (MessageBus._normalQueMessage.length == 0)\r\n            return;\r\n        let messageLimit = Math.min(MessageBus._normalQueMessagePrUpdate, MessageBus._normalQueMessage.length);\r\n        for (let i = 0; i < messageLimit; i++) {\r\n            let node = MessageBus._normalQueMessage.pop();\r\n            node.handler.onMessage(node.message);\r\n        }\r\n    }\r\n}\r\nMessageBus._subscriptions = {};\r\nMessageBus._normalQueMessagePrUpdate = 10;\r\nMessageBus._normalQueMessage = [];\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL0xvYWRlci9NZXNzYWdlL01lc3NhZ2VCdXMudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEseUdBQXlHO0FBR3BEO0FBQ2U7QUFFaEU7Ozs7Ozs7OzttR0FTbUc7QUFDNUYsTUFBTSxVQUFVO0lBT25CLGdCQUFzQixDQUFDO0lBRjJDLENBQUM7SUFJNUQsTUFBTSxDQUFDLGVBQWUsQ0FBQyxJQUFXLEVBQUUsT0FBdUI7UUFDOUQsSUFBRyxVQUFVLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxLQUFLLFNBQVMsRUFBRTtZQUM5QyxVQUFVLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztTQUN4QztRQUVELElBQUcsVUFBVSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUUsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUMsRUFBRSwwQkFBMEI7WUFDcEYsT0FBTyxDQUFDLElBQUksQ0FBQyxvQ0FBb0MsR0FBRyxJQUFJLEdBQUcsMEJBQTBCLENBQUMsQ0FBQztTQUMxRjthQUFJO1lBQ0QsVUFBVSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDakQ7SUFDTCxDQUFDO0lBRU0sTUFBTSxDQUFDLGtCQUFrQixDQUFDLElBQVcsRUFBRSxPQUF1QjtRQUNsRSxJQUFHLFVBQVUsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEtBQUssU0FBUyxFQUFFO1lBQzdDLE9BQU8sQ0FBQyxJQUFJLENBQUMsa0NBQWtDLEdBQUcsSUFBSSxHQUFHLFdBQVcsR0FBRyxJQUFJLEdBQUcsc0JBQXNCLENBQUMsQ0FBQztZQUN0RyxPQUFPO1NBQ1Y7UUFDRCxJQUFJLFNBQVMsR0FBRyxVQUFVLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBRSxPQUFPLENBQUM7UUFDakUsSUFBRyxTQUFTLEtBQUssQ0FBQyxDQUFDLEVBQUMsRUFBRSwwQkFBMEI7WUFDNUMsT0FBTyxDQUFDLElBQUksQ0FBQyxrQ0FBa0MsR0FBRyxJQUFJLEdBQUcsV0FBVyxHQUFHLElBQUksR0FBRyxzQkFBc0IsQ0FBQyxDQUFDO1lBQ3RHLFVBQVUsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQztTQUN4RDtJQUNMLENBQUM7SUFFTSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQWdCO1FBQy9CLDBDQUEwQztRQUMxQyxJQUFJLFFBQVEsR0FBRyxVQUFVLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN2RCxJQUFHLFFBQVEsS0FBSyxTQUFTO1lBQ3JCLE9BQU87UUFFWCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUN0QyxJQUFJLENBQUMsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ25CLElBQUcsT0FBTyxDQUFDLFFBQVEsR0FBRywwREFBb0IsRUFBQztnQkFDdkMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQzthQUN4QjtpQkFBSTtnQkFDRCxVQUFVLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLElBQUksNkVBQXVCLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDOUU7U0FDSjtJQUNMLENBQUM7SUFFTSxNQUFNLENBQUMsTUFBTSxDQUFDLElBQVc7UUFDNUIsSUFBRyxVQUFVLENBQUMsaUJBQWlCLENBQUMsTUFBTSxJQUFJLENBQUM7WUFDdkMsT0FBTztRQUVYLElBQUksWUFBWSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLHlCQUF5QixFQUFFLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUUsQ0FBQztRQUN4RyxLQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBQyxDQUFDLEdBQUcsWUFBWSxFQUFFLENBQUMsRUFBRSxFQUFDO1lBQ2hDLElBQUksSUFBSSxHQUFHLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsQ0FBQztZQUM5QyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDeEM7SUFDTCxDQUFDOztBQXhEYyx5QkFBYyxHQUF1QyxFQUFFO0FBRXZELG9DQUF5QixHQUFZLEVBQUUsQ0FBQztBQUN4Qyw0QkFBaUIsR0FBK0IsRUFBRSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViZ2x3ZWJwYWNrLy4vc3JjL1dFQkdML3NyYy9Mb2FkZXIvTWVzc2FnZS9NZXNzYWdlQnVzLnRzPzc5MTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gLy8gU291cmNlIGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9X3d2dnRDcVh3WVkmbGlzdD1QTHY4RGR3OUswSlBpVEhMTVF3MzFZaDRxeVRBY0hSbkp4JmluZGV4PTcgXHJcblxyXG5pbXBvcnQgeyBJTWVzc2FnZUhhbmRsZXIgfSBmcm9tIFwiLi9JTWVzc2FnZUhhbmRsZXJcIjtcclxuaW1wb3J0IHsgTWVzc2FnZSwgTWVzc2FnZVByaW9yaXR5IH0gZnJvbSBcIi4vTWVzc2FnZVwiO1xyXG5pbXBvcnQgeyBNZXNzYWdlU3Vic2NyaXB0aW9uTm9kZSB9IGZyb20gXCIuL01lc3NhZ2VTdWJzY3JpcHRpb25Ob2RlXCI7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiAgZm9ya2xhcmluZyBcclxuICAgIEBjb2RlIGVyIGV0IGtleXdvcmQgZGVyIG1hcHBlciBodm9yIGRhdGFlbiBsaWdnZXIuIFxyXG4gICAgQElNZXNzYWdlSGFuZGxlciBlciBldCBzaW1wZWx0IGxpc3RlbmVyIHBhdHRlcm4uIFxyXG4gICAgQHN1YnNjcmlwdGlvbnMgZXIgZW4gYXJyYXkgYW5kIGFycmF5cyBhZiBJTWVzc2FnZUhhbmRsZXJzIC4gU8OlIGZsZXJlIHN0ZWRlciBrYW4gbHl0dGUgdGlsIG9tIG1lc3NhZ2VzIGtvbW1lciB1ZFxyXG5cclxuICAgIEBQT1NUIGVyIGVuIG1ldG9kZSBkZXIgU2VyIGVmdGVyIGxpc3RlbmVycyBcInN1YnNjcmliZXJzXCIgdGlsIGVuIHNwZWNpZmlrIFwiY29kZVwiXHJcbiAgICBvZyBmb3IgaHZlciBsaXN0ZW5lciB0aWwgZGVuIFwiY29kZVwiIHNlbmRlciBldCBvbk1lc3NhZ2UoKSBzaWduYWwuIFxyXG5cclxuICAgIGRlbm5lIGNsYXNzZSBpbXBsZW1lbnRlcmUgb2dzw6UgZW4gcXVlLiBzw6VkYW4gYXQgbWFuIGthbiBiZWdyw6Zuc2UgYW50YWwgXCJtZXNzYWdlc1wiIGRlciBiaXZlciBzZW5kdCovXHJcbiAgICBleHBvcnQgY2xhc3MgTWVzc2FnZUJ1c3tcclxuXHJcbiAgICAgICAgcHJpdmF0ZSBzdGF0aWMgX3N1YnNjcmlwdGlvbnM6IHtbY29kZTpzdHJpbmddOklNZXNzYWdlSGFuZGxlcltdIH0gPSB7fVxyXG4gICAgICAgIFxyXG4gICAgICAgIHByaXZhdGUgc3RhdGljIF9ub3JtYWxRdWVNZXNzYWdlUHJVcGRhdGUgOiBudW1iZXIgPSAxMDtcclxuICAgICAgICBwcml2YXRlIHN0YXRpYyBfbm9ybWFsUXVlTWVzc2FnZSA6IE1lc3NhZ2VTdWJzY3JpcHRpb25Ob2RlW10gPSBbXTs7XHJcblxyXG4gICAgICAgIHByaXZhdGUgY29uc3RydWN0b3IoKXt9XHJcblxyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgYWRkU3Vic2NyaXB0aW9uKGNvZGU6c3RyaW5nLCBoYW5kbGVyOklNZXNzYWdlSGFuZGxlcil7XHJcbiAgICAgICAgICAgIGlmKE1lc3NhZ2VCdXMuX3N1YnNjcmlwdGlvbnNbY29kZV0gPT09IHVuZGVmaW5lZCApe1xyXG4gICAgICAgICAgICAgICAgTWVzc2FnZUJ1cy5fc3Vic2NyaXB0aW9uc1tjb2RlXSA9IFtdO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZihNZXNzYWdlQnVzLl9zdWJzY3JpcHRpb25zW2NvZGVdLmluZGV4T2YoIGhhbmRsZXIpICE9PSAtMSl7IC8vIGlmIHRoaXMgaGFubGRlciBleGlzdHMgXHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oXCJhdHRlbXB0IHRvIGFkZCBhIGR1cGxpY2F0ZSBoYW5kbGVyXCIgKyBjb2RlICsgXCIuIHN1YnNjcmlwdGlvbiBub3QgYWRkZWRcIik7XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgTWVzc2FnZUJ1cy5fc3Vic2NyaXB0aW9uc1tjb2RlXS5wdXNoKGhhbmRsZXIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgc3RhdGljIHJlbW92ZVN1YnNjcmlwdGlvbihjb2RlOnN0cmluZywgaGFuZGxlcjpJTWVzc2FnZUhhbmRsZXIpe1xyXG4gICAgICAgICAgIGlmKE1lc3NhZ2VCdXMuX3N1YnNjcmlwdGlvbnNbY29kZV0gPT09IHVuZGVmaW5lZCApe1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKFwiY2Fubm90IHVuc3Vic2NyaWJlIGhhbmRsZXIgZnJvbSBcIiArIGNvZGUgKyBcIi4gYmVjYXVzZVwiICsgY29kZSArIFwiaXMgbm90IHN1YnNjcmliZWQgdG9cIik7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbGV0IG5vZGVJbmRleCA9IE1lc3NhZ2VCdXMuX3N1YnNjcmlwdGlvbnNbY29kZV0uaW5kZXhPZiggaGFuZGxlcilcclxuICAgICAgICAgICAgaWYobm9kZUluZGV4ICE9PSAtMSl7IC8vIGlmIHRoaXMgaGFubGRlciBleGlzdHMgXHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oXCJjYW5ub3QgdW5zdWJzY3JpYmUgaGFuZGxlciBmcm9tIFwiICsgY29kZSArIFwiLiBiZWNhdXNlXCIgKyBjb2RlICsgXCJpcyBub3Qgc3Vic2NyaWJlZCB0b1wiKTtcclxuICAgICAgICAgICAgICAgIE1lc3NhZ2VCdXMuX3N1YnNjcmlwdGlvbnNbY29kZV0uc3BsaWNlKG5vZGVJbmRleCwgMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgcG9zdChtZXNzYWdlOiBNZXNzYWdlKTp2b2lke1xyXG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwibWVzc2FnZSBwb3N0ZWQ6XCIsIG1lc3NhZ2UpO1xyXG4gICAgICAgICAgICBsZXQgaGFuZGxlcnMgPSBNZXNzYWdlQnVzLl9zdWJzY3JpcHRpb25zW21lc3NhZ2UuY29kZV07XHJcbiAgICAgICAgICAgIGlmKGhhbmRsZXJzID09PSB1bmRlZmluZWQpXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGhhbmRsZXJzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgaCA9IGhhbmRsZXJzW2ldXHJcbiAgICAgICAgICAgICAgICBpZihtZXNzYWdlLnByaW9yaXR5ID0gTWVzc2FnZVByaW9yaXR5LkhJR0gpe1xyXG4gICAgICAgICAgICAgICAgICAgIGgub25NZXNzYWdlKG1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgTWVzc2FnZUJ1cy5fbm9ybWFsUXVlTWVzc2FnZS5wdXNoKG5ldyBNZXNzYWdlU3Vic2NyaXB0aW9uTm9kZShtZXNzYWdlLCBoKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgdXBkYXRlKHRpbWU6bnVtYmVyICk6dm9pZHtcclxuICAgICAgICAgICAgaWYoTWVzc2FnZUJ1cy5fbm9ybWFsUXVlTWVzc2FnZS5sZW5ndGggPT0gMClcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGxldCBtZXNzYWdlTGltaXQgPSBNYXRoLm1pbihNZXNzYWdlQnVzLl9ub3JtYWxRdWVNZXNzYWdlUHJVcGRhdGUgLE1lc3NhZ2VCdXMuX25vcm1hbFF1ZU1lc3NhZ2UubGVuZ3RoICk7XHJcbiAgICAgICAgICAgIGZvcihsZXQgaSA9IDA7aSA8IG1lc3NhZ2VMaW1pdDsgaSsrKXtcclxuICAgICAgICAgICAgICAgIGxldCBub2RlID0gTWVzc2FnZUJ1cy5fbm9ybWFsUXVlTWVzc2FnZS5wb3AoKTtcclxuICAgICAgICAgICAgICAgIG5vZGUuaGFuZGxlci5vbk1lc3NhZ2Uobm9kZS5tZXNzYWdlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Loader/Message/MessageBus.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Loader/Message/MessageSubscriptionNode.ts":
/*!*****************************************************************!*\
  !*** ./src/WEBGL/src/Loader/Message/MessageSubscriptionNode.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MessageSubscriptionNode\": () => (/* binding */ MessageSubscriptionNode)\n/* harmony export */ });\nclass MessageSubscriptionNode {\r\n    constructor(message, handler) {\r\n        this.message = message;\r\n        this.handler = handler;\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL0xvYWRlci9NZXNzYWdlL01lc3NhZ2VTdWJzY3JpcHRpb25Ob2RlLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFHVyxNQUFNLHVCQUF1QjtJQUloQyxZQUFtQixPQUFlLEVBQUUsT0FBdUI7UUFDdkQsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7SUFDM0IsQ0FBQztDQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViZ2x3ZWJwYWNrLy4vc3JjL1dFQkdML3NyYy9Mb2FkZXIvTWVzc2FnZS9NZXNzYWdlU3Vic2NyaXB0aW9uTm9kZS50cz8zMDYwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElNZXNzYWdlSGFuZGxlciB9IGZyb20gXCIuL0lNZXNzYWdlSGFuZGxlclwiO1xyXG5pbXBvcnQgeyBNZXNzYWdlIH0gZnJvbSBcIi4vTWVzc2FnZVwiO1xyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBNZXNzYWdlU3Vic2NyaXB0aW9uTm9kZXtcclxuICAgICAgICBwdWJsaWMgbWVzc2FnZTpNZXNzYWdlO1xyXG4gICAgICAgIHB1YmxpYyBoYW5kbGVyOiBJTWVzc2FnZUhhbmRsZXI7XHJcblxyXG4gICAgICAgIHB1YmxpYyBjb25zdHJ1Y3RvcihtZXNzYWdlOk1lc3NhZ2UsIGhhbmRsZXI6SU1lc3NhZ2VIYW5kbGVyKXtcclxuICAgICAgICAgICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcclxuICAgICAgICAgICAgdGhpcy5oYW5kbGVyID0gaGFuZGxlcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Loader/Message/MessageSubscriptionNode.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Math/TSM_Library/constants.ts":
/*!*****************************************************!*\
  !*** ./src/WEBGL/src/Math/TSM_Library/constants.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"epsilon\": () => (/* binding */ epsilon),\n/* harmony export */   \"toRadians\": () => (/* binding */ toRadians)\n/* harmony export */ });\nconst epsilon = 0.00001;\r\nfunction toRadians(value) {\r\n    var r = 1.0174532924;\r\n    return (r * value);\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL01hdGgvVFNNX0xpYnJhcnkvY29uc3RhbnRzLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQ1csTUFBTSxPQUFPLEdBQUcsT0FBTztBQUd2QixTQUFTLFNBQVMsQ0FBQyxLQUFZO0lBQ2xDLElBQUksQ0FBQyxHQUFHLFlBQVksQ0FBQztJQUNyQixPQUFPLENBQUMsQ0FBQyxHQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3JCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJnbHdlYnBhY2svLi9zcmMvV0VCR0wvc3JjL01hdGgvVFNNX0xpYnJhcnkvY29uc3RhbnRzLnRzPzA5MGUiXSwic291cmNlc0NvbnRlbnQiOlsiXHJcbiAgICBleHBvcnQgY29uc3QgZXBzaWxvbiA9IDAuMDAwMDFcclxuXHJcblxyXG4gICAgZXhwb3J0IGZ1bmN0aW9uIHRvUmFkaWFucyh2YWx1ZTpudW1iZXIpOm51bWJlcntcclxuICAgICAgICB2YXIgciA9IDEuMDE3NDUzMjkyNDtcclxuICAgICAgICByZXR1cm4gKHIqdmFsdWUpO1xyXG4gICAgfVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Math/TSM_Library/constants.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Math/TSM_Library/mat3.ts":
/*!************************************************!*\
  !*** ./src/WEBGL/src/Math/TSM_Library/mat3.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mat3\": () => (/* binding */ mat3)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/WEBGL/src/Math/TSM_Library/constants.ts\");\n/* harmony import */ var _mat4__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mat4 */ \"./src/WEBGL/src/Math/TSM_Library/mat4.ts\");\n/* harmony import */ var _quat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./quat */ \"./src/WEBGL/src/Math/TSM_Library/quat.ts\");\n/* harmony import */ var _vec2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vec2 */ \"./src/WEBGL/src/Math/TSM_Library/vec2.ts\");\n/* harmony import */ var _vec3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./vec3 */ \"./src/WEBGL/src/Math/TSM_Library/vec3.ts\");\n\r\n\r\n\r\n\r\n\r\nclass mat3 {\r\n    constructor(values) {\r\n        this.values = new Float32Array(9);\r\n        if (values !== undefined) {\r\n            this.init(values);\r\n        }\r\n    }\r\n    at(index) {\r\n        return this.values[index];\r\n    }\r\n    init(values) {\r\n        for (let i = 0; i < 9; i++) {\r\n            this.values[i] = values[i];\r\n        }\r\n        return this;\r\n    }\r\n    reset() {\r\n        for (let i = 0; i < 9; i++) {\r\n            this.values[i] = 0;\r\n        }\r\n    }\r\n    copy(dest) {\r\n        if (!dest) {\r\n            dest = new mat3();\r\n        }\r\n        for (let i = 0; i < 9; i++) {\r\n            dest.values[i] = this.values[i];\r\n        }\r\n        return dest;\r\n    }\r\n    all() {\r\n        const data = [];\r\n        for (let i = 0; i < 9; i++) {\r\n            data[i] = this.values[i];\r\n        }\r\n        return data;\r\n    }\r\n    row(index) {\r\n        return [\r\n            this.values[index * 3 + 0],\r\n            this.values[index * 3 + 1],\r\n            this.values[index * 3 + 2],\r\n        ];\r\n    }\r\n    col(index) {\r\n        return [\r\n            this.values[index],\r\n            this.values[index + 3],\r\n            this.values[index + 6],\r\n        ];\r\n    }\r\n    equals(matrix, threshold = _constants__WEBPACK_IMPORTED_MODULE_0__.epsilon) {\r\n        for (let i = 0; i < 9; i++) {\r\n            if (Math.abs(this.values[i] - matrix.at(i)) > threshold) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    determinant() {\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a10 = this.values[3];\r\n        const a11 = this.values[4];\r\n        const a12 = this.values[5];\r\n        const a20 = this.values[6];\r\n        const a21 = this.values[7];\r\n        const a22 = this.values[8];\r\n        const det01 = a22 * a11 - a12 * a21;\r\n        const det11 = -a22 * a10 + a12 * a20;\r\n        const det21 = a21 * a10 - a11 * a20;\r\n        return a00 * det01 + a01 * det11 + a02 * det21;\r\n    }\r\n    setIdentity() {\r\n        this.values[0] = 1;\r\n        this.values[1] = 0;\r\n        this.values[2] = 0;\r\n        this.values[3] = 0;\r\n        this.values[4] = 1;\r\n        this.values[5] = 0;\r\n        this.values[6] = 0;\r\n        this.values[7] = 0;\r\n        this.values[8] = 1;\r\n        return this;\r\n    }\r\n    transpose() {\r\n        const temp01 = this.values[1];\r\n        const temp02 = this.values[2];\r\n        const temp12 = this.values[5];\r\n        this.values[1] = this.values[3];\r\n        this.values[2] = this.values[6];\r\n        this.values[3] = temp01;\r\n        this.values[5] = this.values[7];\r\n        this.values[6] = temp02;\r\n        this.values[7] = temp12;\r\n        return this;\r\n    }\r\n    inverse() {\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a10 = this.values[3];\r\n        const a11 = this.values[4];\r\n        const a12 = this.values[5];\r\n        const a20 = this.values[6];\r\n        const a21 = this.values[7];\r\n        const a22 = this.values[8];\r\n        const det01 = a22 * a11 - a12 * a21;\r\n        const det11 = -a22 * a10 + a12 * a20;\r\n        const det21 = a21 * a10 - a11 * a20;\r\n        let det = a00 * det01 + a01 * det11 + a02 * det21;\r\n        if (!det) {\r\n            return null;\r\n        }\r\n        det = 1.0 / det;\r\n        this.values[0] = det01 * det;\r\n        this.values[1] = (-a22 * a01 + a02 * a21) * det;\r\n        this.values[2] = (a12 * a01 - a02 * a11) * det;\r\n        this.values[3] = det11 * det;\r\n        this.values[4] = (a22 * a00 - a02 * a20) * det;\r\n        this.values[5] = (-a12 * a00 + a02 * a10) * det;\r\n        this.values[6] = det21 * det;\r\n        this.values[7] = (-a21 * a00 + a01 * a20) * det;\r\n        this.values[8] = (a11 * a00 - a01 * a10) * det;\r\n        return this;\r\n    }\r\n    multiply(matrix) {\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a10 = this.values[3];\r\n        const a11 = this.values[4];\r\n        const a12 = this.values[5];\r\n        const a20 = this.values[6];\r\n        const a21 = this.values[7];\r\n        const a22 = this.values[8];\r\n        const b00 = matrix.at(0);\r\n        const b01 = matrix.at(1);\r\n        const b02 = matrix.at(2);\r\n        const b10 = matrix.at(3);\r\n        const b11 = matrix.at(4);\r\n        const b12 = matrix.at(5);\r\n        const b20 = matrix.at(6);\r\n        const b21 = matrix.at(7);\r\n        const b22 = matrix.at(8);\r\n        this.values[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n        this.values[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n        this.values[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n        this.values[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n        this.values[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n        this.values[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n        this.values[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n        this.values[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n        this.values[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n        return this;\r\n    }\r\n    multiplyVec2(vector, result) {\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        if (result) {\r\n            result.xy = [\r\n                x * this.values[0] + y * this.values[3] + this.values[6],\r\n                x * this.values[1] + y * this.values[4] + this.values[7],\r\n            ];\r\n            return result;\r\n        }\r\n        else {\r\n            return new _vec2__WEBPACK_IMPORTED_MODULE_3__.vec2([\r\n                x * this.values[0] + y * this.values[3] + this.values[6],\r\n                x * this.values[1] + y * this.values[4] + this.values[7],\r\n            ]);\r\n        }\r\n    }\r\n    multiplyVec3(vector, result) {\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        if (result) {\r\n            result.xyz = [\r\n                x * this.values[0] + y * this.values[3] + z * this.values[6],\r\n                x * this.values[1] + y * this.values[4] + z * this.values[7],\r\n                x * this.values[2] + y * this.values[5] + z * this.values[8],\r\n            ];\r\n            return result;\r\n        }\r\n        else {\r\n            return new _vec3__WEBPACK_IMPORTED_MODULE_4__.vec3([\r\n                x * this.values[0] + y * this.values[3] + z * this.values[6],\r\n                x * this.values[1] + y * this.values[4] + z * this.values[7],\r\n                x * this.values[2] + y * this.values[5] + z * this.values[8],\r\n            ]);\r\n        }\r\n    }\r\n    toMat4(result) {\r\n        if (result) {\r\n            result.init([\r\n                this.values[0],\r\n                this.values[1],\r\n                this.values[2],\r\n                0,\r\n                this.values[3],\r\n                this.values[4],\r\n                this.values[5],\r\n                0,\r\n                this.values[6],\r\n                this.values[7],\r\n                this.values[8],\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                1,\r\n            ]);\r\n            return result;\r\n        }\r\n        else {\r\n            return new _mat4__WEBPACK_IMPORTED_MODULE_1__.mat4([\r\n                this.values[0],\r\n                this.values[1],\r\n                this.values[2],\r\n                0,\r\n                this.values[3],\r\n                this.values[4],\r\n                this.values[5],\r\n                0,\r\n                this.values[6],\r\n                this.values[7],\r\n                this.values[8],\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                1,\r\n            ]);\r\n        }\r\n    }\r\n    toQuat() {\r\n        const m00 = this.values[0];\r\n        const m01 = this.values[1];\r\n        const m02 = this.values[2];\r\n        const m10 = this.values[3];\r\n        const m11 = this.values[4];\r\n        const m12 = this.values[5];\r\n        const m20 = this.values[6];\r\n        const m21 = this.values[7];\r\n        const m22 = this.values[8];\r\n        const fourXSquaredMinus1 = m00 - m11 - m22;\r\n        const fourYSquaredMinus1 = m11 - m00 - m22;\r\n        const fourZSquaredMinus1 = m22 - m00 - m11;\r\n        const fourWSquaredMinus1 = m00 + m11 + m22;\r\n        let biggestIndex = 0;\r\n        let fourBiggestSquaredMinus1 = fourWSquaredMinus1;\r\n        if (fourXSquaredMinus1 > fourBiggestSquaredMinus1) {\r\n            fourBiggestSquaredMinus1 = fourXSquaredMinus1;\r\n            biggestIndex = 1;\r\n        }\r\n        if (fourYSquaredMinus1 > fourBiggestSquaredMinus1) {\r\n            fourBiggestSquaredMinus1 = fourYSquaredMinus1;\r\n            biggestIndex = 2;\r\n        }\r\n        if (fourZSquaredMinus1 > fourBiggestSquaredMinus1) {\r\n            fourBiggestSquaredMinus1 = fourZSquaredMinus1;\r\n            biggestIndex = 3;\r\n        }\r\n        const biggestVal = Math.sqrt(fourBiggestSquaredMinus1 + 1) * 0.5;\r\n        const mult = 0.25 / biggestVal;\r\n        const result = new _quat__WEBPACK_IMPORTED_MODULE_2__.quat();\r\n        switch (biggestIndex) {\r\n            case 0:\r\n                result.w = biggestVal;\r\n                result.x = (m12 - m21) * mult;\r\n                result.y = (m20 - m02) * mult;\r\n                result.z = (m01 - m10) * mult;\r\n                break;\r\n            case 1:\r\n                result.w = (m12 - m21) * mult;\r\n                result.x = biggestVal;\r\n                result.y = (m01 + m10) * mult;\r\n                result.z = (m20 + m02) * mult;\r\n                break;\r\n            case 2:\r\n                result.w = (m20 - m02) * mult;\r\n                result.x = (m01 + m10) * mult;\r\n                result.y = biggestVal;\r\n                result.z = (m12 + m21) * mult;\r\n                break;\r\n            case 3:\r\n                result.w = (m01 - m10) * mult;\r\n                result.x = (m20 + m02) * mult;\r\n                result.y = (m12 + m21) * mult;\r\n                result.z = biggestVal;\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    rotate(angle, axis) {\r\n        let x = axis.x;\r\n        let y = axis.y;\r\n        let z = axis.z;\r\n        let length = Math.sqrt(x * x + y * y + z * z);\r\n        if (!length) {\r\n            return null;\r\n        }\r\n        if (length !== 1) {\r\n            length = 1 / length;\r\n            x *= length;\r\n            y *= length;\r\n            z *= length;\r\n        }\r\n        const s = Math.sin(angle);\r\n        const c = Math.cos(angle);\r\n        const t = 1.0 - c;\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a10 = this.values[4];\r\n        const a11 = this.values[5];\r\n        const a12 = this.values[6];\r\n        const a20 = this.values[8];\r\n        const a21 = this.values[9];\r\n        const a22 = this.values[10];\r\n        const b00 = x * x * t + c;\r\n        const b01 = y * x * t + z * s;\r\n        const b02 = z * x * t - y * s;\r\n        const b10 = x * y * t - z * s;\r\n        const b11 = y * y * t + c;\r\n        const b12 = z * y * t + x * s;\r\n        const b20 = x * z * t + y * s;\r\n        const b21 = y * z * t - x * s;\r\n        const b22 = z * z * t + c;\r\n        this.values[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n        this.values[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n        this.values[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n        this.values[3] = a00 * b10 + a10 * b11 + a20 * b12;\r\n        this.values[4] = a01 * b10 + a11 * b11 + a21 * b12;\r\n        this.values[5] = a02 * b10 + a12 * b11 + a22 * b12;\r\n        this.values[6] = a00 * b20 + a10 * b21 + a20 * b22;\r\n        this.values[7] = a01 * b20 + a11 * b21 + a21 * b22;\r\n        this.values[8] = a02 * b20 + a12 * b21 + a22 * b22;\r\n        return this;\r\n    }\r\n    static product(m1, m2, result) {\r\n        const a00 = m1.at(0);\r\n        const a01 = m1.at(1);\r\n        const a02 = m1.at(2);\r\n        const a10 = m1.at(3);\r\n        const a11 = m1.at(4);\r\n        const a12 = m1.at(5);\r\n        const a20 = m1.at(6);\r\n        const a21 = m1.at(7);\r\n        const a22 = m1.at(8);\r\n        const b00 = m2.at(0);\r\n        const b01 = m2.at(1);\r\n        const b02 = m2.at(2);\r\n        const b10 = m2.at(3);\r\n        const b11 = m2.at(4);\r\n        const b12 = m2.at(5);\r\n        const b20 = m2.at(6);\r\n        const b21 = m2.at(7);\r\n        const b22 = m2.at(8);\r\n        if (result) {\r\n            result.init([\r\n                b00 * a00 + b01 * a10 + b02 * a20,\r\n                b00 * a01 + b01 * a11 + b02 * a21,\r\n                b00 * a02 + b01 * a12 + b02 * a22,\r\n                b10 * a00 + b11 * a10 + b12 * a20,\r\n                b10 * a01 + b11 * a11 + b12 * a21,\r\n                b10 * a02 + b11 * a12 + b12 * a22,\r\n                b20 * a00 + b21 * a10 + b22 * a20,\r\n                b20 * a01 + b21 * a11 + b22 * a21,\r\n                b20 * a02 + b21 * a12 + b22 * a22,\r\n            ]);\r\n            return result;\r\n        }\r\n        else {\r\n            return new mat3([\r\n                b00 * a00 + b01 * a10 + b02 * a20,\r\n                b00 * a01 + b01 * a11 + b02 * a21,\r\n                b00 * a02 + b01 * a12 + b02 * a22,\r\n                b10 * a00 + b11 * a10 + b12 * a20,\r\n                b10 * a01 + b11 * a11 + b12 * a21,\r\n                b10 * a02 + b11 * a12 + b12 * a22,\r\n                b20 * a00 + b21 * a10 + b22 * a20,\r\n                b20 * a01 + b21 * a11 + b22 * a21,\r\n                b20 * a02 + b21 * a12 + b22 * a22,\r\n            ]);\r\n        }\r\n    }\r\n}\r\nmat3.identity = new mat3().setIdentity();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Math/TSM_Library/mat3.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Math/TSM_Library/mat4.ts":
/*!************************************************!*\
  !*** ./src/WEBGL/src/Math/TSM_Library/mat4.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mat4\": () => (/* binding */ mat4)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/WEBGL/src/Math/TSM_Library/constants.ts\");\n/* harmony import */ var _mat3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mat3 */ \"./src/WEBGL/src/Math/TSM_Library/mat3.ts\");\n/* harmony import */ var _vec3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vec3 */ \"./src/WEBGL/src/Math/TSM_Library/vec3.ts\");\n/* harmony import */ var _vec4__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vec4 */ \"./src/WEBGL/src/Math/TSM_Library/vec4.ts\");\n\r\n\r\n\r\n\r\nclass mat4 {\r\n    constructor(values) {\r\n        this.values = new Float32Array(16);\r\n        if (values !== undefined) {\r\n            this.init(values);\r\n        }\r\n    }\r\n    at(index) {\r\n        return this.values[index];\r\n    }\r\n    init(values) {\r\n        for (let i = 0; i < 16; i++) {\r\n            this.values[i] = values[i];\r\n        }\r\n        return this;\r\n    }\r\n    reset() {\r\n        for (let i = 0; i < 16; i++) {\r\n            this.values[i] = 0;\r\n        }\r\n    }\r\n    copy(dest) {\r\n        if (!dest) {\r\n            dest = new mat4();\r\n        }\r\n        for (let i = 0; i < 16; i++) {\r\n            dest.values[i] = this.values[i];\r\n        }\r\n        return dest;\r\n    }\r\n    all() {\r\n        const data = [];\r\n        for (let i = 0; i < 16; i++) {\r\n            data[i] = this.values[i];\r\n        }\r\n        return data;\r\n    }\r\n    row(index) {\r\n        return [\r\n            this.values[index * 4 + 0],\r\n            this.values[index * 4 + 1],\r\n            this.values[index * 4 + 2],\r\n            this.values[index * 4 + 3],\r\n        ];\r\n    }\r\n    col(index) {\r\n        return [\r\n            this.values[index],\r\n            this.values[index + 4],\r\n            this.values[index + 8],\r\n            this.values[index + 12],\r\n        ];\r\n    }\r\n    equals(matrix, threshold = _constants__WEBPACK_IMPORTED_MODULE_0__.epsilon) {\r\n        for (let i = 0; i < 16; i++) {\r\n            if (Math.abs(this.values[i] - matrix.at(i)) > threshold) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    determinant() {\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a03 = this.values[3];\r\n        const a10 = this.values[4];\r\n        const a11 = this.values[5];\r\n        const a12 = this.values[6];\r\n        const a13 = this.values[7];\r\n        const a20 = this.values[8];\r\n        const a21 = this.values[9];\r\n        const a22 = this.values[10];\r\n        const a23 = this.values[11];\r\n        const a30 = this.values[12];\r\n        const a31 = this.values[13];\r\n        const a32 = this.values[14];\r\n        const a33 = this.values[15];\r\n        const det00 = a00 * a11 - a01 * a10;\r\n        const det01 = a00 * a12 - a02 * a10;\r\n        const det02 = a00 * a13 - a03 * a10;\r\n        const det03 = a01 * a12 - a02 * a11;\r\n        const det04 = a01 * a13 - a03 * a11;\r\n        const det05 = a02 * a13 - a03 * a12;\r\n        const det06 = a20 * a31 - a21 * a30;\r\n        const det07 = a20 * a32 - a22 * a30;\r\n        const det08 = a20 * a33 - a23 * a30;\r\n        const det09 = a21 * a32 - a22 * a31;\r\n        const det10 = a21 * a33 - a23 * a31;\r\n        const det11 = a22 * a33 - a23 * a32;\r\n        return (det00 * det11 - det01 * det10 + det02 * det09 + det03 * det08 - det04 * det07 + det05 * det06);\r\n    }\r\n    setIdentity() {\r\n        this.values[0] = 1;\r\n        this.values[1] = 0;\r\n        this.values[2] = 0;\r\n        this.values[3] = 0;\r\n        this.values[4] = 0;\r\n        this.values[5] = 1;\r\n        this.values[6] = 0;\r\n        this.values[7] = 0;\r\n        this.values[8] = 0;\r\n        this.values[9] = 0;\r\n        this.values[10] = 1;\r\n        this.values[11] = 0;\r\n        this.values[12] = 0;\r\n        this.values[13] = 0;\r\n        this.values[14] = 0;\r\n        this.values[15] = 1;\r\n        return this;\r\n    }\r\n    transpose() {\r\n        const temp01 = this.values[1];\r\n        const temp02 = this.values[2];\r\n        const temp03 = this.values[3];\r\n        const temp12 = this.values[6];\r\n        const temp13 = this.values[7];\r\n        const temp23 = this.values[11];\r\n        this.values[1] = this.values[4];\r\n        this.values[2] = this.values[8];\r\n        this.values[3] = this.values[12];\r\n        this.values[4] = temp01;\r\n        this.values[6] = this.values[9];\r\n        this.values[7] = this.values[13];\r\n        this.values[8] = temp02;\r\n        this.values[9] = temp12;\r\n        this.values[11] = this.values[14];\r\n        this.values[12] = temp03;\r\n        this.values[13] = temp13;\r\n        this.values[14] = temp23;\r\n        return this;\r\n    }\r\n    inverse() {\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a03 = this.values[3];\r\n        const a10 = this.values[4];\r\n        const a11 = this.values[5];\r\n        const a12 = this.values[6];\r\n        const a13 = this.values[7];\r\n        const a20 = this.values[8];\r\n        const a21 = this.values[9];\r\n        const a22 = this.values[10];\r\n        const a23 = this.values[11];\r\n        const a30 = this.values[12];\r\n        const a31 = this.values[13];\r\n        const a32 = this.values[14];\r\n        const a33 = this.values[15];\r\n        const det00 = a00 * a11 - a01 * a10;\r\n        const det01 = a00 * a12 - a02 * a10;\r\n        const det02 = a00 * a13 - a03 * a10;\r\n        const det03 = a01 * a12 - a02 * a11;\r\n        const det04 = a01 * a13 - a03 * a11;\r\n        const det05 = a02 * a13 - a03 * a12;\r\n        const det06 = a20 * a31 - a21 * a30;\r\n        const det07 = a20 * a32 - a22 * a30;\r\n        const det08 = a20 * a33 - a23 * a30;\r\n        const det09 = a21 * a32 - a22 * a31;\r\n        const det10 = a21 * a33 - a23 * a31;\r\n        const det11 = a22 * a33 - a23 * a32;\r\n        let det = (det00 * det11 - det01 * det10 + det02 * det09 + det03 * det08 - det04 * det07 + det05 * det06);\r\n        if (!det) {\r\n            return null;\r\n        }\r\n        det = 1.0 / det;\r\n        this.values[0] = (a11 * det11 - a12 * det10 + a13 * det09) * det;\r\n        this.values[1] = (-a01 * det11 + a02 * det10 - a03 * det09) * det;\r\n        this.values[2] = (a31 * det05 - a32 * det04 + a33 * det03) * det;\r\n        this.values[3] = (-a21 * det05 + a22 * det04 - a23 * det03) * det;\r\n        this.values[4] = (-a10 * det11 + a12 * det08 - a13 * det07) * det;\r\n        this.values[5] = (a00 * det11 - a02 * det08 + a03 * det07) * det;\r\n        this.values[6] = (-a30 * det05 + a32 * det02 - a33 * det01) * det;\r\n        this.values[7] = (a20 * det05 - a22 * det02 + a23 * det01) * det;\r\n        this.values[8] = (a10 * det10 - a11 * det08 + a13 * det06) * det;\r\n        this.values[9] = (-a00 * det10 + a01 * det08 - a03 * det06) * det;\r\n        this.values[10] = (a30 * det04 - a31 * det02 + a33 * det00) * det;\r\n        this.values[11] = (-a20 * det04 + a21 * det02 - a23 * det00) * det;\r\n        this.values[12] = (-a10 * det09 + a11 * det07 - a12 * det06) * det;\r\n        this.values[13] = (a00 * det09 - a01 * det07 + a02 * det06) * det;\r\n        this.values[14] = (-a30 * det03 + a31 * det01 - a32 * det00) * det;\r\n        this.values[15] = (a20 * det03 - a21 * det01 + a22 * det00) * det;\r\n        return this;\r\n    }\r\n    multiply(matrix) {\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a03 = this.values[3];\r\n        const a10 = this.values[4];\r\n        const a11 = this.values[5];\r\n        const a12 = this.values[6];\r\n        const a13 = this.values[7];\r\n        const a20 = this.values[8];\r\n        const a21 = this.values[9];\r\n        const a22 = this.values[10];\r\n        const a23 = this.values[11];\r\n        const a30 = this.values[12];\r\n        const a31 = this.values[13];\r\n        const a32 = this.values[14];\r\n        const a33 = this.values[15];\r\n        let b0 = matrix.at(0);\r\n        let b1 = matrix.at(1);\r\n        let b2 = matrix.at(2);\r\n        let b3 = matrix.at(3);\r\n        this.values[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        this.values[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        this.values[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        this.values[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        b0 = matrix.at(4);\r\n        b1 = matrix.at(5);\r\n        b2 = matrix.at(6);\r\n        b3 = matrix.at(7);\r\n        this.values[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        this.values[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        this.values[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        this.values[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        b0 = matrix.at(8);\r\n        b1 = matrix.at(9);\r\n        b2 = matrix.at(10);\r\n        b3 = matrix.at(11);\r\n        this.values[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        this.values[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        this.values[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        this.values[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        b0 = matrix.at(12);\r\n        b1 = matrix.at(13);\r\n        b2 = matrix.at(14);\r\n        b3 = matrix.at(15);\r\n        this.values[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        this.values[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        this.values[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        this.values[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        return this;\r\n    }\r\n    multiplyVec3(vector) {\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        return new _vec3__WEBPACK_IMPORTED_MODULE_2__.vec3([\r\n            this.values[0] * x + this.values[4] * y + this.values[8] * z + this.values[12],\r\n            this.values[1] * x + this.values[5] * y + this.values[9] * z + this.values[13],\r\n            this.values[2] * x + this.values[6] * y + this.values[10] * z + this.values[14],\r\n        ]);\r\n    }\r\n    multiplyVec4(vector, dest) {\r\n        if (!dest) {\r\n            dest = new _vec4__WEBPACK_IMPORTED_MODULE_3__.vec4();\r\n        }\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        const w = vector.w;\r\n        dest.x = this.values[0] * x + this.values[4] * y + this.values[8] * z + this.values[12] * w;\r\n        dest.y = this.values[1] * x + this.values[5] * y + this.values[9] * z + this.values[13] * w;\r\n        dest.z = this.values[2] * x + this.values[6] * y + this.values[10] * z + this.values[14] * w;\r\n        dest.w = this.values[3] * x + this.values[7] * y + this.values[11] * z + this.values[15] * w;\r\n        return dest;\r\n    }\r\n    toMat3() {\r\n        return new _mat3__WEBPACK_IMPORTED_MODULE_1__.mat3([\r\n            this.values[0],\r\n            this.values[1],\r\n            this.values[2],\r\n            this.values[4],\r\n            this.values[5],\r\n            this.values[6],\r\n            this.values[8],\r\n            this.values[9],\r\n            this.values[10],\r\n        ]);\r\n    }\r\n    toInverseMat3() {\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a10 = this.values[4];\r\n        const a11 = this.values[5];\r\n        const a12 = this.values[6];\r\n        const a20 = this.values[8];\r\n        const a21 = this.values[9];\r\n        const a22 = this.values[10];\r\n        const det01 = a22 * a11 - a12 * a21;\r\n        const det11 = -a22 * a10 + a12 * a20;\r\n        const det21 = a21 * a10 - a11 * a20;\r\n        let det = a00 * det01 + a01 * det11 + a02 * det21;\r\n        if (!det) {\r\n            return null;\r\n        }\r\n        det = 1.0 / det;\r\n        return new _mat3__WEBPACK_IMPORTED_MODULE_1__.mat3([\r\n            det01 * det,\r\n            (-a22 * a01 + a02 * a21) * det,\r\n            (a12 * a01 - a02 * a11) * det,\r\n            det11 * det,\r\n            (a22 * a00 - a02 * a20) * det,\r\n            (-a12 * a00 + a02 * a10) * det,\r\n            det21 * det,\r\n            (-a21 * a00 + a01 * a20) * det,\r\n            (a11 * a00 - a01 * a10) * det,\r\n        ]);\r\n    }\r\n    translate(vector) {\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        this.values[12] += this.values[0] * x + this.values[4] * y + this.values[8] * z;\r\n        this.values[13] += this.values[1] * x + this.values[5] * y + this.values[9] * z;\r\n        this.values[14] += this.values[2] * x + this.values[6] * y + this.values[10] * z;\r\n        this.values[15] += this.values[3] * x + this.values[7] * y + this.values[11] * z;\r\n        return this;\r\n    }\r\n    scale(vector) {\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        this.values[0] *= x;\r\n        this.values[1] *= x;\r\n        this.values[2] *= x;\r\n        this.values[3] *= x;\r\n        this.values[4] *= y;\r\n        this.values[5] *= y;\r\n        this.values[6] *= y;\r\n        this.values[7] *= y;\r\n        this.values[8] *= z;\r\n        this.values[9] *= z;\r\n        this.values[10] *= z;\r\n        this.values[11] *= z;\r\n        return this;\r\n    }\r\n    rotate(angle, axis) {\r\n        let x = axis.x;\r\n        let y = axis.y;\r\n        let z = axis.z;\r\n        let length = Math.sqrt(x * x + y * y + z * z);\r\n        if (!length) {\r\n            return null;\r\n        }\r\n        if (length !== 1) {\r\n            length = 1 / length;\r\n            x *= length;\r\n            y *= length;\r\n            z *= length;\r\n        }\r\n        const s = Math.sin(angle);\r\n        const c = Math.cos(angle);\r\n        const t = 1.0 - c;\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a03 = this.values[3];\r\n        const a10 = this.values[4];\r\n        const a11 = this.values[5];\r\n        const a12 = this.values[6];\r\n        const a13 = this.values[7];\r\n        const a20 = this.values[8];\r\n        const a21 = this.values[9];\r\n        const a22 = this.values[10];\r\n        const a23 = this.values[11];\r\n        const b00 = x * x * t + c;\r\n        const b01 = y * x * t + z * s;\r\n        const b02 = z * x * t - y * s;\r\n        const b10 = x * y * t - z * s;\r\n        const b11 = y * y * t + c;\r\n        const b12 = z * y * t + x * s;\r\n        const b20 = x * z * t + y * s;\r\n        const b21 = y * z * t - x * s;\r\n        const b22 = z * z * t + c;\r\n        this.values[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n        this.values[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n        this.values[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n        this.values[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n        this.values[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n        this.values[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n        this.values[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n        this.values[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n        this.values[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n        this.values[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n        this.values[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n        this.values[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n        return this;\r\n    }\r\n    static frustum(left, right, bottom, top, near, far) {\r\n        const rl = (right - left);\r\n        const tb = (top - bottom);\r\n        const fn = (far - near);\r\n        return new mat4([\r\n            (near * 2) / rl,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            (near * 2) / tb,\r\n            0,\r\n            0,\r\n            (right + left) / rl,\r\n            (top + bottom) / tb,\r\n            -(far + near) / fn,\r\n            -1,\r\n            0,\r\n            0,\r\n            -(far * near * 2) / fn,\r\n            0,\r\n        ]);\r\n    }\r\n    static perspective(fov, aspect, near, far) {\r\n        const top = near * Math.tan(fov * Math.PI / 360.0);\r\n        const right = top * aspect;\r\n        return mat4.frustum(-right, right, -top, top, near, far);\r\n    }\r\n    static orthographic(left, right, bottom, top, near, far) {\r\n        const rl = (right - left);\r\n        const tb = (top - bottom);\r\n        const fn = (far - near);\r\n        return new mat4([\r\n            2 / rl,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            2 / tb,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            -2 / fn,\r\n            0,\r\n            -(left + right) / rl,\r\n            -(top + bottom) / tb,\r\n            -(far + near) / fn,\r\n            1,\r\n        ]);\r\n    }\r\n    static lookAt(position, target, up = _vec3__WEBPACK_IMPORTED_MODULE_2__.vec3.up) {\r\n        if (position.equals(target)) {\r\n            return this.identity;\r\n        }\r\n        const z = _vec3__WEBPACK_IMPORTED_MODULE_2__.vec3.difference(position, target).normalize();\r\n        const x = _vec3__WEBPACK_IMPORTED_MODULE_2__.vec3.cross(up, z).normalize();\r\n        const y = _vec3__WEBPACK_IMPORTED_MODULE_2__.vec3.cross(z, x).normalize();\r\n        return new mat4([\r\n            x.x,\r\n            y.x,\r\n            z.x,\r\n            0,\r\n            x.y,\r\n            y.y,\r\n            z.y,\r\n            0,\r\n            x.z,\r\n            y.z,\r\n            z.z,\r\n            0,\r\n            -_vec3__WEBPACK_IMPORTED_MODULE_2__.vec3.dot(x, position),\r\n            -_vec3__WEBPACK_IMPORTED_MODULE_2__.vec3.dot(y, position),\r\n            -_vec3__WEBPACK_IMPORTED_MODULE_2__.vec3.dot(z, position),\r\n            1,\r\n        ]);\r\n    }\r\n    static product(m1, m2, result) {\r\n        const a00 = m1.at(0);\r\n        const a01 = m1.at(1);\r\n        const a02 = m1.at(2);\r\n        const a03 = m1.at(3);\r\n        const a10 = m1.at(4);\r\n        const a11 = m1.at(5);\r\n        const a12 = m1.at(6);\r\n        const a13 = m1.at(7);\r\n        const a20 = m1.at(8);\r\n        const a21 = m1.at(9);\r\n        const a22 = m1.at(10);\r\n        const a23 = m1.at(11);\r\n        const a30 = m1.at(12);\r\n        const a31 = m1.at(13);\r\n        const a32 = m1.at(14);\r\n        const a33 = m1.at(15);\r\n        const b00 = m2.at(0);\r\n        const b01 = m2.at(1);\r\n        const b02 = m2.at(2);\r\n        const b03 = m2.at(3);\r\n        const b10 = m2.at(4);\r\n        const b11 = m2.at(5);\r\n        const b12 = m2.at(6);\r\n        const b13 = m2.at(7);\r\n        const b20 = m2.at(8);\r\n        const b21 = m2.at(9);\r\n        const b22 = m2.at(10);\r\n        const b23 = m2.at(11);\r\n        const b30 = m2.at(12);\r\n        const b31 = m2.at(13);\r\n        const b32 = m2.at(14);\r\n        const b33 = m2.at(15);\r\n        if (result) {\r\n            result.init([\r\n                b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\r\n                b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\r\n                b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\r\n                b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\r\n                b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\r\n                b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\r\n                b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\r\n                b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\r\n                b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\r\n                b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\r\n                b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\r\n                b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\r\n                b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\r\n                b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\r\n                b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\r\n                b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33,\r\n            ]);\r\n            return result;\r\n        }\r\n        else {\r\n            return new mat4([\r\n                b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\r\n                b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\r\n                b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\r\n                b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\r\n                b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\r\n                b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\r\n                b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\r\n                b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\r\n                b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\r\n                b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\r\n                b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\r\n                b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\r\n                b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\r\n                b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\r\n                b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\r\n                b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33,\r\n            ]);\r\n        }\r\n    }\r\n    toString() {\r\n        var n = 0;\r\n        let str = \"\";\r\n        for (let i = 0; i < 4; i++) {\r\n            for (let u = 0; u < 4; u++) {\r\n                n = i * 4 + u;\r\n                str += this.values[n] + \" ,\";\r\n            }\r\n            str += \"\\n\";\r\n        }\r\n        return str;\r\n    }\r\n}\r\nmat4.identity = new mat4().setIdentity();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Math/TSM_Library/mat4.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Math/TSM_Library/quat.ts":
/*!************************************************!*\
  !*** ./src/WEBGL/src/Math/TSM_Library/quat.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"quat\": () => (/* binding */ quat)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/WEBGL/src/Math/TSM_Library/constants.ts\");\n/* harmony import */ var _mat3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mat3 */ \"./src/WEBGL/src/Math/TSM_Library/mat3.ts\");\n/* harmony import */ var _mat4__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mat4 */ \"./src/WEBGL/src/Math/TSM_Library/mat4.ts\");\n/* harmony import */ var _vec3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vec3 */ \"./src/WEBGL/src/Math/TSM_Library/vec3.ts\");\n\r\n\r\n\r\n\r\nclass quat {\r\n    constructor(values) {\r\n        this.values = new Float32Array(4);\r\n        if (values !== undefined) {\r\n            this.xyzw = values;\r\n        }\r\n    }\r\n    get x() {\r\n        return this.values[0];\r\n    }\r\n    get y() {\r\n        return this.values[1];\r\n    }\r\n    get z() {\r\n        return this.values[2];\r\n    }\r\n    get w() {\r\n        return this.values[3];\r\n    }\r\n    get xy() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n        ];\r\n    }\r\n    get xyz() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n            this.values[2],\r\n        ];\r\n    }\r\n    get xyzw() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n            this.values[2],\r\n            this.values[3],\r\n        ];\r\n    }\r\n    set x(value) {\r\n        this.values[0] = value;\r\n    }\r\n    set y(value) {\r\n        this.values[1] = value;\r\n    }\r\n    set z(value) {\r\n        this.values[2] = value;\r\n    }\r\n    set w(value) {\r\n        this.values[3] = value;\r\n    }\r\n    set xy(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n    }\r\n    set xyz(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n        this.values[2] = values[2];\r\n    }\r\n    set xyzw(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n        this.values[2] = values[2];\r\n        this.values[3] = values[3];\r\n    }\r\n    at(index) {\r\n        return this.values[index];\r\n    }\r\n    reset() {\r\n        for (let i = 0; i < 4; i++) {\r\n            this.values[i] = 0;\r\n        }\r\n    }\r\n    copy(dest) {\r\n        if (!dest) {\r\n            dest = new quat();\r\n        }\r\n        for (let i = 0; i < 4; i++) {\r\n            dest.values[i] = this.values[i];\r\n        }\r\n        return dest;\r\n    }\r\n    roll() {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        return Math.atan2(2.0 * (x * y + w * z), w * w + x * x - y * y - z * z);\r\n    }\r\n    pitch() {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        return Math.atan2(2.0 * (y * z + w * x), w * w - x * x - y * y + z * z);\r\n    }\r\n    yaw() {\r\n        return Math.asin(2.0 * (this.x * this.z - this.w * this.y));\r\n    }\r\n    equals(vector, threshold = _constants__WEBPACK_IMPORTED_MODULE_0__.epsilon) {\r\n        for (let i = 0; i < 4; i++) {\r\n            if (Math.abs(this.values[i] - vector.at(i)) > threshold) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    setIdentity() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        this.w = 1;\r\n        return this;\r\n    }\r\n    calculateW() {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        this.w = -(Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z)));\r\n        return this;\r\n    }\r\n    inverse() {\r\n        const dot = quat.dot(this, this);\r\n        if (!dot) {\r\n            this.xyzw = [0, 0, 0, 0];\r\n            return this;\r\n        }\r\n        const invDot = dot ? 1.0 / dot : 0;\r\n        this.x *= -invDot;\r\n        this.y *= -invDot;\r\n        this.z *= -invDot;\r\n        this.w *= invDot;\r\n        return this;\r\n    }\r\n    conjugate() {\r\n        this.values[0] *= -1;\r\n        this.values[1] *= -1;\r\n        this.values[2] *= -1;\r\n        return this;\r\n    }\r\n    length() {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        return Math.sqrt(x * x + y * y + z * z + w * w);\r\n    }\r\n    normalize(dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        let length = Math.sqrt(x * x + y * y + z * z + w * w);\r\n        if (!length) {\r\n            dest.x = 0;\r\n            dest.y = 0;\r\n            dest.z = 0;\r\n            dest.w = 0;\r\n            return dest;\r\n        }\r\n        length = 1 / length;\r\n        dest.x = x * length;\r\n        dest.y = y * length;\r\n        dest.z = z * length;\r\n        dest.w = w * length;\r\n        return dest;\r\n    }\r\n    add(other) {\r\n        for (let i = 0; i < 4; i++) {\r\n            this.values[i] += other.at(i);\r\n        }\r\n        return this;\r\n    }\r\n    multiply(other) {\r\n        const q1x = this.values[0];\r\n        const q1y = this.values[1];\r\n        const q1z = this.values[2];\r\n        const q1w = this.values[3];\r\n        const q2x = other.x;\r\n        const q2y = other.y;\r\n        const q2z = other.z;\r\n        const q2w = other.w;\r\n        this.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;\r\n        this.y = q1y * q2w + q1w * q2y + q1z * q2x - q1x * q2z;\r\n        this.z = q1z * q2w + q1w * q2z + q1x * q2y - q1y * q2x;\r\n        this.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;\r\n        return this;\r\n    }\r\n    multiplyVec3(vector, dest) {\r\n        if (!dest) {\r\n            dest = new _vec3__WEBPACK_IMPORTED_MODULE_3__.vec3();\r\n        }\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        const qx = this.x;\r\n        const qy = this.y;\r\n        const qz = this.z;\r\n        const qw = this.w;\r\n        const ix = qw * x + qy * z - qz * y;\r\n        const iy = qw * y + qz * x - qx * z;\r\n        const iz = qw * z + qx * y - qy * x;\r\n        const iw = -qx * x - qy * y - qz * z;\r\n        dest.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n        dest.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n        dest.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n        return dest;\r\n    }\r\n    toMat3(dest) {\r\n        if (!dest) {\r\n            dest = new _mat3__WEBPACK_IMPORTED_MODULE_1__.mat3();\r\n        }\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        const x2 = x + x;\r\n        const y2 = y + y;\r\n        const z2 = z + z;\r\n        const xx = x * x2;\r\n        const xy = x * y2;\r\n        const xz = x * z2;\r\n        const yy = y * y2;\r\n        const yz = y * z2;\r\n        const zz = z * z2;\r\n        const wx = w * x2;\r\n        const wy = w * y2;\r\n        const wz = w * z2;\r\n        dest.init([\r\n            1 - (yy + zz),\r\n            xy + wz,\r\n            xz - wy,\r\n            xy - wz,\r\n            1 - (xx + zz),\r\n            yz + wx,\r\n            xz + wy,\r\n            yz - wx,\r\n            1 - (xx + yy),\r\n        ]);\r\n        return dest;\r\n    }\r\n    toMat4(dest) {\r\n        if (!dest) {\r\n            dest = new _mat4__WEBPACK_IMPORTED_MODULE_2__.mat4();\r\n        }\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        const x2 = x + x;\r\n        const y2 = y + y;\r\n        const z2 = z + z;\r\n        const xx = x * x2;\r\n        const xy = x * y2;\r\n        const xz = x * z2;\r\n        const yy = y * y2;\r\n        const yz = y * z2;\r\n        const zz = z * z2;\r\n        const wx = w * x2;\r\n        const wy = w * y2;\r\n        const wz = w * z2;\r\n        dest.init([\r\n            1 - (yy + zz),\r\n            xy + wz,\r\n            xz - wy,\r\n            0,\r\n            xy - wz,\r\n            1 - (xx + zz),\r\n            yz + wx,\r\n            0,\r\n            xz + wy,\r\n            yz - wx,\r\n            1 - (xx + yy),\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            1,\r\n        ]);\r\n        return dest;\r\n    }\r\n    static dot(q1, q2) {\r\n        return q1.x * q2.x + q1.y * q2.y + q1.z * q2.z + q1.w * q2.w;\r\n    }\r\n    static sum(q1, q2, dest) {\r\n        if (!dest) {\r\n            dest = new quat();\r\n        }\r\n        dest.x = q1.x + q2.x;\r\n        dest.y = q1.y + q2.y;\r\n        dest.z = q1.z + q2.z;\r\n        dest.w = q1.w + q2.w;\r\n        return dest;\r\n    }\r\n    static product(q1, q2, dest) {\r\n        if (!dest) {\r\n            dest = new quat();\r\n        }\r\n        const q1x = q1.x;\r\n        const q1y = q1.y;\r\n        const q1z = q1.z;\r\n        const q1w = q1.w;\r\n        const q2x = q2.x;\r\n        const q2y = q2.y;\r\n        const q2z = q2.z;\r\n        const q2w = q2.w;\r\n        dest.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;\r\n        dest.y = q1y * q2w + q1w * q2y + q1z * q2x - q1x * q2z;\r\n        dest.z = q1z * q2w + q1w * q2z + q1x * q2y - q1y * q2x;\r\n        dest.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;\r\n        return dest;\r\n    }\r\n    static cross(q1, q2, dest) {\r\n        if (!dest) {\r\n            dest = new quat();\r\n        }\r\n        const q1x = q1.x;\r\n        const q1y = q1.y;\r\n        const q1z = q1.z;\r\n        const q1w = q1.w;\r\n        const q2x = q2.x;\r\n        const q2y = q2.y;\r\n        const q2z = q2.z;\r\n        const q2w = q2.w;\r\n        dest.x = q1w * q2z + q1z * q2w + q1x * q2y - q1y * q2x;\r\n        dest.y = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;\r\n        dest.z = q1w * q2x + q1x * q2w + q1y * q2z - q1z * q2y;\r\n        dest.w = q1w * q2y + q1y * q2w + q1z * q2x - q1x * q2z;\r\n        return dest;\r\n    }\r\n    static shortMix(q1, q2, time, dest) {\r\n        if (!dest) {\r\n            dest = new quat();\r\n        }\r\n        if (time <= 0.0) {\r\n            dest.xyzw = q1.xyzw;\r\n            return dest;\r\n        }\r\n        else if (time >= 1.0) {\r\n            dest.xyzw = q2.xyzw;\r\n            return dest;\r\n        }\r\n        let cos = quat.dot(q1, q2);\r\n        const q2a = q2.copy();\r\n        if (cos < 0.0) {\r\n            q2a.inverse();\r\n            cos = -cos;\r\n        }\r\n        let k0;\r\n        let k1;\r\n        if (cos > 0.9999) {\r\n            k0 = 1 - time;\r\n            k1 = 0 + time;\r\n        }\r\n        else {\r\n            const sin = Math.sqrt(1 - cos * cos);\r\n            const angle = Math.atan2(sin, cos);\r\n            const oneOverSin = 1 / sin;\r\n            k0 = Math.sin((1 - time) * angle) * oneOverSin;\r\n            k1 = Math.sin((0 + time) * angle) * oneOverSin;\r\n        }\r\n        dest.x = k0 * q1.x + k1 * q2a.x;\r\n        dest.y = k0 * q1.y + k1 * q2a.y;\r\n        dest.z = k0 * q1.z + k1 * q2a.z;\r\n        dest.w = k0 * q1.w + k1 * q2a.w;\r\n        return dest;\r\n    }\r\n    static mix(q1, q2, time, dest) {\r\n        if (!dest) {\r\n            dest = new quat();\r\n        }\r\n        const cosHalfTheta = q1.x * q2.x + q1.y * q2.y + q1.z * q2.z + q1.w * q2.w;\r\n        if (Math.abs(cosHalfTheta) >= 1.0) {\r\n            dest.xyzw = q1.xyzw;\r\n            return dest;\r\n        }\r\n        const halfTheta = Math.acos(cosHalfTheta);\r\n        const sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta);\r\n        if (Math.abs(sinHalfTheta) < 0.001) {\r\n            dest.x = q1.x * 0.5 + q2.x * 0.5;\r\n            dest.y = q1.y * 0.5 + q2.y * 0.5;\r\n            dest.z = q1.z * 0.5 + q2.z * 0.5;\r\n            dest.w = q1.w * 0.5 + q2.w * 0.5;\r\n            return dest;\r\n        }\r\n        const ratioA = Math.sin((1 - time) * halfTheta) / sinHalfTheta;\r\n        const ratioB = Math.sin(time * halfTheta) / sinHalfTheta;\r\n        dest.x = q1.x * ratioA + q2.x * ratioB;\r\n        dest.y = q1.y * ratioA + q2.y * ratioB;\r\n        dest.z = q1.z * ratioA + q2.z * ratioB;\r\n        dest.w = q1.w * ratioA + q2.w * ratioB;\r\n        return dest;\r\n    }\r\n    static fromAxisAngle(axis, angle, dest) {\r\n        if (!dest) {\r\n            dest = new quat();\r\n        }\r\n        angle *= 0.5;\r\n        const sin = Math.sin(angle);\r\n        dest.x = axis.x * sin;\r\n        dest.y = axis.y * sin;\r\n        dest.z = axis.z * sin;\r\n        dest.w = Math.cos(angle);\r\n        return dest;\r\n    }\r\n}\r\nquat.identity = new quat().setIdentity();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Math/TSM_Library/quat.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Math/TSM_Library/vec2.ts":
/*!************************************************!*\
  !*** ./src/WEBGL/src/Math/TSM_Library/vec2.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"vec2\": () => (/* binding */ vec2)\n/* harmony export */ });\n/* harmony import */ var _vec3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vec3 */ \"./src/WEBGL/src/Math/TSM_Library/vec3.ts\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"./src/WEBGL/src/Math/TSM_Library/constants.ts\");\n\r\n\r\nclass vec2 {\r\n    constructor(values) {\r\n        this.values = new Float32Array(2);\r\n        if (values !== undefined) {\r\n            this.xy = values;\r\n        }\r\n    }\r\n    get x() {\r\n        return this.values[0];\r\n    }\r\n    get y() {\r\n        return this.values[1];\r\n    }\r\n    get xy() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n        ];\r\n    }\r\n    set x(value) {\r\n        this.values[0] = value;\r\n    }\r\n    set y(value) {\r\n        this.values[1] = value;\r\n    }\r\n    set xy(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n    }\r\n    at(index) {\r\n        return this.values[index];\r\n    }\r\n    reset() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n    }\r\n    copy(dest) {\r\n        if (!dest) {\r\n            dest = new vec2();\r\n        }\r\n        dest.x = this.x;\r\n        dest.y = this.y;\r\n        return dest;\r\n    }\r\n    negate(dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        dest.x = -this.x;\r\n        dest.y = -this.y;\r\n        return dest;\r\n    }\r\n    equals(vector, threshold = _constants__WEBPACK_IMPORTED_MODULE_1__.epsilon) {\r\n        if (Math.abs(this.x - vector.x) > threshold) {\r\n            return false;\r\n        }\r\n        if (Math.abs(this.y - vector.y) > threshold) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    length() {\r\n        return Math.sqrt(this.squaredLength());\r\n    }\r\n    squaredLength() {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        return (x * x + y * y);\r\n    }\r\n    add(vector) {\r\n        this.x += vector.x;\r\n        this.y += vector.y;\r\n        return this;\r\n    }\r\n    subtract(vector) {\r\n        this.x -= vector.x;\r\n        this.y -= vector.y;\r\n        return this;\r\n    }\r\n    multiply(vector) {\r\n        this.x *= vector.x;\r\n        this.y *= vector.y;\r\n        return this;\r\n    }\r\n    divide(vector) {\r\n        this.x /= vector.x;\r\n        this.y /= vector.y;\r\n        return this;\r\n    }\r\n    scale(value, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        dest.x *= value;\r\n        dest.y *= value;\r\n        return dest;\r\n    }\r\n    normalize(dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        let length = this.length();\r\n        if (length === 1) {\r\n            return this;\r\n        }\r\n        if (length === 0) {\r\n            dest.x = 0;\r\n            dest.y = 0;\r\n            return dest;\r\n        }\r\n        length = 1.0 / length;\r\n        dest.x *= length;\r\n        dest.y *= length;\r\n        return dest;\r\n    }\r\n    multiplyMat2(matrix, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        return matrix.multiplyVec2(this, dest);\r\n    }\r\n    multiplyMat3(matrix, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        return matrix.multiplyVec2(this, dest);\r\n    }\r\n    static cross(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new _vec3__WEBPACK_IMPORTED_MODULE_0__.vec3();\r\n        }\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const x2 = vector2.x;\r\n        const y2 = vector2.y;\r\n        const z = x * y2 - y * x2;\r\n        dest.x = 0;\r\n        dest.y = 0;\r\n        dest.z = z;\r\n        return dest;\r\n    }\r\n    static dot(vector, vector2) {\r\n        return (vector.x * vector2.x + vector.y * vector2.y);\r\n    }\r\n    static distance(vector, vector2) {\r\n        return Math.sqrt(this.squaredDistance(vector, vector2));\r\n    }\r\n    static squaredDistance(vector, vector2) {\r\n        const x = vector2.x - vector.x;\r\n        const y = vector2.y - vector.y;\r\n        return (x * x + y * y);\r\n    }\r\n    static direction(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec2();\r\n        }\r\n        const x = vector.x - vector2.x;\r\n        const y = vector.y - vector2.y;\r\n        let length = Math.sqrt(x * x + y * y);\r\n        if (length === 0) {\r\n            dest.x = 0;\r\n            dest.y = 0;\r\n            return dest;\r\n        }\r\n        length = 1 / length;\r\n        dest.x = x * length;\r\n        dest.y = y * length;\r\n        return dest;\r\n    }\r\n    static mix(vector, vector2, time, dest) {\r\n        if (!dest) {\r\n            dest = new vec2();\r\n        }\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const x2 = vector2.x;\r\n        const y2 = vector2.y;\r\n        dest.x = x + time * (x2 - x);\r\n        dest.y = y + time * (y2 - y);\r\n        return dest;\r\n    }\r\n    static sum(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec2();\r\n        }\r\n        dest.x = vector.x + vector2.x;\r\n        dest.y = vector.y + vector2.y;\r\n        return dest;\r\n    }\r\n    static difference(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec2();\r\n        }\r\n        dest.x = vector.x - vector2.x;\r\n        dest.y = vector.y - vector2.y;\r\n        return dest;\r\n    }\r\n    static product(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec2();\r\n        }\r\n        dest.x = vector.x * vector2.x;\r\n        dest.y = vector.y * vector2.y;\r\n        return dest;\r\n    }\r\n    static quotient(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec2();\r\n        }\r\n        dest.x = vector.x / vector2.x;\r\n        dest.y = vector.y / vector2.y;\r\n        return dest;\r\n    }\r\n}\r\nvec2.zero = new vec2([0, 0]);\r\nvec2.one = new vec2([1, 1]);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Math/TSM_Library/vec2.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Math/TSM_Library/vec3.ts":
/*!************************************************!*\
  !*** ./src/WEBGL/src/Math/TSM_Library/vec3.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"vec3\": () => (/* binding */ vec3)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/WEBGL/src/Math/TSM_Library/constants.ts\");\n/* harmony import */ var _quat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quat */ \"./src/WEBGL/src/Math/TSM_Library/quat.ts\");\n\r\n\r\nclass vec3 {\r\n    constructor(values) {\r\n        this.values = new Float32Array(3);\r\n        if (values !== undefined) {\r\n            this.xyz = values;\r\n        }\r\n    }\r\n    get x() {\r\n        return this.values[0];\r\n    }\r\n    get y() {\r\n        return this.values[1];\r\n    }\r\n    get z() {\r\n        return this.values[2];\r\n    }\r\n    get xy() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n        ];\r\n    }\r\n    get xyz() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n            this.values[2],\r\n        ];\r\n    }\r\n    set x(value) {\r\n        this.values[0] = value;\r\n    }\r\n    set y(value) {\r\n        this.values[1] = value;\r\n    }\r\n    set z(value) {\r\n        this.values[2] = value;\r\n    }\r\n    set xy(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n    }\r\n    set xyz(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n        this.values[2] = values[2];\r\n    }\r\n    at(index) {\r\n        return this.values[index];\r\n    }\r\n    reset() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n    }\r\n    copy(dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        dest.x = this.x;\r\n        dest.y = this.y;\r\n        dest.z = this.z;\r\n        return dest;\r\n    }\r\n    negate(dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        dest.x = -this.x;\r\n        dest.y = -this.y;\r\n        dest.z = -this.z;\r\n        return dest;\r\n    }\r\n    equals(vector, threshold = _constants__WEBPACK_IMPORTED_MODULE_0__.epsilon) {\r\n        if (Math.abs(this.x - vector.x) > threshold) {\r\n            return false;\r\n        }\r\n        if (Math.abs(this.y - vector.y) > threshold) {\r\n            return false;\r\n        }\r\n        if (Math.abs(this.z - vector.z) > threshold) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    length() {\r\n        return Math.sqrt(this.squaredLength());\r\n    }\r\n    squaredLength() {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        return (x * x + y * y + z * z);\r\n    }\r\n    add(vector) {\r\n        this.x += vector.x;\r\n        this.y += vector.y;\r\n        this.z += vector.z;\r\n        return this;\r\n    }\r\n    subtract(vector) {\r\n        this.x -= vector.x;\r\n        this.y -= vector.y;\r\n        this.z -= vector.z;\r\n        return this;\r\n    }\r\n    multiply(vector) {\r\n        this.x *= vector.x;\r\n        this.y *= vector.y;\r\n        this.z *= vector.z;\r\n        return this;\r\n    }\r\n    divide(vector) {\r\n        this.x /= vector.x;\r\n        this.y /= vector.y;\r\n        this.z /= vector.z;\r\n        return this;\r\n    }\r\n    scale(value, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        dest.x *= value;\r\n        dest.y *= value;\r\n        dest.z *= value;\r\n        return dest;\r\n    }\r\n    normalize(dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        let length = this.length();\r\n        if (length === 1) {\r\n            return this;\r\n        }\r\n        if (length === 0) {\r\n            dest.x = 0;\r\n            dest.y = 0;\r\n            dest.z = 0;\r\n            return dest;\r\n        }\r\n        length = 1.0 / length;\r\n        dest.x *= length;\r\n        dest.y *= length;\r\n        dest.z *= length;\r\n        return dest;\r\n    }\r\n    multiplyByMat3(matrix, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        return matrix.multiplyVec3(this, dest);\r\n    }\r\n    multiplyByQuat(quaternion, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        return quaternion.multiplyVec3(this, dest);\r\n    }\r\n    toQuat(dest) {\r\n        if (!dest) {\r\n            dest = new _quat__WEBPACK_IMPORTED_MODULE_1__.quat();\r\n        }\r\n        const c = new vec3();\r\n        const s = new vec3();\r\n        c.x = Math.cos(this.x * 0.5);\r\n        s.x = Math.sin(this.x * 0.5);\r\n        c.y = Math.cos(this.y * 0.5);\r\n        s.y = Math.sin(this.y * 0.5);\r\n        c.z = Math.cos(this.z * 0.5);\r\n        s.z = Math.sin(this.z * 0.5);\r\n        dest.x = s.x * c.y * c.z - c.x * s.y * s.z;\r\n        dest.y = c.x * s.y * c.z + s.x * c.y * s.z;\r\n        dest.z = c.x * c.y * s.z - s.x * s.y * c.z;\r\n        dest.w = c.x * c.y * c.z + s.x * s.y * s.z;\r\n        return dest;\r\n    }\r\n    static cross(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        const x2 = vector2.x;\r\n        const y2 = vector2.y;\r\n        const z2 = vector2.z;\r\n        dest.x = y * z2 - z * y2;\r\n        dest.y = z * x2 - x * z2;\r\n        dest.z = x * y2 - y * x2;\r\n        return dest;\r\n    }\r\n    static dot(vector, vector2) {\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        const x2 = vector2.x;\r\n        const y2 = vector2.y;\r\n        const z2 = vector2.z;\r\n        return (x * x2 + y * y2 + z * z2);\r\n    }\r\n    static distance(vector, vector2) {\r\n        const x = vector2.x - vector.x;\r\n        const y = vector2.y - vector.y;\r\n        const z = vector2.z - vector.z;\r\n        return Math.sqrt(this.squaredDistance(vector, vector2));\r\n    }\r\n    static squaredDistance(vector, vector2) {\r\n        const x = vector2.x - vector.x;\r\n        const y = vector2.y - vector.y;\r\n        const z = vector2.z - vector.z;\r\n        return (x * x + y * y + z * z);\r\n    }\r\n    static direction(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        const x = vector.x - vector2.x;\r\n        const y = vector.y - vector2.y;\r\n        const z = vector.z - vector2.z;\r\n        let length = Math.sqrt(x * x + y * y + z * z);\r\n        if (length === 0) {\r\n            dest.x = 0;\r\n            dest.y = 0;\r\n            dest.z = 0;\r\n            return dest;\r\n        }\r\n        length = 1 / length;\r\n        dest.x = x * length;\r\n        dest.y = y * length;\r\n        dest.z = z * length;\r\n        return dest;\r\n    }\r\n    static mix(vector, vector2, time, dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        dest.x = vector.x + time * (vector2.x - vector.x);\r\n        dest.y = vector.y + time * (vector2.y - vector.y);\r\n        dest.z = vector.z + time * (vector2.z - vector.z);\r\n        return dest;\r\n    }\r\n    static sum(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        dest.x = vector.x + vector2.x;\r\n        dest.y = vector.y + vector2.y;\r\n        dest.z = vector.z + vector2.z;\r\n        return dest;\r\n    }\r\n    static difference(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        dest.x = vector.x - vector2.x;\r\n        dest.y = vector.y - vector2.y;\r\n        dest.z = vector.z - vector2.z;\r\n        return dest;\r\n    }\r\n    static product(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        dest.x = vector.x * vector2.x;\r\n        dest.y = vector.y * vector2.y;\r\n        dest.z = vector.z * vector2.z;\r\n        return dest;\r\n    }\r\n    static quotient(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        dest.x = vector.x / vector2.x;\r\n        dest.y = vector.y / vector2.y;\r\n        dest.z = vector.z / vector2.z;\r\n        return dest;\r\n    }\r\n}\r\nvec3.zero = new vec3([0, 0, 0]);\r\nvec3.one = new vec3([1, 1, 1]);\r\nvec3.up = new vec3([0, 1, 0]);\r\nvec3.right = new vec3([1, 0, 0]);\r\nvec3.forward = new vec3([0, 0, 1]);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Math/TSM_Library/vec3.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Math/TSM_Library/vec4.ts":
/*!************************************************!*\
  !*** ./src/WEBGL/src/Math/TSM_Library/vec4.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"vec4\": () => (/* binding */ vec4)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/WEBGL/src/Math/TSM_Library/constants.ts\");\n\r\nclass vec4 {\r\n    constructor(values) {\r\n        this.values = new Float32Array(4);\r\n        if (values !== undefined) {\r\n            this.xyzw = values;\r\n        }\r\n    }\r\n    get x() {\r\n        return this.values[0];\r\n    }\r\n    get y() {\r\n        return this.values[1];\r\n    }\r\n    get z() {\r\n        return this.values[2];\r\n    }\r\n    get w() {\r\n        return this.values[3];\r\n    }\r\n    get xy() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n        ];\r\n    }\r\n    get xyz() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n            this.values[2],\r\n        ];\r\n    }\r\n    get xyzw() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n            this.values[2],\r\n            this.values[3],\r\n        ];\r\n    }\r\n    set x(value) {\r\n        this.values[0] = value;\r\n    }\r\n    set y(value) {\r\n        this.values[1] = value;\r\n    }\r\n    set z(value) {\r\n        this.values[2] = value;\r\n    }\r\n    set w(value) {\r\n        this.values[3] = value;\r\n    }\r\n    set xy(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n    }\r\n    set xyz(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n        this.values[2] = values[2];\r\n    }\r\n    set xyzw(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n        this.values[2] = values[2];\r\n        this.values[3] = values[3];\r\n    }\r\n    get r() {\r\n        return this.values[0];\r\n    }\r\n    get g() {\r\n        return this.values[1];\r\n    }\r\n    get b() {\r\n        return this.values[2];\r\n    }\r\n    get a() {\r\n        return this.values[3];\r\n    }\r\n    get rg() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n        ];\r\n    }\r\n    get rgb() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n            this.values[2],\r\n        ];\r\n    }\r\n    get rgba() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n            this.values[2],\r\n            this.values[3],\r\n        ];\r\n    }\r\n    set r(value) {\r\n        this.values[0] = value;\r\n    }\r\n    set g(value) {\r\n        this.values[1] = value;\r\n    }\r\n    set b(value) {\r\n        this.values[2] = value;\r\n    }\r\n    set a(value) {\r\n        this.values[3] = value;\r\n    }\r\n    set rg(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n    }\r\n    set rgb(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n        this.values[2] = values[2];\r\n    }\r\n    set rgba(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n        this.values[2] = values[2];\r\n        this.values[3] = values[3];\r\n    }\r\n    at(index) {\r\n        return this.values[index];\r\n    }\r\n    reset() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        this.w = 0;\r\n    }\r\n    copy(dest) {\r\n        if (!dest) {\r\n            dest = new vec4();\r\n        }\r\n        dest.x = this.x;\r\n        dest.y = this.y;\r\n        dest.z = this.z;\r\n        dest.w = this.w;\r\n        return dest;\r\n    }\r\n    negate(dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        dest.x = -this.x;\r\n        dest.y = -this.y;\r\n        dest.z = -this.z;\r\n        dest.w = -this.w;\r\n        return dest;\r\n    }\r\n    equals(vector, threshold = _constants__WEBPACK_IMPORTED_MODULE_0__.epsilon) {\r\n        if (Math.abs(this.x - vector.x) > threshold) {\r\n            return false;\r\n        }\r\n        if (Math.abs(this.y - vector.y) > threshold) {\r\n            return false;\r\n        }\r\n        if (Math.abs(this.z - vector.z) > threshold) {\r\n            return false;\r\n        }\r\n        if (Math.abs(this.w - vector.w) > threshold) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    length() {\r\n        return Math.sqrt(this.squaredLength());\r\n    }\r\n    squaredLength() {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        return (x * x + y * y + z * z + w * w);\r\n    }\r\n    add(vector) {\r\n        this.x += vector.x;\r\n        this.y += vector.y;\r\n        this.z += vector.z;\r\n        this.w += vector.w;\r\n        return this;\r\n    }\r\n    subtract(vector) {\r\n        this.x -= vector.x;\r\n        this.y -= vector.y;\r\n        this.z -= vector.z;\r\n        this.w -= vector.w;\r\n        return this;\r\n    }\r\n    multiply(vector) {\r\n        this.x *= vector.x;\r\n        this.y *= vector.y;\r\n        this.z *= vector.z;\r\n        this.w *= vector.w;\r\n        return this;\r\n    }\r\n    divide(vector) {\r\n        this.x /= vector.x;\r\n        this.y /= vector.y;\r\n        this.z /= vector.z;\r\n        this.w /= vector.w;\r\n        return this;\r\n    }\r\n    scale(value, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        dest.x *= value;\r\n        dest.y *= value;\r\n        dest.z *= value;\r\n        dest.w *= value;\r\n        return dest;\r\n    }\r\n    normalize(dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        let length = this.length();\r\n        if (length === 1) {\r\n            return this;\r\n        }\r\n        if (length === 0) {\r\n            dest.x *= 0;\r\n            dest.y *= 0;\r\n            dest.z *= 0;\r\n            dest.w *= 0;\r\n            return dest;\r\n        }\r\n        length = 1.0 / length;\r\n        dest.x *= length;\r\n        dest.y *= length;\r\n        dest.z *= length;\r\n        dest.w *= length;\r\n        return dest;\r\n    }\r\n    multiplyMat4(matrix, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        return matrix.multiplyVec4(this, dest);\r\n    }\r\n    static mix(vector, vector2, time, dest) {\r\n        if (!dest) {\r\n            dest = new vec4();\r\n        }\r\n        dest.x = vector.x + time * (vector2.x - vector.x);\r\n        dest.y = vector.y + time * (vector2.y - vector.y);\r\n        dest.z = vector.z + time * (vector2.z - vector.z);\r\n        dest.w = vector.w + time * (vector2.w - vector.w);\r\n        return dest;\r\n    }\r\n    static sum(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec4();\r\n        }\r\n        dest.x = vector.x + vector2.x;\r\n        dest.y = vector.y + vector2.y;\r\n        dest.z = vector.z + vector2.z;\r\n        dest.w = vector.w + vector2.w;\r\n        return dest;\r\n    }\r\n    static difference(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec4();\r\n        }\r\n        dest.x = vector.x - vector2.x;\r\n        dest.y = vector.y - vector2.y;\r\n        dest.z = vector.z - vector2.z;\r\n        dest.w = vector.w - vector2.w;\r\n        return dest;\r\n    }\r\n    static product(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec4();\r\n        }\r\n        dest.x = vector.x * vector2.x;\r\n        dest.y = vector.y * vector2.y;\r\n        dest.z = vector.z * vector2.z;\r\n        dest.w = vector.w * vector2.w;\r\n        return dest;\r\n    }\r\n    static quotient(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec4();\r\n        }\r\n        dest.x = vector.x / vector2.x;\r\n        dest.y = vector.y / vector2.y;\r\n        dest.z = vector.z / vector2.z;\r\n        dest.w = vector.w / vector2.w;\r\n        return dest;\r\n    }\r\n}\r\nvec4.zero = new vec4([0, 0, 0, 1]);\r\nvec4.one = new vec4([1, 1, 1, 1]);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Math/TSM_Library/vec4.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/World/World.ts":
/*!**************************************!*\
  !*** ./src/WEBGL/src/World/World.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WorldMatrixNames\": () => (/* binding */ WorldMatrixNames),\n/* harmony export */   \"GLOBAL_WORLD\": () => (/* binding */ GLOBAL_WORLD),\n/* harmony export */   \"World\": () => (/* binding */ World)\n/* harmony export */ });\n/* harmony import */ var _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../BaseObject/GL/webGlUtil */ \"./src/WEBGL/src/BaseObject/GL/webGlUtil.ts\");\n/* harmony import */ var _Math_TSM_Library_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../Math/TSM_Library/constants */ \"./src/WEBGL/src/Math/TSM_Library/constants.ts\");\n/* harmony import */ var _Math_TSM_Library_mat4__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../Math/TSM_Library/mat4 */ \"./src/WEBGL/src/Math/TSM_Library/mat4.ts\");\n/* harmony import */ var _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../Math/TSM_Library/vec3 */ \"./src/WEBGL/src/Math/TSM_Library/vec3.ts\");\n/* harmony import */ var _Loader_FileReuqest__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Loader/FileReuqest */ \"./src/WEBGL/src/Loader/FileReuqest.ts\");\n/* harmony import */ var _BaseObject_Components_Mesh__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../BaseObject/Components/Mesh */ \"./src/WEBGL/src/BaseObject/Components/Mesh.ts\");\n/* harmony import */ var _BaseObject_Drawable__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../BaseObject/Drawable */ \"./src/WEBGL/src/BaseObject/Drawable.ts\");\n/* harmony import */ var _BaseObject_Components_Texture__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../BaseObject/Components/Texture */ \"./src/WEBGL/src/BaseObject/Components/Texture.ts\");\n/* harmony import */ var _BaseObject_Components_Material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../BaseObject/Components/Material */ \"./src/WEBGL/src/BaseObject/Components/Material.ts\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass AWorld {\r\n    constructor() {\r\n        this.camPos = new _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_3__.vec3([-50, 0, 0]);\r\n        this.lookAt = new _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_3__.vec3([0, 0, 0]);\r\n        this.zDirection = new _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_3__.vec3([0, 1, 0]);\r\n        this.worldMatrix = _Math_TSM_Library_mat4__WEBPACK_IMPORTED_MODULE_2__.mat4.identity;\r\n        this.viewMatrix = _Math_TSM_Library_mat4__WEBPACK_IMPORTED_MODULE_2__.mat4.lookAt(this.camPos, this.lookAt, this.zDirection);\r\n        this.projMatrix = _Math_TSM_Library_mat4__WEBPACK_IMPORTED_MODULE_2__.mat4.perspective((0,_Math_TSM_Library_constants__WEBPACK_IMPORTED_MODULE_1__.toRadians)(45), (_BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.canvas.width / _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.canvas.height), 0.1, 1000);\r\n    }\r\n    getWorldMatrix() {\r\n        return this.worldMatrix;\r\n    }\r\n    getViewMatrix() {\r\n        return this.viewMatrix;\r\n    }\r\n    getProjectionMatrix() {\r\n        return this.projMatrix;\r\n    }\r\n    rotateWorld(angle) {\r\n        this.worldMatrix.rotate(angle, new _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_3__.vec3([0.5, 0.5, 1]));\r\n    }\r\n}\r\nvar WorldMatrixNames;\r\n(function (WorldMatrixNames) {\r\n    WorldMatrixNames[\"World\"] = \"worldMatrix\";\r\n    WorldMatrixNames[\"Projection\"] = \"projMatrix\";\r\n    WorldMatrixNames[\"View\"] = \"viewMatrix\";\r\n})(WorldMatrixNames || (WorldMatrixNames = {}));\r\n;\r\nvar GLOBAL_WORLD;\r\nclass World extends AWorld {\r\n    constructor() {\r\n        super();\r\n        this._assets = [];\r\n        this._mat = new _BaseObject_Components_Material__WEBPACK_IMPORTED_MODULE_8__.Material(\"myMaterial\");\r\n        GLOBAL_WORLD = this;\r\n        this._asset = new _BaseObject_Drawable__WEBPACK_IMPORTED_MODULE_6__.DefaultCube(this._mat);\r\n        this._tex = new _BaseObject_Components_Texture__WEBPACK_IMPORTED_MODULE_7__.LoadableTexture(\"resources/images/RTS_Crate.png\");\r\n        var fr = new _Loader_FileReuqest__WEBPACK_IMPORTED_MODULE_4__.FileRequest(\"resources\\\\3d\\\\broken_steampunk_clock\\\\test.json\", this);\r\n    }\r\n    bind() {\r\n        this._mat.use();\r\n        this._mat.updateUniform_World(GLOBAL_WORLD.worldMatrix);\r\n        this._mat.updateUniform_Projection(GLOBAL_WORLD.projMatrix);\r\n        this._mat.updateUniform_Camera(GLOBAL_WORLD.viewMatrix);\r\n        this._tex.bind();\r\n    }\r\n    // # DRAWABLE IMPLEMENTATION \r\n    draw() {\r\n        this.bind();\r\n        this._tex.bind();\r\n        this._assets.forEach(a => {\r\n            this._tex.bind();\r\n            a.draw();\r\n        });\r\n        GLOBAL_WORLD.rotateWorld(0.005);\r\n    }\r\n    onFileRecieved(asset) {\r\n        console.log(\"ON FILE RECIEVED \");\r\n        var ASSET = asset.data;\r\n        var length = ASSET.meshes.length;\r\n        var _meshes = [];\r\n        for (let i = 0; i < length; i++) {\r\n            var mesh = ASSET.meshes[i];\r\n            var faceArr = [];\r\n            faceArr = [].concat.apply([], mesh.faces);\r\n            _meshes.push(new _BaseObject_Components_Mesh__WEBPACK_IMPORTED_MODULE_5__.Mesh(mesh.vertices, mesh.texturecoords[0], faceArr));\r\n        }\r\n        this._asset.setMesh(_meshes[0], this._mat);\r\n        _meshes.forEach(mesh => {\r\n            this._assets.push(new _BaseObject_Drawable__WEBPACK_IMPORTED_MODULE_6__.DefaultCube(this._mat));\r\n        });\r\n        for (let i = 0; i < _meshes.length; i++) {\r\n            this._assets[i].setMesh(_meshes[i], this._mat);\r\n        }\r\n        console.log(\"LENGTH HAS BECOME \" + this._assets.length);\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEBGL/src/World/World.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/main.ts":
/*!*******************************!*\
  !*** ./src/WEBGL/src/main.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"startClass\": () => (/* binding */ startClass)\n/* harmony export */ });\n/* harmony import */ var _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseObject/GL/webGlUtil */ \"./src/WEBGL/src/BaseObject/GL/webGlUtil.ts\");\n/* harmony import */ var _Loader_Assets_AssetManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Loader/Assets/AssetManager */ \"./src/WEBGL/src/Loader/Assets/AssetManager.ts\");\n/* harmony import */ var _Loader_Message_MessageBus__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Loader/Message/MessageBus */ \"./src/WEBGL/src/Loader/Message/MessageBus.ts\");\n/* harmony import */ var _test__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./test */ \"./src/WEBGL/src/test.ts\");\n/* harmony import */ var _World_World__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./World/World */ \"./src/WEBGL/src/World/World.ts\");\n\r\n\r\n\r\n\r\n\r\nclass startClass {\r\n    constructor() {\r\n        this.init();\r\n    }\r\n    init() {\r\n        _Loader_Assets_AssetManager__WEBPACK_IMPORTED_MODULE_1__.AssetManager.initialize();\r\n        startClass.canvas = _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_0__.WebGLUtil.initialize(\"c\");\r\n        var world = new _World_World__WEBPACK_IMPORTED_MODULE_4__.World();\r\n        requestAnimationFrame(this.update.bind(this));\r\n    }\r\n    update() {\r\n        _World_World__WEBPACK_IMPORTED_MODULE_4__.GLOBAL_WORLD.draw();\r\n        _Loader_Message_MessageBus__WEBPACK_IMPORTED_MODULE_2__.MessageBus.update(1);\r\n        requestAnimationFrame(this.update.bind(this));\r\n    }\r\n    init_test() {\r\n        _Loader_Assets_AssetManager__WEBPACK_IMPORTED_MODULE_1__.AssetManager.initialize();\r\n        //\r\n        this._e = new _test__WEBPACK_IMPORTED_MODULE_3__.testClass();\r\n        this._e.InitDemo();\r\n        requestAnimationFrame(this.update_test.bind(this));\r\n    }\r\n    update_test() {\r\n        this._e.update();\r\n        _Loader_Message_MessageBus__WEBPACK_IMPORTED_MODULE_2__.MessageBus.update(1);\r\n        requestAnimationFrame(this.update_test.bind(this));\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL21haW4udHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXNEO0FBQ007QUFDSDtBQUN0QjtBQUNpQjtBQUV6QyxNQUFNLFVBQVU7SUFLbkI7UUFDSSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUdNLElBQUk7UUFDUCxnRkFBdUIsRUFBRSxDQUFDO1FBQzFCLFVBQVUsQ0FBQyxNQUFNLEdBQUcsMEVBQW9CLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDOUMsSUFBSSxLQUFLLEdBQVcsSUFBSSwrQ0FBSyxFQUFFLENBQUM7UUFDaEMscUJBQXFCLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBQ00sTUFBTTtRQUNULDJEQUFpQixFQUFFLENBQUM7UUFDcEIseUVBQWlCLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDckIscUJBQXFCLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBU00sU0FBUztRQUNaLGdGQUF1QixFQUFFLENBQUM7UUFDMUIsRUFBRTtRQUNGLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSw0Q0FBUyxFQUFFLENBQUM7UUFDMUIsSUFBSSxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNuQixxQkFBcUIsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBRXZELENBQUM7SUFDTSxXQUFXO1FBQ2QsSUFBSSxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUNqQix5RUFBaUIsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNyQixxQkFBcUIsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3ZELENBQUM7Q0FFSiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmdsd2VicGFjay8uL3NyYy9XRUJHTC9zcmMvbWFpbi50cz8wMDhhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFdlYkdMVXRpbCB9IGZyb20gXCIuL0Jhc2VPYmplY3QvR0wvd2ViR2xVdGlsXCI7XHJcbmltcG9ydCB7IEFzc2V0TWFuYWdlciB9IGZyb20gXCIuL0xvYWRlci9Bc3NldHMvQXNzZXRNYW5hZ2VyXCI7XHJcbmltcG9ydCB7IE1lc3NhZ2VCdXMgfSBmcm9tIFwiLi9Mb2FkZXIvTWVzc2FnZS9NZXNzYWdlQnVzXCI7XHJcbmltcG9ydCB7IHRlc3RDbGFzcyB9IGZyb20gXCIuL3Rlc3RcIjtcclxuaW1wb3J0IHsgR0xPQkFMX1dPUkxELCBXb3JsZCB9IGZyb20gJy4vV29ybGQvV29ybGQnO1xyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBzdGFydENsYXNzIHtcclxuXHJcbiAgICAgICAgXHJcbiAgICAgICAgcHVibGljIHN0YXRpYyBjYW52YXMgOiBIVE1MQ2FudmFzRWxlbWVudDtcclxuXHJcbiAgICAgICAgcHVibGljIGNvbnN0cnVjdG9yKCl7XHJcbiAgICAgICAgICAgIHRoaXMuaW5pdCgpOyAgIFxyXG4gICAgICAgIH1cclxuXHJcblxyXG4gICAgICAgIHB1YmxpYyBpbml0KCk6IHZvaWR7XHJcbiAgICAgICAgICAgIEFzc2V0TWFuYWdlci5pbml0aWFsaXplKCk7XHJcbiAgICAgICAgICAgIHN0YXJ0Q2xhc3MuY2FudmFzID0gV2ViR0xVdGlsLmluaXRpYWxpemUoXCJjXCIpO1xyXG4gICAgICAgICAgICB2YXIgd29ybGQgOiBXb3JsZCA9IG5ldyBXb3JsZCgpO1xyXG4gICAgICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy51cGRhdGUuYmluZCh0aGlzKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHB1YmxpYyB1cGRhdGUoKXtcclxuICAgICAgICAgICAgR0xPQkFMX1dPUkxELmRyYXcoKTtcclxuICAgICAgICAgICAgTWVzc2FnZUJ1cy51cGRhdGUoMSk7XHJcbiAgICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLnVwZGF0ZS5iaW5kKHRoaXMpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgXHJcblxyXG5cclxuXHJcblxyXG4gICAgICAgIHB1YmxpYyBfZSA6IHRlc3RDbGFzcztcclxuICAgICAgICBwdWJsaWMgaW5pdF90ZXN0KCl7XHJcbiAgICAgICAgICAgIEFzc2V0TWFuYWdlci5pbml0aWFsaXplKCk7XHJcbiAgICAgICAgICAgIC8vXHJcbiAgICAgICAgICAgIHRoaXMuX2UgPSBuZXcgdGVzdENsYXNzKCk7XHJcbiAgICAgICAgICAgIHRoaXMuX2UuSW5pdERlbW8oKTtcclxuICAgICAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMudXBkYXRlX3Rlc3QuYmluZCh0aGlzKSk7XHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICBwdWJsaWMgdXBkYXRlX3Rlc3QoKTogdm9pZHtcclxuICAgICAgICAgICAgdGhpcy5fZS51cGRhdGUoKTtcclxuICAgICAgICAgICAgTWVzc2FnZUJ1cy51cGRhdGUoMSk7XHJcbiAgICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLnVwZGF0ZV90ZXN0LmJpbmQodGhpcykpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG5cclxuXHJcblxyXG5cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/WEBGL/src/main.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/test.ts":
/*!*******************************!*\
  !*** ./src/WEBGL/src/test.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"testClass\": () => (/* binding */ testClass)\n/* harmony export */ });\n/* harmony import */ var _Loader_Assets_AssetManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Loader/Assets/AssetManager */ \"./src/WEBGL/src/Loader/Assets/AssetManager.ts\");\n/* harmony import */ var _Loader_FileReuqest__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Loader/FileReuqest */ \"./src/WEBGL/src/Loader/FileReuqest.ts\");\n/* harmony import */ var _Math_TSM_Library_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Math/TSM_Library/constants */ \"./src/WEBGL/src/Math/TSM_Library/constants.ts\");\n/* harmony import */ var _Math_TSM_Library_mat4__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Math/TSM_Library/mat4 */ \"./src/WEBGL/src/Math/TSM_Library/mat4.ts\");\n/* harmony import */ var _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Math/TSM_Library/vec3 */ \"./src/WEBGL/src/Math/TSM_Library/vec3.ts\");\n\r\n\r\n\r\n\r\n\r\nclass testClass {\r\n    constructor() {\r\n        this._canvasid = \"c\";\r\n        this._camPos = new _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_4__.vec3([-5, 0, 0]);\r\n        this._lookAt = new _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_4__.vec3([0, 0, 0]);\r\n        this._zDirection = new _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_4__.vec3([0, 1, 0]);\r\n        this.angle = 0.01;\r\n        this.vertexShaderText = `\r\n        precision mediump float;\r\n        \r\n        attribute vec3 vertPosition;\r\n        attribute vec2 vertTexCoord;\r\n        varying vec2 fragTexCoord;\r\n        uniform mat4 mWorld;\r\n        uniform mat4 mView;\r\n        uniform mat4 mProj;\r\n        \r\n        void main()\r\n        {\r\n          fragTexCoord = vertTexCoord;\r\n          gl_Position = mProj * mView * mWorld * vec4(vertPosition, 1.0);\r\n        } `;\r\n        this.fragmentShaderText = `\r\n        precision mediump float;\r\n    \r\n        varying vec2 fragTexCoord;\r\n        uniform sampler2D sampler;\r\n    \r\n        void main()\r\n        {\r\n          gl_FragColor = texture2D(sampler, fragTexCoord);\r\n        }`;\r\n        this.image = new Uint8Array([255, 255, 255, 255]);\r\n        this.imageLoader = new _Loader_FileReuqest__WEBPACK_IMPORTED_MODULE_1__.FileRequest(\"resources/images/RTS_Crate.jpg\", this);\r\n    }\r\n    onFileRecieved(asset) {\r\n        this.image = _Loader_Assets_AssetManager__WEBPACK_IMPORTED_MODULE_0__.AssetManager.getAsset(\"resources/images/RTS_Crate.jpg\").data;\r\n        this.image = asset.data;\r\n        this.setupTextures(true);\r\n    }\r\n    InitDemo() {\r\n        this.setupCanvas();\r\n        this.setupShader();\r\n        this.setupMESH();\r\n        this.setupTextures();\r\n        this.setupWOrld();\r\n    }\r\n    setupCanvas() {\r\n        this.canvas = document.getElementById(\"c\");\r\n        this.canvas.width = 800;\r\n        this.canvas.height = 800;\r\n        this.gl = this.canvas.getContext(\"webgl\");\r\n        if (!this.gl) {\r\n            console.log('WebGL not supported, falling back on experimental-webgl');\r\n            this.gl = this.canvas.getContext('experimental-webgl');\r\n        }\r\n        if (!this.gl) {\r\n            alert('Your browser does not support WebGL');\r\n        }\r\n        this.gl.clearColor(0.75, 0.85, 0.8, 1.0);\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\r\n        this.gl.enable(this.gl.DEPTH_TEST);\r\n        this.gl.enable(this.gl.CULL_FACE);\r\n        this.gl.frontFace(this.gl.CCW);\r\n        this.gl.cullFace(this.gl.BACK);\r\n    }\r\n    setupShader() {\r\n        //\r\n        // Create shaders\r\n        // \r\n        var vertexShader = this.gl.createShader(this.gl.VERTEX_SHADER);\r\n        var fragmentShader = this.gl.createShader(this.gl.FRAGMENT_SHADER);\r\n        this.gl.shaderSource(vertexShader, this.vertexShaderText);\r\n        this.gl.shaderSource(fragmentShader, this.fragmentShaderText);\r\n        this.gl.compileShader(vertexShader);\r\n        if (!this.gl.getShaderParameter(vertexShader, this.gl.COMPILE_STATUS)) {\r\n            console.error('ERROR compiling vertex shader!', this.gl.getShaderInfoLog(vertexShader));\r\n            return;\r\n        }\r\n        this.gl.compileShader(fragmentShader);\r\n        if (!this.gl.getShaderParameter(fragmentShader, this.gl.COMPILE_STATUS)) {\r\n            console.error('ERROR compiling fragment shader!', this.gl.getShaderInfoLog(fragmentShader));\r\n            return;\r\n        }\r\n        this.program = this.gl.createProgram();\r\n        this.gl.attachShader(this.program, vertexShader);\r\n        this.gl.attachShader(this.program, fragmentShader);\r\n        this.gl.linkProgram(this.program);\r\n        if (!this.gl.getProgramParameter(this.program, this.gl.LINK_STATUS)) {\r\n            console.error('ERROR linking program!', this.gl.getProgramInfoLog(this.program));\r\n            return;\r\n        }\r\n        this.gl.validateProgram(this.program);\r\n        if (!this.gl.getProgramParameter(this.program, this.gl.VALIDATE_STATUS)) {\r\n            console.error('ERROR validating program!', this.gl.getProgramInfoLog(this.program));\r\n            return;\r\n        }\r\n    }\r\n    setupMESH() {\r\n        var boxVertices = [\r\n            // Top\r\n            -1.0, 1.0, -1.0, 0, 0,\r\n            -1.0, 1.0, 1.0, 0, 1,\r\n            1.0, 1.0, 1.0, 1, 1,\r\n            1.0, 1.0, -1.0, 1, 0,\r\n            // Left\r\n            -1.0, 1.0, 1.0, 0, 0,\r\n            -1.0, -1.0, 1.0, 1, 0,\r\n            -1.0, -1.0, -1.0, 1, 1,\r\n            -1.0, 1.0, -1.0, 0, 1,\r\n            // Right\r\n            1.0, 1.0, 1.0, 1, 1,\r\n            1.0, -1.0, 1.0, 0, 1,\r\n            1.0, -1.0, -1.0, 0, 0,\r\n            1.0, 1.0, -1.0, 1, 0,\r\n            // Front\r\n            1.0, 1.0, 1.0, 1, 1,\r\n            1.0, -1.0, 1.0, 1, 0,\r\n            -1.0, -1.0, 1.0, 0, 0,\r\n            -1.0, 1.0, 1.0, 0, 1,\r\n            // Back\r\n            1.0, 1.0, -1.0, 0, 0,\r\n            1.0, -1.0, -1.0, 0, 1,\r\n            -1.0, -1.0, -1.0, 1, 1,\r\n            -1.0, 1.0, -1.0, 1, 0,\r\n            // Bottom\r\n            -1.0, -1.0, -1.0, 1, 1,\r\n            -1.0, -1.0, 1.0, 1, 0,\r\n            1.0, -1.0, 1.0, 0, 0,\r\n            1.0, -1.0, -1.0, 0, 1,\r\n        ];\r\n        this.boxIndices =\r\n            [\r\n                // Top\r\n                0, 1, 2,\r\n                0, 2, 3,\r\n                // Left\r\n                5, 4, 6,\r\n                6, 4, 7,\r\n                // Right\r\n                8, 9, 10,\r\n                8, 10, 11,\r\n                // Front\r\n                13, 12, 14,\r\n                15, 14, 12,\r\n                // Back\r\n                16, 17, 18,\r\n                16, 18, 19,\r\n                // Bottom\r\n                21, 20, 22,\r\n                22, 20, 23\r\n            ];\r\n        var boxVertexBufferObject = this.gl.createBuffer();\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, boxVertexBufferObject);\r\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(boxVertices), this.gl.STATIC_DRAW);\r\n        var boxIndexBufferObject = this.gl.createBuffer();\r\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, boxIndexBufferObject);\r\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(this.boxIndices), this.gl.STATIC_DRAW);\r\n        var positionAttribLocation = this.gl.getAttribLocation(this.program, 'vertPosition');\r\n        var texCoordAttribLocation = this.gl.getAttribLocation(this.program, 'vertTexCoord');\r\n        this.gl.vertexAttribPointer(positionAttribLocation, // Attribute location\r\n        3, // Number of elements per attribute\r\n        this.gl.FLOAT, // Type of elements\r\n        false, 5 * Float32Array.BYTES_PER_ELEMENT, // Size of an individual vertex\r\n        0 // Offset from the beginning of a single vertex to this attribute\r\n        );\r\n        this.gl.vertexAttribPointer(texCoordAttribLocation, // Attribute location\r\n        2, // Number of elements per attribute\r\n        this.gl.FLOAT, // Type of elements\r\n        false, 5 * Float32Array.BYTES_PER_ELEMENT, // Size of an individual vertex\r\n        3 * Float32Array.BYTES_PER_ELEMENT // Offset from the beginning of a single vertex to this attribute\r\n        );\r\n        this.gl.enableVertexAttribArray(positionAttribLocation);\r\n        this.gl.enableVertexAttribArray(texCoordAttribLocation);\r\n    }\r\n    setupTextures(hasLoaded = false) {\r\n        this.boxTexture = this.gl.createTexture();\r\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.boxTexture);\r\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\r\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\r\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\r\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\r\n        if (hasLoaded) {\r\n            var LOOKATME = this.image;\r\n            this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, this.image);\r\n        }\r\n        else {\r\n            this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, this.image);\r\n        }\r\n        this.gl.bindTexture(this.gl.TEXTURE_2D, null);\r\n    }\r\n    setupWOrld() {\r\n        // Tell OpenGL state machine which program should be active.\r\n        this.gl.useProgram(this.program);\r\n        this.matWorldUniformLocation = this.gl.getUniformLocation(this.program, 'mWorld');\r\n        this.matViewUniformLocation = this.gl.getUniformLocation(this.program, 'mView');\r\n        this.matProjUniformLocation = this.gl.getUniformLocation(this.program, 'mProj');\r\n        this.worldMatrix = _Math_TSM_Library_mat4__WEBPACK_IMPORTED_MODULE_3__.mat4.identity;\r\n        this.viewMatrix = _Math_TSM_Library_mat4__WEBPACK_IMPORTED_MODULE_3__.mat4.lookAt(this._camPos, this._lookAt, this._zDirection);\r\n        this.projMatrix = _Math_TSM_Library_mat4__WEBPACK_IMPORTED_MODULE_3__.mat4.perspective((0,_Math_TSM_Library_constants__WEBPACK_IMPORTED_MODULE_2__.toRadians)(45), this.canvas.clientWidth / this.canvas.clientHeight, 0.1, 1000.0);\r\n        this.gl.uniformMatrix4fv(this.matWorldUniformLocation, false, this.worldMatrix.values);\r\n        this.gl.uniformMatrix4fv(this.matViewUniformLocation, false, this.viewMatrix.values);\r\n        this.gl.uniformMatrix4fv(this.matProjUniformLocation, false, this.projMatrix.values);\r\n    }\r\n    update() {\r\n        this.worldMatrix = this.worldMatrix.rotate(this.angle, new _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_4__.vec3([0.5, 0.5, 1]));\r\n        this.gl.uniformMatrix4fv(this.matWorldUniformLocation, false, this.worldMatrix.values);\r\n        this.gl.clearColor(0.75, 0.85, 0.8, 1.0);\r\n        this.gl.clear(this.gl.DEPTH_BUFFER_BIT | this.gl.COLOR_BUFFER_BIT);\r\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.boxTexture);\r\n        this.gl.activeTexture(this.gl.TEXTURE0);\r\n        this.gl.drawElements(this.gl.TRIANGLES, this.boxIndices.length, this.gl.UNSIGNED_SHORT, 0);\r\n        //requestAnimationFrame(loop);\r\n    }\r\n    ;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUNiLElBQUksV0FBVyxHQUNmO1lBQ0ksTUFBTTtZQUNOLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLEdBQUcsRUFBSSxDQUFDLEVBQUUsQ0FBQztZQUN2QixDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFLLENBQUMsRUFBRSxDQUFDO1lBQ3ZCLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFNLENBQUMsRUFBRSxDQUFDO1lBQ3ZCLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxHQUFHLEVBQUssQ0FBQyxFQUFFLENBQUM7WUFFdkIsT0FBTztZQUNQLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUssQ0FBQyxFQUFFLENBQUM7WUFDdkIsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFJLENBQUMsRUFBRSxDQUFDO1lBQ3ZCLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxFQUFHLENBQUMsRUFBRSxDQUFDO1lBQ3ZCLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLEdBQUcsRUFBSSxDQUFDLEVBQUUsQ0FBQztZQUV2QixRQUFRO1lBQ1IsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUssQ0FBQyxFQUFFLENBQUM7WUFDdEIsR0FBRyxFQUFFLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBSSxDQUFDLEVBQUUsQ0FBQztZQUN0QixHQUFHLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEVBQUcsQ0FBQyxFQUFFLENBQUM7WUFDdEIsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLEdBQUcsRUFBSSxDQUFDLEVBQUUsQ0FBQztZQUV0QixRQUFRO1lBQ1IsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUssQ0FBQyxFQUFFLENBQUM7WUFDdEIsR0FBRyxFQUFFLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBSyxDQUFDLEVBQUUsQ0FBQztZQUN2QixDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVB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QUNsQyxDQUFDO0lBQUEsQ0FBQztDQUVMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViZ2x3ZWJwYWNrLy4vc3JjL1dFQkdML3NyYy90ZXN0LnRzP2I5MTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXNzZXRNYW5hZ2VyIH0gZnJvbSBcIi4vTG9hZGVyL0Fzc2V0cy9Bc3NldE1hbmFnZXJcIjtcclxuaW1wb3J0IHsgRmlsZVJlcXVlc3QgfSBmcm9tIFwiLi9Mb2FkZXIvRmlsZVJldXFlc3RcIjtcclxuaW1wb3J0IHsgSUZpbGVSZXF1ZXN0UmVzcG9uc2UgfSBmcm9tIFwiLi9Mb2FkZXIvSUZpbGVSZXF1ZXN0UmVzcG9uc2VcIjtcclxuaW1wb3J0IHsgdG9SYWRpYW5zIH0gZnJvbSBcIi4vTWF0aC9UU01fTGlicmFyeS9jb25zdGFudHNcIjtcclxuaW1wb3J0IHsgbWF0NCB9IGZyb20gXCIuL01hdGgvVFNNX0xpYnJhcnkvbWF0NFwiO1xyXG5pbXBvcnQgeyB2ZWMzIH0gZnJvbSBcIi4vTWF0aC9UU01fTGlicmFyeS92ZWMzXCI7XHJcblxyXG4gICAgZXhwb3J0IGNsYXNzIHRlc3RDbGFzcyBpbXBsZW1lbnRzIElGaWxlUmVxdWVzdFJlc3BvbnNle1xyXG5cclxuICAgICAgICBwdWJsaWMgX2NhbnZhc2lkIDogc3RyaW5nID0gXCJjXCJcclxuICAgICAgICBwdWJsaWMgZ2w6IFdlYkdMUmVuZGVyaW5nQ29udGV4dDtcclxuICAgICAgICBwdWJsaWMgcHJvZ3JhbTtcclxuXHJcbiAgICAgICAgcHVibGljIF9jYW1Qb3MgPSBuZXcgdmVjMyhbLTUsMCwwXSk7XHJcbiAgICAgICAgcHVibGljIF9sb29rQXQgPSBuZXcgdmVjMyhbIDAsMCwwXSk7XHJcbiAgICAgICAgcHVibGljIF96RGlyZWN0aW9uID1uZXcgdmVjMyhbMCwxLDBdKTtcclxuXHJcbiAgICAgICAgcHVibGljIHdvcmxkTWF0cml4OiBtYXQ0OyBcclxuICAgICAgICBwdWJsaWMgdmlld01hdHJpeCA6IG1hdDQ7XHJcbiAgICAgICAgcHVibGljIHByb2pNYXRyaXggOiBtYXQ0O1xyXG5cclxuICAgICAgICBwdWJsaWMgbWF0V29ybGRVbmlmb3JtTG9jYXRpb24gO1xyXG4gICAgICAgIHB1YmxpYyBtYXRWaWV3VW5pZm9ybUxvY2F0aW9uICA7XHJcbiAgICAgICAgcHVibGljIG1hdFByb2pVbmlmb3JtTG9jYXRpb24gIDtcclxuXHJcbiAgICAgICAgcHVibGljIGJveFRleHR1cmU7XHJcbiAgICAgICAgcHVibGljIGJveEluZGljZXM7XHJcbiAgICAgICAgcHVibGljIGNhbnZhcztcclxuICAgICAgICBwdWJsaWMgYW5nbGUgOiBudW1iZXIgPSAwLjAxO1xyXG5cclxuICAgICAgICBwdWJsaWMgdmVydGV4U2hhZGVyVGV4dCA6IHN0cmluZyA9YFxyXG4gICAgICAgIHByZWNpc2lvbiBtZWRpdW1wIGZsb2F0O1xyXG4gICAgICAgIFxyXG4gICAgICAgIGF0dHJpYnV0ZSB2ZWMzIHZlcnRQb3NpdGlvbjtcclxuICAgICAgICBhdHRyaWJ1dGUgdmVjMiB2ZXJ0VGV4Q29vcmQ7XHJcbiAgICAgICAgdmFyeWluZyB2ZWMyIGZyYWdUZXhDb29yZDtcclxuICAgICAgICB1bmlmb3JtIG1hdDQgbVdvcmxkO1xyXG4gICAgICAgIHVuaWZvcm0gbWF0NCBtVmlldztcclxuICAgICAgICB1bmlmb3JtIG1hdDQgbVByb2o7XHJcbiAgICAgICAgXHJcbiAgICAgICAgdm9pZCBtYWluKClcclxuICAgICAgICB7XHJcbiAgICAgICAgICBmcmFnVGV4Q29vcmQgPSB2ZXJ0VGV4Q29vcmQ7XHJcbiAgICAgICAgICBnbF9Qb3NpdGlvbiA9IG1Qcm9qICogbVZpZXcgKiBtV29ybGQgKiB2ZWM0KHZlcnRQb3NpdGlvbiwgMS4wKTtcclxuICAgICAgICB9IGA7XHJcbiAgICAgICAgXHJcbiAgICAgICAgcHVibGljIGZyYWdtZW50U2hhZGVyVGV4dDogc3RyaW5nID1gXHJcbiAgICAgICAgcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7XHJcbiAgICBcclxuICAgICAgICB2YXJ5aW5nIHZlYzIgZnJhZ1RleENvb3JkO1xyXG4gICAgICAgIHVuaWZvcm0gc2FtcGxlcjJEIHNhbXBsZXI7XHJcbiAgICBcclxuICAgICAgICB2b2lkIG1haW4oKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgIGdsX0ZyYWdDb2xvciA9IHRleHR1cmUyRChzYW1wbGVyLCBmcmFnVGV4Q29vcmQpO1xyXG4gICAgICAgIH1gO1xyXG5cclxuXHJcblxyXG4gICAgICAgIHByaXZhdGUgaW1hZ2UgOiBhbnk7XHJcbiAgICAgICAgcHJpdmF0ZSBpbWFnZUxvYWRlciA6IEZpbGVSZXF1ZXN0O1xyXG4gICAgICAgIHB1YmxpYyBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgICAgICAgICB0aGlzLmltYWdlID0gbmV3IFVpbnQ4QXJyYXkoWzI1NSwyNTUsMjU1LDI1NV0pO1xyXG4gICAgICAgICAgICB0aGlzLmltYWdlTG9hZGVyID0gbmV3IEZpbGVSZXF1ZXN0KCBcInJlc291cmNlcy9pbWFnZXMvUlRTX0NyYXRlLmpwZ1wiLHRoaXMpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHVibGljIG9uRmlsZVJlY2lldmVkKCBhc3NldCA6IGFueSl7XHJcbiAgICAgICAgICAgIHRoaXMuaW1hZ2UgPSBBc3NldE1hbmFnZXIuZ2V0QXNzZXQoXCJyZXNvdXJjZXMvaW1hZ2VzL1JUU19DcmF0ZS5qcGdcIikuZGF0YTtcclxuICAgICAgICAgICAgdGhpcy5pbWFnZSA9IGFzc2V0LmRhdGE7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0dXBUZXh0dXJlcyh0cnVlKTtcclxuICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICBwdWJsaWMgSW5pdERlbW8oKTp2b2lkIHtcclxuICAgICAgICAgICAgdGhpcy5zZXR1cENhbnZhcygpO1xyXG4gICAgICAgICAgICB0aGlzLnNldHVwU2hhZGVyKCk7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0dXBNRVNIKCk7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0dXBUZXh0dXJlcygpOyBcclxuICAgICAgICAgICAgdGhpcy5zZXR1cFdPcmxkKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIHByaXZhdGUgc2V0dXBDYW52YXMoKTp2b2lke1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgdGhpcy5jYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNcIikgYXMgSFRNTENhbnZhc0VsZW1lbnQ7XHJcbiAgICAgICAgICAgIHRoaXMuY2FudmFzLndpZHRoID0gODAwO1xyXG4gICAgICAgICAgICB0aGlzLmNhbnZhcy5oZWlnaHQ9ODAwO1xyXG4gICAgICAgICAgICB0aGlzLmdsID0gdGhpcy5jYW52YXMuZ2V0Q29udGV4dChcIndlYmdsXCIpO1xyXG5cclxuICAgICAgICAgICAgaWYgKCF0aGlzLmdsKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnV2ViR0wgbm90IHN1cHBvcnRlZCwgZmFsbGluZyBiYWNrIG9uIGV4cGVyaW1lbnRhbC13ZWJnbCcpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5nbCA9IHRoaXMuY2FudmFzLmdldENvbnRleHQoJ2V4cGVyaW1lbnRhbC13ZWJnbCcpIGFzIFdlYkdMUmVuZGVyaW5nQ29udGV4dDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKCF0aGlzLmdsKSB7XHJcbiAgICAgICAgICAgICAgICBhbGVydCgnWW91ciBicm93c2VyIGRvZXMgbm90IHN1cHBvcnQgV2ViR0wnKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgdGhpcy5nbC5jbGVhckNvbG9yKDAuNzUsIDAuODUsIDAuOCwgMS4wKTtcclxuICAgICAgICAgICAgdGhpcy5nbC5jbGVhcih0aGlzLmdsLkNPTE9SX0JVRkZFUl9CSVQgfCB0aGlzLmdsLkRFUFRIX0JVRkZFUl9CSVQpO1xyXG4gICAgICAgICAgICB0aGlzLmdsLmVuYWJsZSh0aGlzLmdsLkRFUFRIX1RFU1QpO1xyXG4gICAgICAgICAgICB0aGlzLmdsLmVuYWJsZSh0aGlzLmdsLkNVTExfRkFDRSk7XHJcbiAgICAgICAgICAgIHRoaXMuZ2wuZnJvbnRGYWNlKHRoaXMuZ2wuQ0NXKTtcclxuICAgICAgICAgICAgdGhpcy5nbC5jdWxsRmFjZSh0aGlzLmdsLkJBQ0spO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICAgICAgcHJpdmF0ZSBzZXR1cFNoYWRlcigpOnZvaWR7XHJcblxyXG4gICAgICAgICAgICAvL1xyXG4gICAgICAgICAgICAvLyBDcmVhdGUgc2hhZGVyc1xyXG4gICAgICAgICAgICAvLyBcclxuICAgICAgICAgICAgdmFyIHZlcnRleFNoYWRlciA9IHRoaXMuZ2wuY3JlYXRlU2hhZGVyKHRoaXMuZ2wuVkVSVEVYX1NIQURFUik7XHJcbiAgICAgICAgICAgIHZhciBmcmFnbWVudFNoYWRlciA9IHRoaXMuZ2wuY3JlYXRlU2hhZGVyKHRoaXMuZ2wuRlJBR01FTlRfU0hBREVSKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuZ2wuc2hhZGVyU291cmNlKHZlcnRleFNoYWRlciwgdGhpcy52ZXJ0ZXhTaGFkZXJUZXh0KTtcclxuICAgICAgICAgICAgdGhpcy5nbC5zaGFkZXJTb3VyY2UoZnJhZ21lbnRTaGFkZXIsIHRoaXMuZnJhZ21lbnRTaGFkZXJUZXh0KTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuZ2wuY29tcGlsZVNoYWRlcih2ZXJ0ZXhTaGFkZXIpO1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuZ2wuZ2V0U2hhZGVyUGFyYW1ldGVyKHZlcnRleFNoYWRlciwgdGhpcy5nbC5DT01QSUxFX1NUQVRVUykpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoICAnRVJST1IgY29tcGlsaW5nIHZlcnRleCBzaGFkZXIhJywgdGhpcy5nbC5nZXRTaGFkZXJJbmZvTG9nKHZlcnRleFNoYWRlcikgICk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHRoaXMuZ2wuY29tcGlsZVNoYWRlcihmcmFnbWVudFNoYWRlcik7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5nbC5nZXRTaGFkZXJQYXJhbWV0ZXIoZnJhZ21lbnRTaGFkZXIsIHRoaXMuZ2wuQ09NUElMRV9TVEFUVVMpKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFUlJPUiBjb21waWxpbmcgZnJhZ21lbnQgc2hhZGVyIScsIHRoaXMuZ2wuZ2V0U2hhZGVySW5mb0xvZyhmcmFnbWVudFNoYWRlcikpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLnByb2dyYW0gPSB0aGlzLmdsLmNyZWF0ZVByb2dyYW0oKTtcclxuICAgICAgICAgICAgdGhpcy5nbC5hdHRhY2hTaGFkZXIodGhpcy5wcm9ncmFtICwgdmVydGV4U2hhZGVyKTtcclxuICAgICAgICAgICAgdGhpcy5nbC5hdHRhY2hTaGFkZXIodGhpcy5wcm9ncmFtICwgZnJhZ21lbnRTaGFkZXIpO1xyXG4gICAgICAgICAgICB0aGlzLmdsLmxpbmtQcm9ncmFtKHRoaXMucHJvZ3JhbSApO1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuZ2wuZ2V0UHJvZ3JhbVBhcmFtZXRlcih0aGlzLnByb2dyYW0gLCB0aGlzLmdsLkxJTktfU1RBVFVTKSkge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignRVJST1IgbGlua2luZyBwcm9ncmFtIScsIHRoaXMuZ2wuZ2V0UHJvZ3JhbUluZm9Mb2codGhpcy5wcm9ncmFtICkpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuZ2wudmFsaWRhdGVQcm9ncmFtKHRoaXMucHJvZ3JhbSApO1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuZ2wuZ2V0UHJvZ3JhbVBhcmFtZXRlcih0aGlzLnByb2dyYW0gLCB0aGlzLmdsLlZBTElEQVRFX1NUQVRVUykpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0VSUk9SIHZhbGlkYXRpbmcgcHJvZ3JhbSEnLCB0aGlzLmdsLmdldFByb2dyYW1JbmZvTG9nKHRoaXMucHJvZ3JhbSApKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHByaXZhdGUgc2V0dXBNRVNIKCk6dm9pZHtcclxuICAgICAgICAgICAgdmFyIGJveFZlcnRpY2VzID0gXHJcbiAgICAgICAgICAgIFsgLy8gWCwgWSwgWiAgICAgICAgICAgVSwgVlxyXG4gICAgICAgICAgICAgICAgLy8gVG9wXHJcbiAgICAgICAgICAgICAgICAtMS4wLCAxLjAsIC0xLjAsICAgMCwgMCxcclxuICAgICAgICAgICAgICAgIC0xLjAsIDEuMCwgMS4wLCAgICAwLCAxLFxyXG4gICAgICAgICAgICAgICAgMS4wLCAxLjAsIDEuMCwgICAgIDEsIDEsXHJcbiAgICAgICAgICAgICAgICAxLjAsIDEuMCwgLTEuMCwgICAgMSwgMCxcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBMZWZ0XHJcbiAgICAgICAgICAgICAgICAtMS4wLCAxLjAsIDEuMCwgICAgMCwgMCxcclxuICAgICAgICAgICAgICAgIC0xLjAsIC0xLjAsIDEuMCwgICAxLCAwLFxyXG4gICAgICAgICAgICAgICAgLTEuMCwgLTEuMCwgLTEuMCwgIDEsIDEsXHJcbiAgICAgICAgICAgICAgICAtMS4wLCAxLjAsIC0xLjAsICAgMCwgMSxcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBSaWdodFxyXG4gICAgICAgICAgICAgICAgMS4wLCAxLjAsIDEuMCwgICAgMSwgMSxcclxuICAgICAgICAgICAgICAgIDEuMCwgLTEuMCwgMS4wLCAgIDAsIDEsXHJcbiAgICAgICAgICAgICAgICAxLjAsIC0xLjAsIC0xLjAsICAwLCAwLFxyXG4gICAgICAgICAgICAgICAgMS4wLCAxLjAsIC0xLjAsICAgMSwgMCxcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBGcm9udFxyXG4gICAgICAgICAgICAgICAgMS4wLCAxLjAsIDEuMCwgICAgMSwgMSxcclxuICAgICAgICAgICAgICAgIDEuMCwgLTEuMCwgMS4wLCAgICAxLCAwLFxyXG4gICAgICAgICAgICAgICAgLTEuMCwgLTEuMCwgMS4wLCAgICAwLCAwLFxyXG4gICAgICAgICAgICAgICAgLTEuMCwgMS4wLCAxLjAsICAgIDAsIDEsXHJcblxyXG4gICAgICAgICAgICAgICAgLy8gQmFja1xyXG4gICAgICAgICAgICAgICAgMS4wLCAxLjAsIC0xLjAsICAgIDAsIDAsXHJcbiAgICAgICAgICAgICAgICAxLjAsIC0xLjAsIC0xLjAsICAgIDAsIDEsXHJcbiAgICAgICAgICAgICAgICAtMS4wLCAtMS4wLCAtMS4wLCAgICAxLCAxLFxyXG4gICAgICAgICAgICAgICAgLTEuMCwgMS4wLCAtMS4wLCAgICAxLCAwLFxyXG5cclxuICAgICAgICAgICAgICAgIC8vIEJvdHRvbVxyXG4gICAgICAgICAgICAgICAgLTEuMCwgLTEuMCwgLTEuMCwgICAxLCAxLFxyXG4gICAgICAgICAgICAgICAgLTEuMCwgLTEuMCwgMS4wLCAgICAxLCAwLFxyXG4gICAgICAgICAgICAgICAgMS4wLCAtMS4wLCAxLjAsICAgICAwLCAwLFxyXG4gICAgICAgICAgICAgICAgMS4wLCAtMS4wLCAtMS4wLCAgICAwLCAxLFxyXG4gICAgICAgICAgICBdO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5ib3hJbmRpY2VzID1cclxuICAgICAgICAgICAgW1xyXG4gICAgICAgICAgICAgICAgLy8gVG9wXHJcbiAgICAgICAgICAgICAgICAwLCAxLCAyLFxyXG4gICAgICAgICAgICAgICAgMCwgMiwgMyxcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBMZWZ0XHJcbiAgICAgICAgICAgICAgICA1LCA0LCA2LFxyXG4gICAgICAgICAgICAgICAgNiwgNCwgNyxcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBSaWdodFxyXG4gICAgICAgICAgICAgICAgOCwgOSwgMTAsXHJcbiAgICAgICAgICAgICAgICA4LCAxMCwgMTEsXHJcblxyXG4gICAgICAgICAgICAgICAgLy8gRnJvbnRcclxuICAgICAgICAgICAgICAgIDEzLCAxMiwgMTQsXHJcbiAgICAgICAgICAgICAgICAxNSwgMTQsIDEyLFxyXG5cclxuICAgICAgICAgICAgICAgIC8vIEJhY2tcclxuICAgICAgICAgICAgICAgIDE2LCAxNywgMTgsXHJcbiAgICAgICAgICAgICAgICAxNiwgMTgsIDE5LFxyXG5cclxuICAgICAgICAgICAgICAgIC8vIEJvdHRvbVxyXG4gICAgICAgICAgICAgICAgMjEsIDIwLCAyMixcclxuICAgICAgICAgICAgICAgIDIyLCAyMCwgMjNcclxuICAgICAgICAgICAgXTtcclxuXHJcbiAgICAgICAgICAgIHZhciBib3hWZXJ0ZXhCdWZmZXJPYmplY3QgPSB0aGlzLmdsLmNyZWF0ZUJ1ZmZlcigpO1xyXG4gICAgICAgICAgICB0aGlzLmdsLmJpbmRCdWZmZXIodGhpcy5nbC5BUlJBWV9CVUZGRVIsIGJveFZlcnRleEJ1ZmZlck9iamVjdCk7XHJcbiAgICAgICAgICAgIHRoaXMuZ2wuYnVmZmVyRGF0YSh0aGlzLmdsLkFSUkFZX0JVRkZFUiwgbmV3IEZsb2F0MzJBcnJheShib3hWZXJ0aWNlcyksIHRoaXMuZ2wuU1RBVElDX0RSQVcpO1xyXG5cclxuICAgICAgICAgICAgdmFyIGJveEluZGV4QnVmZmVyT2JqZWN0ID0gdGhpcy5nbC5jcmVhdGVCdWZmZXIoKTtcclxuICAgICAgICAgICAgdGhpcy5nbC5iaW5kQnVmZmVyKHRoaXMuZ2wuRUxFTUVOVF9BUlJBWV9CVUZGRVIsIGJveEluZGV4QnVmZmVyT2JqZWN0KTtcclxuICAgICAgICAgICAgdGhpcy5nbC5idWZmZXJEYXRhKHRoaXMuZ2wuRUxFTUVOVF9BUlJBWV9CVUZGRVIsIG5ldyBVaW50MTZBcnJheSh0aGlzLmJveEluZGljZXMpLCB0aGlzLmdsLlNUQVRJQ19EUkFXKTtcclxuXHJcbiAgICAgICAgICAgIHZhciBwb3NpdGlvbkF0dHJpYkxvY2F0aW9uID0gdGhpcy5nbC5nZXRBdHRyaWJMb2NhdGlvbih0aGlzLnByb2dyYW0gLCAndmVydFBvc2l0aW9uJyk7XHJcbiAgICAgICAgICAgIHZhciB0ZXhDb29yZEF0dHJpYkxvY2F0aW9uID0gdGhpcy5nbC5nZXRBdHRyaWJMb2NhdGlvbih0aGlzLnByb2dyYW0gLCAndmVydFRleENvb3JkJyk7XHJcbiAgICAgICAgICAgIHRoaXMuZ2wudmVydGV4QXR0cmliUG9pbnRlcihcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uQXR0cmliTG9jYXRpb24sIC8vIEF0dHJpYnV0ZSBsb2NhdGlvblxyXG4gICAgICAgICAgICAgICAgMywgLy8gTnVtYmVyIG9mIGVsZW1lbnRzIHBlciBhdHRyaWJ1dGVcclxuICAgICAgICAgICAgICAgIHRoaXMuZ2wuRkxPQVQsIC8vIFR5cGUgb2YgZWxlbWVudHNcclxuICAgICAgICAgICAgICAgIGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgNSAqIEZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVCwgLy8gU2l6ZSBvZiBhbiBpbmRpdmlkdWFsIHZlcnRleFxyXG4gICAgICAgICAgICAgICAgMCAvLyBPZmZzZXQgZnJvbSB0aGUgYmVnaW5uaW5nIG9mIGEgc2luZ2xlIHZlcnRleCB0byB0aGlzIGF0dHJpYnV0ZVxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgICB0aGlzLmdsLnZlcnRleEF0dHJpYlBvaW50ZXIoXHJcbiAgICAgICAgICAgICAgICB0ZXhDb29yZEF0dHJpYkxvY2F0aW9uLCAvLyBBdHRyaWJ1dGUgbG9jYXRpb25cclxuICAgICAgICAgICAgICAgIDIsIC8vIE51bWJlciBvZiBlbGVtZW50cyBwZXIgYXR0cmlidXRlXHJcbiAgICAgICAgICAgICAgICB0aGlzLmdsLkZMT0FULCAvLyBUeXBlIG9mIGVsZW1lbnRzXHJcbiAgICAgICAgICAgICAgICBmYWxzZSxcclxuICAgICAgICAgICAgICAgIDUgKiBGbG9hdDMyQXJyYXkuQllURVNfUEVSX0VMRU1FTlQsIC8vIFNpemUgb2YgYW4gaW5kaXZpZHVhbCB2ZXJ0ZXhcclxuICAgICAgICAgICAgICAgIDMgKiBGbG9hdDMyQXJyYXkuQllURVNfUEVSX0VMRU1FTlQgLy8gT2Zmc2V0IGZyb20gdGhlIGJlZ2lubmluZyBvZiBhIHNpbmdsZSB2ZXJ0ZXggdG8gdGhpcyBhdHRyaWJ1dGVcclxuICAgICAgICAgICAgKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuZ2wuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkocG9zaXRpb25BdHRyaWJMb2NhdGlvbik7XHJcbiAgICAgICAgICAgIHRoaXMuZ2wuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkodGV4Q29vcmRBdHRyaWJMb2NhdGlvbik7XHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICBwcml2YXRlIHNldHVwVGV4dHVyZXMoaGFzTG9hZGVkIDogYm9vbGVhbiA9IGZhbHNlICk6dm9pZHtcclxuICAgICAgICAgICAgdGhpcy5ib3hUZXh0dXJlID0gdGhpcy5nbC5jcmVhdGVUZXh0dXJlKCk7XHJcbiAgICAgICAgICAgIHRoaXMuZ2wuYmluZFRleHR1cmUodGhpcy5nbC5URVhUVVJFXzJELCB0aGlzLmJveFRleHR1cmUpO1xyXG4gICAgICAgICAgICB0aGlzLmdsLnRleFBhcmFtZXRlcmkodGhpcy5nbC5URVhUVVJFXzJELCB0aGlzLmdsLlRFWFRVUkVfV1JBUF9TLCB0aGlzLmdsLkNMQU1QX1RPX0VER0UpO1xyXG4gICAgICAgICAgICB0aGlzLmdsLnRleFBhcmFtZXRlcmkodGhpcy5nbC5URVhUVVJFXzJELCB0aGlzLmdsLlRFWFRVUkVfV1JBUF9ULCB0aGlzLmdsLkNMQU1QX1RPX0VER0UpO1xyXG4gICAgICAgICAgICB0aGlzLmdsLnRleFBhcmFtZXRlcmkodGhpcy5nbC5URVhUVVJFXzJELCB0aGlzLmdsLlRFWFRVUkVfTUlOX0ZJTFRFUiwgdGhpcy5nbC5MSU5FQVIpO1xyXG4gICAgICAgICAgICB0aGlzLmdsLnRleFBhcmFtZXRlcmkodGhpcy5nbC5URVhUVVJFXzJELCB0aGlzLmdsLlRFWFRVUkVfTUFHX0ZJTFRFUiwgdGhpcy5nbC5MSU5FQVIpO1xyXG4gICAgICAgICAgICBpZihoYXNMb2FkZWQpe1xyXG4gICAgICAgICAgICAgICAgdmFyIExPT0tBVE1FID0gdGhpcy5pbWFnZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZ2wudGV4SW1hZ2UyRChcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmdsLlRFWFRVUkVfMkQsIDAsIHRoaXMuZ2wuUkdCQSwgdGhpcy5nbC5SR0JBLFxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ2wuVU5TSUdORURfQllURSxcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmltYWdlXHJcbiAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgIHRoaXMuZ2wudGV4SW1hZ2UyRCggXHJcbiAgICAgICAgICAgICAgICB0aGlzLmdsLlRFWFRVUkVfMkQsXHJcbiAgICAgICAgICAgICAgICAwLCBcclxuICAgICAgICAgICAgICAgIHRoaXMuZ2wuUkdCQSxcclxuICAgICAgICAgICAgICAgIDEsXHJcbiAgICAgICAgICAgICAgICAxLFxyXG4gICAgICAgICAgICAgICAgMCxcclxuICAgICAgICAgICAgICAgIHRoaXMuZ2wuUkdCQSwgXHJcbiAgICAgICAgICAgICAgICB0aGlzLmdsLlVOU0lHTkVEX0JZVEUsIFxyXG4gICAgICAgICAgICAgICAgdGhpcy5pbWFnZVxyXG4gICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLmdsLmJpbmRUZXh0dXJlKHRoaXMuZ2wuVEVYVFVSRV8yRCwgbnVsbCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHByaXZhdGUgc2V0dXBXT3JsZCgpOnZvaWR7XHJcbiAgICAgICAgICAgIC8vIFRlbGwgT3BlbkdMIHN0YXRlIG1hY2hpbmUgd2hpY2ggcHJvZ3JhbSBzaG91bGQgYmUgYWN0aXZlLlxyXG4gICAgICAgICAgICB0aGlzLmdsLnVzZVByb2dyYW0odGhpcy5wcm9ncmFtKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMubWF0V29ybGRVbmlmb3JtTG9jYXRpb24gPSB0aGlzLmdsLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLnByb2dyYW0sICdtV29ybGQnKTtcclxuICAgICAgICAgICAgdGhpcy5tYXRWaWV3VW5pZm9ybUxvY2F0aW9uICA9IHRoaXMuZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMucHJvZ3JhbSwgJ21WaWV3Jyk7XHJcbiAgICAgICAgICAgIHRoaXMubWF0UHJvalVuaWZvcm1Mb2NhdGlvbiAgPSB0aGlzLmdsLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLnByb2dyYW0sICdtUHJvaicpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgdGhpcy53b3JsZE1hdHJpeCA9IG1hdDQuaWRlbnRpdHk7XHJcbiAgICAgICAgICAgIHRoaXMudmlld01hdHJpeCAgPSBtYXQ0Lmxvb2tBdCggdGhpcy5fY2FtUG9zLCB0aGlzLl9sb29rQXQsIHRoaXMuX3pEaXJlY3Rpb24pO1xyXG4gICAgICAgICAgICB0aGlzLnByb2pNYXRyaXggID0gbWF0NC5wZXJzcGVjdGl2ZSggdG9SYWRpYW5zKDQ1KSwgdGhpcy5jYW52YXMuY2xpZW50V2lkdGggLyB0aGlzLmNhbnZhcy5jbGllbnRIZWlnaHQsIDAuMSwgMTAwMC4wICk7XHJcblxyXG5cclxuICAgICAgICAgICAgdGhpcy5nbC51bmlmb3JtTWF0cml4NGZ2KHRoaXMubWF0V29ybGRVbmlmb3JtTG9jYXRpb24sZmFsc2UsIHRoaXMud29ybGRNYXRyaXgudmFsdWVzKTtcclxuICAgICAgICAgICAgdGhpcy5nbC51bmlmb3JtTWF0cml4NGZ2KHRoaXMubWF0Vmlld1VuaWZvcm1Mb2NhdGlvbiwgZmFsc2UsIHRoaXMudmlld01hdHJpeC52YWx1ZXMpO1xyXG4gICAgICAgICAgICB0aGlzLmdsLnVuaWZvcm1NYXRyaXg0ZnYodGhpcy5tYXRQcm9qVW5pZm9ybUxvY2F0aW9uLCBmYWxzZSwgdGhpcy5wcm9qTWF0cml4LnZhbHVlcyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgXHJcbiAgICAgICAgcHVibGljIHVwZGF0ZSgpOnZvaWR7XHJcblxyXG4gICAgICAgICAgICB0aGlzLndvcmxkTWF0cml4ID0gdGhpcy53b3JsZE1hdHJpeC5yb3RhdGUodGhpcy5hbmdsZSwgbmV3IHZlYzMoWzAuNSwwLjUsMV0pICk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgdGhpcy5nbC51bmlmb3JtTWF0cml4NGZ2KHRoaXMubWF0V29ybGRVbmlmb3JtTG9jYXRpb24sIGZhbHNlLCB0aGlzLndvcmxkTWF0cml4LnZhbHVlcyk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmdsLmNsZWFyQ29sb3IoMC43NSwgMC44NSwgMC44LCAxLjApO1xyXG4gICAgICAgICAgICB0aGlzLmdsLmNsZWFyKHRoaXMuZ2wuREVQVEhfQlVGRkVSX0JJVCB8IHRoaXMuZ2wuQ09MT1JfQlVGRkVSX0JJVCk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmdsLmJpbmRUZXh0dXJlKHRoaXMuZ2wuVEVYVFVSRV8yRCwgdGhpcy5ib3hUZXh0dXJlKTtcclxuICAgICAgICAgICAgdGhpcy5nbC5hY3RpdmVUZXh0dXJlKHRoaXMuZ2wuVEVYVFVSRTApO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5nbC5kcmF3RWxlbWVudHModGhpcy5nbC5UUklBTkdMRVMsIHRoaXMuYm94SW5kaWNlcy5sZW5ndGgsIHRoaXMuZ2wuVU5TSUdORURfU0hPUlQsIDApO1xyXG5cclxuICAgICAgICAgICAgLy9yZXF1ZXN0QW5pbWF0aW9uRnJhbWUobG9vcCk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICB9XHJcbiAgICAgICAgXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/WEBGL/src/test.ts\n");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _WEBGL_src_main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WEBGL/src/main */ \"./src/WEBGL/src/main.ts\");\n\r\nwindow.onload = () => {\r\n    var start;\r\n    start = new _WEBGL_src_main__WEBPACK_IMPORTED_MODULE_0__.startClass();\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBOEM7QUFFOUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFFLEVBQUU7SUFDaEIsSUFBSSxLQUFrQixDQUFDO0lBQ3ZCLEtBQUssR0FBRyxJQUFJLHVEQUFVLEVBQUUsQ0FBQztBQUM3QixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViZ2x3ZWJwYWNrLy4vc3JjL2luZGV4LnRzP2ZmYjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3RhcnRDbGFzcyB9IGZyb20gJy4vV0VCR0wvc3JjL21haW4nO1xyXG5cclxud2luZG93Lm9ubG9hZCA9ICgpPT57XHJcbiAgICB2YXIgc3RhcnQgOiBzdGFydENsYXNzO1xyXG4gICAgc3RhcnQgPSBuZXcgc3RhcnRDbGFzcygpO1xyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;