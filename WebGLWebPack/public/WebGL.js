/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/WEBGL/src/BaseObject/Components/GLMaterial.ts":
/*!***********************************************************!*\
  !*** ./src/WEBGL/src/BaseObject/Components/GLMaterial.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Material\": () => (/* binding */ Material),\n/* harmony export */   \"TextureDataInput\": () => (/* binding */ TextureDataInput),\n/* harmony export */   \"GLMaterial\": () => (/* binding */ GLMaterial),\n/* harmony export */   \"BackgroundMaterial\": () => (/* binding */ BackgroundMaterial)\n/* harmony export */ });\n/* harmony import */ var _GL_GLShader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../GL/GLShader */ \"./src/WEBGL/src/BaseObject/GL/GLShader.ts\");\n/* harmony import */ var _Math_TSM_Library_mat4__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Math/TSM_Library/mat4 */ \"./src/WEBGL/src/Math/TSM_Library/mat4.ts\");\n/* harmony import */ var _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../GL/webGlUtil */ \"./src/WEBGL/src/BaseObject/GL/webGlUtil.ts\");\n/* harmony import */ var _HashArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../HashArray */ \"./src/WEBGL/src/BaseObject/HashArray.ts\");\n/* harmony import */ var _World_World__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../World/World */ \"./src/WEBGL/src/World/World.ts\");\n\r\n\r\n\r\n\r\n\r\nclass Material {\r\n    constructor(shader) {\r\n        this._meshIndicees = [];\r\n        this.shader = shader;\r\n        this.VERTEX_POSITION = this.shader.getAttributeLocation(\"a_position\");\r\n        this.VERTEX_UV = this.shader.getAttributeLocation(\"a_texCord\");\r\n        this.VERTEX_NORMAL = this.shader.getAttributeLocation(\"a_normal\");\r\n        this.UNIFORM_WORLD = this.shader.getUniformLocation(\"worldMatrix\");\r\n        this.UNIFORM_CAMERA = this.shader.getUniformLocation(\"viewMatrix\");\r\n        this.UNIFORM_PROJECTION = this.shader.getUniformLocation(\"projMatrix\");\r\n    }\r\n    name() { return this.shader._name; }\r\n    ;\r\n    updateUniform_World(matrix) {\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_2__.gl.uniformMatrix4fv(this.UNIFORM_WORLD, false, matrix.values);\r\n    }\r\n    updateUniform_Camera(matrix) {\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_2__.gl.uniformMatrix4fv(this.UNIFORM_CAMERA, false, matrix.values);\r\n    }\r\n    updateUniform_Projection(matrix) {\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_2__.gl.uniformMatrix4fv(this.UNIFORM_PROJECTION, false, matrix.values);\r\n    }\r\n    use() {\r\n        this.shader.use();\r\n    }\r\n    static CreateShader(name) {\r\n        return new _GL_GLShader__WEBPACK_IMPORTED_MODULE_0__.DefaultShader(name);\r\n    }\r\n}\r\nclass TextureDataInput {\r\n    constructor(role, texture) {\r\n        this.role = role;\r\n        this.texture = texture;\r\n    }\r\n}\r\nclass TextureData {\r\n    constructor(uniform, textureNum, Texture, GL_TEXTURELOC) {\r\n        this.uniform = uniform;\r\n        this.textureNum = textureNum;\r\n        this.Texture = Texture;\r\n        this.GL_TEXTURELOC = GL_TEXTURELOC;\r\n    }\r\n}\r\nclass Material_02 extends Material {\r\n    constructor(shader) {\r\n        super(shader);\r\n        this.data = new _HashArray__WEBPACK_IMPORTED_MODULE_3__.HashArray();\r\n        this.reflectionMatrix = _Math_TSM_Library_mat4__WEBPACK_IMPORTED_MODULE_1__.mat4.getIdentity();\r\n    }\r\n    use() {\r\n        this.shader.use();\r\n    }\r\n    bind() {\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_2__.gl.uniform3fv(this.shader.getUniformLocation(\"eyePosition\"), _World_World__WEBPACK_IMPORTED_MODULE_4__.GLOBAL_WORLD.camPos.xyz);\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_2__.gl.uniformMatrix4fv(this.shader.getUniformLocation(\"reflectionMatrix\"), false, this.reflectionMatrix.values);\r\n        this.data.forEach((data, i) => {\r\n            _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_2__.gl.uniform1i(data.uniform, data.textureNum);\r\n            data.Texture.bind(data.GL_TEXTURELOC);\r\n        });\r\n    }\r\n    unBind() {\r\n        this.data.forEach((data, i) => {\r\n            _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_2__.gl.uniform1i(data.uniform, null);\r\n            data.Texture.unBind();\r\n        });\r\n    }\r\n    updateOther(val) { }\r\n    updateFilter(val) { }\r\n}\r\nclass Material_03 extends Material_02 {\r\n    constructor(name, texturesIN, shader) {\r\n        super(shader);\r\n        texturesIN.forEach(texture => {\r\n            var data = this.shader.ShaderTextureData.getHash(texture.role);\r\n            this.data.add(new TextureData(this.shader.getUniformLocation(data.role), data.index, texture.texture, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_2__.gl.TEXTURE0 + data.index), data.role);\r\n        });\r\n    }\r\n}\r\nclass GLMaterial extends Material_03 {\r\n    constructor(name, texturesIN) {\r\n        super(name, texturesIN, new _GL_GLShader__WEBPACK_IMPORTED_MODULE_0__.DefaultShader(name));\r\n    }\r\n}\r\nclass BackgroundMaterial extends Material_03 {\r\n    constructor(name, texturesIN) {\r\n        super(\"BackGMAT_\" + name, texturesIN, new _GL_GLShader__WEBPACK_IMPORTED_MODULE_0__.ShaderBackground(\"BackGMAT_\" + name));\r\n        var rotation = _World_World__WEBPACK_IMPORTED_MODULE_4__.GLOBAL_WORLD.getViewMatrix().copy().getRotationMATRIX();\r\n        this.reflectionMatrix = _World_World__WEBPACK_IMPORTED_MODULE_4__.GLOBAL_WORLD.projMatrix.copy().inverse();\r\n        this.reflectionMatrix = this.reflectionMatrix.multiply(rotation.inverse());\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEBGL/src/BaseObject/Components/GLMaterial.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/BaseObject/Components/GLMesh.ts":
/*!*******************************************************!*\
  !*** ./src/WEBGL/src/BaseObject/Components/GLMesh.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GLMesh\": () => (/* binding */ GLMesh)\n/* harmony export */ });\n/* harmony import */ var _GL_GLBuffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../GL/GLBuffer */ \"./src/WEBGL/src/BaseObject/GL/GLBuffer.ts\");\n/* harmony import */ var _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../GL/webGlUtil */ \"./src/WEBGL/src/BaseObject/GL/webGlUtil.ts\");\n/* harmony import */ var _Math_TSM_Library_mat4__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Math/TSM_Library/mat4 */ \"./src/WEBGL/src/Math/TSM_Library/mat4.ts\");\n/* harmony import */ var _World_World__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../World/World */ \"./src/WEBGL/src/World/World.ts\");\n\r\n\r\n\r\n\r\n\r\nclass MeshTracker {\r\n}\r\nclass GLMesh extends MeshTracker {\r\n    constructor(verticies = null, texCoords = null, faceIndecies = null, normals = null) {\r\n        super();\r\n        this.NotInversed = true;\r\n        this._bufferNames = [];\r\n        this._buffers = {};\r\n        this.transformLocation = null;\r\n        this.transform = _Math_TSM_Library_mat4__WEBPACK_IMPORTED_MODULE_2__.mat4.getIdentity();\r\n        this.hasLoadedShader = false;\r\n        this.verticies = verticies;\r\n        this.texCoords = texCoords;\r\n        this.faceIndecies = faceIndecies;\r\n        this._bufferNames.push(\"uv\");\r\n        this._buffers[\"uv\"] = new _GL_GLBuffer__WEBPACK_IMPORTED_MODULE_0__.GLBuffer(2, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.FLOAT, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.ARRAY_BUFFER, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.STATIC_DRAW);\r\n        this._bufferNames.push(\"loc\");\r\n        this._buffers[\"loc\"] = new _GL_GLBuffer__WEBPACK_IMPORTED_MODULE_0__.GLBuffer(3, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.FLOAT, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.ARRAY_BUFFER, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.STATIC_DRAW);\r\n        this._bufferNames.push(\"face\");\r\n        this._buffers[\"face\"] = new _GL_GLBuffer__WEBPACK_IMPORTED_MODULE_0__.GLBuffer(123, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.UNSIGNED_SHORT, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.ELEMENT_ARRAY_BUFFER, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TRIANGLES);\r\n    }\r\n    AssignThisBuffer(name, data, attrLocation, pointSize, offset) {\r\n        let attr = new _GL_GLBuffer__WEBPACK_IMPORTED_MODULE_0__.AttributeInfo(attrLocation, pointSize, offset);\r\n        AssignBuffer(this._buffers[name], data, attr);\r\n        function AssignBuffer(buffer, data, attr) {\r\n            buffer.bind();\r\n            buffer.addAttribute(attr);\r\n            buffer.pushData(data);\r\n            buffer.upload();\r\n            buffer.unbind();\r\n        }\r\n    }\r\n    loadShaderLocations(mat) {\r\n        this.hasLoadedShader = true;\r\n        this.POSITION = mat.VERTEX_POSITION;\r\n        this.UV = mat.VERTEX_UV;\r\n        this.NORMAL = mat.VERTEX_NORMAL;\r\n        // ALL ATTRIBTES THAT HAS ATTRIBUTE DATA \r\n        this.AssignThisBuffer(\"loc\", this.verticies, this.POSITION, 3, 0);\r\n        this.AssignThisBuffer(\"uv\", this.texCoords, this.UV, 2, 0);\r\n        // FACE INDICIES DOESNOT HAVE ATTRIBUTE DATA .. WHO KNOWS WHY\r\n        this._buffers[\"face\"].bind();\r\n        this._buffers[\"face\"].pushData(this.faceIndecies);\r\n        this._buffers[\"face\"].upload();\r\n        this._buffers[\"face\"].unbind();\r\n        // UNIFORMS \r\n        //this.transformLocation    = mat.LOCAL_VERT_TRANS;\r\n    }\r\n    bind() {\r\n        if (this.NotInversed) {\r\n            _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.enable(_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.CULL_FACE);\r\n        }\r\n        else {\r\n            _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.disable(_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.CULL_FACE);\r\n        }\r\n        this._bufferNames.forEach(name => {\r\n            if (name == \"norm\") {\r\n                this._buffers[name].bind(true);\r\n            }\r\n            else {\r\n                this._buffers[name].bind();\r\n            }\r\n        });\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.uniformMatrix4fv(this.transformLocation, false, this.transform.values);\r\n    }\r\n    draw() {\r\n        if (this.hasLoadedShader)\r\n            this._buffers[\"face\"].draw();\r\n    }\r\n    unbind() {\r\n        this._bufferNames.forEach(name => {\r\n            this._buffers[name].unbind();\r\n        });\r\n    }\r\n    setInverse(Inverse = true) {\r\n        if (Inverse) {\r\n            _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.disable(_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.CULL_FACE);\r\n        }\r\n        this.NotInversed = !Inverse;\r\n    }\r\n    static createBackgroundFarPlaneMesh() {\r\n        var a = _World_World__WEBPACK_IMPORTED_MODULE_3__.GLOBAL_WORLD.FarPlaneCoordinate / 10;\r\n        var mesh = new GLMesh([\r\n            -a, a, -a, -a, a, a, a, a, a, a, a, -a,\r\n            -a, a, a, -a, -a, a, -a, -a, -a, -a, a, -a,\r\n            a, a, a, a, -a, a, a, -a, -a, a, a, -a,\r\n            a, a, a, a, -a, a, -a, -a, a, -a, a, a,\r\n            a, a, -a, a, -a, -a, -a, -a, -a, -a, a, -a,\r\n            -a, -a, -a, -a, -a, a, a, -a, a, a, -a, -a\r\n        ], [\r\n            0, 0, 0, 1, 1, 1, 1, 0,\r\n            0, 0, 1, 0, 1, 1, 0, 1,\r\n            1, 1, 0, 1, 0, 0, 1, 0,\r\n            1, 1, 1, 0, 0, 0, 0, 1,\r\n            0, 0, 0, 1, 1, 1, 1, 0,\r\n            1, 1, 1, 0, 0, 0, 0, 1\r\n        ], [\r\n            0, 1, 2, 0, 2, 3,\r\n            5, 4, 6, 6, 4, 7,\r\n            8, 9, 10, 8, 10, 11,\r\n            13, 12, 14, 15, 14, 12,\r\n            16, 17, 18, 16, 18, 19,\r\n            21, 20, 22, 22, 20, 23\r\n        ]);\r\n        mesh.setInverse();\r\n        return mesh;\r\n    }\r\n    changeTransform(NEWtransform) {\r\n        this.transform = NEWtransform;\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEBGL/src/BaseObject/Components/GLMesh.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/BaseObject/Components/GLTexture.ts":
/*!**********************************************************!*\
  !*** ./src/WEBGL/src/BaseObject/Components/GLTexture.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GLTexture\": () => (/* binding */ GLTexture),\n/* harmony export */   \"LoadableTexture\": () => (/* binding */ LoadableTexture),\n/* harmony export */   \"CubeMapTexture\": () => (/* binding */ CubeMapTexture)\n/* harmony export */ });\n/* harmony import */ var _Loader_FileReuqest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Loader/FileReuqest */ \"./src/WEBGL/src/Loader/FileReuqest.ts\");\n/* harmony import */ var _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../GL/webGlUtil */ \"./src/WEBGL/src/BaseObject/GL/webGlUtil.ts\");\n\r\n\r\nclass GLTexture {\r\n    constructor(textureType = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_2D, clampMethod = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.CLAMP_TO_EDGE, filterMethod = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.LINEAR) {\r\n        this._texture = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.createTexture();\r\n        this.UintWidth = 1;\r\n        this.UintHeight = 1;\r\n        this.isUint = false;\r\n        this._textureType = textureType;\r\n        this._clampMethod = clampMethod;\r\n        this._filtrMethod = filterMethod;\r\n    }\r\n    changeFilter(filterMethod = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.LINEAR) {\r\n        this._filtrMethod = filterMethod;\r\n        this.loadtexture();\r\n    }\r\n    changeClamp(clampMethod = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.CLAMP_TO_EDGE) {\r\n        this._clampMethod = clampMethod;\r\n        this.loadtexture();\r\n    }\r\n    loadtexture() {\r\n        this.bind();\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.texParameteri(this._textureType, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_WRAP_S, this._clampMethod);\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.texParameteri(this._textureType, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_WRAP_T, this._clampMethod);\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.texParameteri(this._textureType, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_MIN_FILTER, this._filtrMethod);\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.texParameteri(this._textureType, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_MAG_FILTER, this._filtrMethod);\r\n        if (this.isUint) {\r\n            _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.texImage2D(_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_2D, 0, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.RGBA, this.UintWidth, this.UintHeight, 0, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.RGBA, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.UNSIGNED_BYTE, this.source);\r\n        }\r\n        else {\r\n            //texImage2D(target: GLenum, level: GLint, internalformat: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\r\n            _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.texImage2D(_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_2D, 0, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.RGBA, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.RGBA, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.UNSIGNED_BYTE, this.source);\r\n        }\r\n    }\r\n    bind(GL_TEXTURE_ID = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE0) {\r\n        this.THIS_GL_TEXTURE_ID = GL_TEXTURE_ID;\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.activeTexture(GL_TEXTURE_ID);\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.bindTexture(_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_2D, this._texture);\r\n    }\r\n    loadImage(source) {\r\n        this.isUint = false;\r\n        this.source = source;\r\n        this.loadtexture();\r\n    }\r\n    load_uintImage(source, uWidth = 1, uHeight = 1) {\r\n        this.UintWidth = uWidth;\r\n        this.UintHeight = uHeight;\r\n        this.isUint = true;\r\n        this.source = source;\r\n        this.loadtexture();\r\n    }\r\n    unBind() {\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.activeTexture(this.THIS_GL_TEXTURE_ID);\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.bindTexture(this._textureType, null);\r\n    }\r\n    static createCheckers(boxes = 8) {\r\n        function createLine(startWhite) {\r\n            var arr = [];\r\n            var bool = startWhite;\r\n            var curr = 0;\r\n            for (let a = 0; a < 8; a++) {\r\n                if (bool) {\r\n                    curr = 255;\r\n                }\r\n                else {\r\n                    curr = 0;\r\n                }\r\n                for (let i = 0; i < 8; i++) {\r\n                    arr.push(curr); // red \r\n                    arr.push(curr); // green\r\n                    arr.push(curr); // blue \r\n                    arr.push(255); // alpha \r\n                }\r\n                bool = !bool;\r\n            }\r\n            return arr;\r\n        }\r\n        var arr = [];\r\n        var whiteLine = true;\r\n        for (let i = 0; i < 8; i++) {\r\n            for (let a = 0; a < 8; a++) {\r\n                createLine(whiteLine).forEach(n => {\r\n                    arr.push(n);\r\n                });\r\n            }\r\n            whiteLine = !whiteLine;\r\n        }\r\n        var uint = new Uint8Array(arr);\r\n        var texture = new GLTexture();\r\n        texture.load_uintImage(uint, 64, 64);\r\n        return texture;\r\n    }\r\n}\r\nclass LoadableTexture extends GLTexture {\r\n    constructor(requestFile, textureType = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_2D, clampMethod = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.CLAMP_TO_EDGE, filterMethod = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.LINEAR) {\r\n        super(textureType, clampMethod, filterMethod);\r\n        this._request = requestFile;\r\n        this.load_uintImage(new Uint8Array([255, 255, 255, 255]));\r\n        this.requestImage();\r\n    }\r\n    reload(requests) {\r\n        this._request = requests;\r\n        this.requestImage();\r\n    }\r\n    onFileRecieved(asset) {\r\n        this.loadImage(asset.data);\r\n    }\r\n    requestImage() {\r\n        var fr = new _Loader_FileReuqest__WEBPACK_IMPORTED_MODULE_0__.FileRequest(this._request, this);\r\n    }\r\n}\r\nclass CubeMapTexture {\r\n    constructor(clampMethod = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.CLAMP_TO_EDGE, filterMethod = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.LINEAR) {\r\n        this.a1 = \"resources\\\\images\\\\cm_back.png   \";\r\n        this.a2 = \"resources\\\\images\\\\cm_bottom.png \";\r\n        this.a3 = \"resources\\\\images\\\\cm_front.png  \";\r\n        this.a4 = \"resources\\\\images\\\\cm_left.png   \";\r\n        this.a5 = \"resources\\\\images\\\\cm_right.png  \";\r\n        this.a6 = \"resources\\\\images\\\\cm_top.png    \";\r\n        this.a7 = \"resources\\\\images\\\\normalmap.png \";\r\n        this.a8 = \"resources\\\\images\\\\RTS_Crate.jpg \";\r\n        this.a9 = \"resources\\\\images\\\\RTS_Crate.png \";\r\n        this.requests = [];\r\n        this.images = [];\r\n        //private UintWidth   : number = 1;\r\n        //private UintHeight  : number = 1;\r\n        this.loaded = false;\r\n        this._clampMethod = clampMethod;\r\n        this._filtrMethod = filterMethod;\r\n        this.requests.push(this.a1);\r\n        this.requests.push(this.a2);\r\n        this.requests.push(this.a3);\r\n        this.requests.push(this.a4);\r\n        this.requests.push(this.a5);\r\n        this.requests.push(this.a6);\r\n        this.requests.push(this.a7);\r\n        this.requests.push(this.a8);\r\n        this.requests.push(this.a9);\r\n        this.requestImage();\r\n        this.texture = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.createTexture();\r\n    }\r\n    loadImage(source) {\r\n        //throw new Error('Method not implemented.');\r\n    }\r\n    load_uintImage(source, uWidth, uHeight) {\r\n        //throw new Error('Method not implemented.');\r\n    }\r\n    bind(GL_TEXTURE_ID = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE0) {\r\n        this.THIS_GL_TEXTURE_ID = GL_TEXTURE_ID;\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.activeTexture(GL_TEXTURE_ID);\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.bindTexture(_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_CUBE_MAP, this.texture);\r\n    }\r\n    unBind() {\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.activeTexture(this.THIS_GL_TEXTURE_ID);\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.bindTexture(_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_CUBE_MAP, null);\r\n    }\r\n    loadtexture() {\r\n        this.texture = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.createTexture();\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.bindTexture(_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_CUBE_MAP, this.texture);\r\n        for (var i = 0; i < 6; i++)\r\n            _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.texImage2D(_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.RGBA, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.RGBA, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.UNSIGNED_BYTE, this.images[i]);\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.generateMipmap(_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_CUBE_MAP);\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.texParameteri(_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_CUBE_MAP, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_MIN_FILTER, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.LINEAR_MIPMAP_LINEAR);\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.texParameteri(_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_CUBE_MAP, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_MAG_FILTER, this._filtrMethod); //Setup up scaling\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.texParameteri(_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_CUBE_MAP, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_MIN_FILTER, this._filtrMethod); //Setup down scaling\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.texParameteri(_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_CUBE_MAP, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_WRAP_S, this._clampMethod); //Stretch image to X position\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.texParameteri(_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_CUBE_MAP, _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_WRAP_T, this._clampMethod); //Stretch image to Y position\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.generateMipmap(_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_CUBE_MAP);\r\n        this.loaded = true;\r\n        _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.bindTexture(_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.TEXTURE_CUBE_MAP, null);\r\n        return this.texture;\r\n    }\r\n    onFileRecieved(asset) {\r\n        for (let i = 0; i < asset.length; i++) {\r\n            this.images.push(asset[i].data);\r\n        }\r\n        this.loadtexture();\r\n    }\r\n    requestImage() {\r\n        var fr = new _Loader_FileReuqest__WEBPACK_IMPORTED_MODULE_0__.FileRequestBundle(this.requests, this);\r\n    }\r\n    changeFilter(filterMethod = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.LINEAR) {\r\n        this._filtrMethod = filterMethod;\r\n        this.loadtexture();\r\n    }\r\n    changeClamp(clampMethod = _GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.CLAMP_TO_EDGE) {\r\n        this._clampMethod = clampMethod;\r\n        this.loadtexture();\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEBGL/src/BaseObject/Components/GLTexture.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/BaseObject/GL/GLBuffer.ts":
/*!*************************************************!*\
  !*** ./src/WEBGL/src/BaseObject/GL/GLBuffer.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"UniformInfo\": () => (/* binding */ UniformInfo),\n/* harmony export */   \"AttributeInfo\": () => (/* binding */ AttributeInfo),\n/* harmony export */   \"GLBuffer\": () => (/* binding */ GLBuffer)\n/* harmony export */ });\n/* harmony import */ var _webGlUtil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webGlUtil */ \"./src/WEBGL/src/BaseObject/GL/webGlUtil.ts\");\n// source https://www.youtube.com/watch?v=lbnr1gGmSMA\r\n\r\nclass UniformInfo {\r\n}\r\nclass AttributeInfo {\r\n    constructor(location = 0, size = 0, offset = 0) {\r\n        this.location = location;\r\n        this.size = size;\r\n        this.offset = offset;\r\n    }\r\n}\r\nclass GLBuffer {\r\n    constructor(elementSize, dataType = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.FLOAT, targerBufferType = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.ARRAY_BUFFER, mode = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.TRIANGLES) {\r\n        // ATTRIBUTES \r\n        this._hasAttributelocation = false;\r\n        this._attributes = [];\r\n        // UNIFORMS \r\n        this._hasUniformlocation = false;\r\n        this._uniforms = [];\r\n        this._data = [];\r\n        this._numElementsPerVertex = elementSize;\r\n        this._dataType = dataType;\r\n        this._targerBufferType = targerBufferType;\r\n        this._mode = mode;\r\n        // Byte Size\r\n        switch (this._dataType) {\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.FLOAT:\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.INT:\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.UNSIGNED_INT:\r\n                this._typeSize = 4;\r\n                break;\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.SHORT:\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.UNSIGNED_SHORT:\r\n                this._typeSize = 2;\r\n                break;\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.BYTE:\r\n                this._typeSize = 1;\r\n                break;\r\n            default:\r\n                throw new Error(\"Unrecognised data type \" + this._dataType.toString());\r\n        }\r\n        this._VertexSize = this._numElementsPerVertex * this._typeSize;\r\n        this._buffer = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.createBuffer();\r\n    }\r\n    destroy() {\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.deleteBuffer(this._buffer);\r\n    }\r\n    bind(normalized = false) {\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.bindBuffer(this._targerBufferType, this._buffer);\r\n        if (this._hasAttributelocation) {\r\n            for (let i = 0; i < this._attributes.length; i++) {\r\n                let a = this._attributes[i];\r\n                // the notes below references an \"array\" this is the data given to the Vertecies,                     \r\n                _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.vertexAttribPointer(a.location, // Where the Attribute we want to change is.\r\n                a.size, // the Number of Components Per a single vertex\r\n                this._dataType, // what type of Data is a single component\r\n                normalized, // should the data be fitted into a certain range between 1 and 0 \r\n                this._VertexSize, // How many elements to skip? between noteS?!!       \r\n                a.offset * this._typeSize // this is how far into the Array ( in bytes) we need to look for the start of this data entry\r\n                );\r\n                _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.enableVertexAttribArray(a.location);\r\n            }\r\n        }\r\n        if (this._hasUniformlocation) {\r\n            for (let i = 0; i < this._uniforms.length; i++) {\r\n                _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.uniformMatrix4fv(this._uniforms[i].location, false, this._uniforms[i].data);\r\n            }\r\n        }\r\n    }\r\n    unbind() {\r\n        if (this._hasAttributelocation) {\r\n            for (let i = 0; i < this._attributes.length; i++) {\r\n                _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.disableVertexAttribArray(this._attributes[i].location);\r\n            }\r\n        }\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.bindBuffer(this._targerBufferType, this._buffer);\r\n    }\r\n    addAttribute(data) {\r\n        this._hasAttributelocation = true;\r\n        this._attributes.push(data);\r\n    }\r\n    addUniformM4(data) {\r\n        this._hasUniformlocation = true;\r\n        this._uniforms.push(data);\r\n    }\r\n    pushData(data) {\r\n        for (let i = 0; i < data.length; i++) {\r\n            this._data.push(data[i]);\r\n        }\r\n    }\r\n    setData(data) {\r\n        this._data = [];\r\n        this.pushData(data);\r\n    }\r\n    upload() {\r\n        let bufferData;\r\n        switch (this._dataType) {\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.FLOAT:\r\n                bufferData = new Float32Array(this._data);\r\n                break;\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.INT:\r\n                bufferData = new Int32Array(this._data);\r\n                break;\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.UNSIGNED_INT:\r\n                bufferData = new Uint32Array(this._data);\r\n                break;\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.SHORT:\r\n                bufferData = new Int16Array(this._data);\r\n                break;\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.UNSIGNED_SHORT:\r\n                bufferData = new Uint16Array(this._data);\r\n                break;\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.BYTE:\r\n                bufferData = new Int8Array(this._data);\r\n                break;\r\n            case _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.UNSIGNED_BYTE:\r\n                bufferData = new Uint8Array(this._data);\r\n                break;\r\n            default:\r\n                throw new Error(\"Unrecognised data type in System failed. \" + this._dataType.toString());\r\n        }\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.bufferData(this._targerBufferType, bufferData, _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.STATIC_DRAW);\r\n    }\r\n    draw() {\r\n        if (this._targerBufferType === _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.ARRAY_BUFFER) {\r\n            _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.drawArrays(this._mode, 0, this._data.length / this._numElementsPerVertex);\r\n        }\r\n        else if (this._targerBufferType === _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.ELEMENT_ARRAY_BUFFER) {\r\n            _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.drawElements(this._mode, this._data.length, this._dataType, 0);\r\n        }\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEBGL/src/BaseObject/GL/GLBuffer.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/BaseObject/GL/GLShader.ts":
/*!*************************************************!*\
  !*** ./src/WEBGL/src/BaseObject/GL/GLShader.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GLShader\": () => (/* binding */ GLShader),\n/* harmony export */   \"GlTexData\": () => (/* binding */ GlTexData),\n/* harmony export */   \"DefaultShader\": () => (/* binding */ DefaultShader),\n/* harmony export */   \"ShaderBackground\": () => (/* binding */ ShaderBackground)\n/* harmony export */ });\n/* harmony import */ var _webGlUtil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webGlUtil */ \"./src/WEBGL/src/BaseObject/GL/webGlUtil.ts\");\n/* harmony import */ var _HashArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../HashArray */ \"./src/WEBGL/src/BaseObject/HashArray.ts\");\n// SOURCE https://www.youtube.com/watch?v=HQbzO0xDuX8\r\n\r\n\r\nclass GLShader {\r\n    /**\r\n     * Creates a new Shader Object, that contains vertex shader and fragment shader\r\n     * And a name for identification.\r\n     * @param name\r\n     * @param VertexSRC\r\n     * @param FragmentSRC\r\n     */\r\n    constructor(name, VertexSRC, FragmentSRC) {\r\n        this._attributes = {};\r\n        this._uniforms = {};\r\n        this.attrNames = [];\r\n        this.uniNames = [];\r\n        this.ShaderTextureData = new _HashArray__WEBPACK_IMPORTED_MODULE_1__.HashArray();\r\n        this._name = name;\r\n        let vShader = this.loadShader(VertexSRC, _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.VERTEX_SHADER);\r\n        let fShader = this.loadShader(FragmentSRC, _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.FRAGMENT_SHADER);\r\n        this.createProgram(vShader, fShader);\r\n        this.detectAttributes();\r\n        this.detectUniforms();\r\n    }\r\n    use() {\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.useProgram(this._program);\r\n        this.checkForErrors();\r\n    }\r\n    loadShader(src, shaderType) {\r\n        let shader = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.createShader(shaderType);\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.shaderSource(shader, src);\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.compileShader(shader);\r\n        let err = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getShaderInfoLog(shader);\r\n        if (err !== \"\") {\r\n            throw new Error(\"error compiling shader \\n\" + this._name + \" \" + err);\r\n        }\r\n        return shader;\r\n    }\r\n    createProgram(vShader, fShader) {\r\n        this._program = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.createProgram();\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.attachShader(this._program, vShader);\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.attachShader(this._program, fShader);\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.linkProgram(this._program);\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.linkProgram(this._program);\r\n        if (!_webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getProgramParameter(this._program, _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.LINK_STATUS)) {\r\n            console.error(\"Error in Linking Program\", _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getProgramInfoLog(this._program));\r\n            return;\r\n        }\r\n        this.checkForErrors();\r\n    }\r\n    detectAttributes() {\r\n        let aCount = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getProgramParameter(this._program, _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.ACTIVE_ATTRIBUTES);\r\n        for (let i = 0; i < aCount; i++) {\r\n            let aInfo = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getActiveAttrib(this._program, i);\r\n            if (!aInfo) {\r\n                break;\r\n            }\r\n            this._attributes[aInfo.name] = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getAttribLocation(this._program, aInfo.name);\r\n            this.attrNames.push(aInfo.name);\r\n        }\r\n    }\r\n    detectUniforms() {\r\n        let uCount = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getProgramParameter(this._program, _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.ACTIVE_UNIFORMS);\r\n        for (let i = 0; i < uCount; i++) {\r\n            let uInfo = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getActiveUniform(this._program, i);\r\n            if (!uInfo) {\r\n                break;\r\n            }\r\n            this._uniforms[uInfo.name] = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getUniformLocation(this._program, uInfo.name);\r\n            this.uniNames.push(uInfo.name);\r\n        }\r\n    }\r\n    getAttributeLocation(name) {\r\n        if (this._attributes[name] === undefined) {\r\n            var a = this._attributes[name];\r\n            var b = name;\r\n            throw new Error(\"unable to find shader \" + name + \" in shader \" + this._name);\r\n        }\r\n        return this._attributes[name];\r\n    }\r\n    getUniformLocation(name) {\r\n        if (this._uniforms[name] === undefined) {\r\n            var a = this._uniforms[name];\r\n            var b = name;\r\n            throw new Error(\"unable to find uniform \" + name + \" in shader \" + this._name);\r\n        }\r\n        return this._uniforms[name];\r\n    }\r\n    checkForErrors() {\r\n        _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.validateProgram(this._program);\r\n        if (!_webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getProgramParameter(this._program, _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.VALIDATE_STATUS)) {\r\n            console.error(\"Error in Validating Program\", _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getProgramInfoLog(this._program));\r\n            return;\r\n        }\r\n        let err = _webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.getProgramInfoLog(this._program);\r\n        if (err !== \"\") {\r\n            throw new Error(\"error Linking shader \" + this._name + \"\\n\" + err);\r\n        }\r\n    }\r\n}\r\nclass GlTexData {\r\n    constructor(role, index) {\r\n        this.role = role;\r\n        this.index = index;\r\n    }\r\n}\r\nclass DefaultShader extends GLShader {\r\n    constructor(name) {\r\n        let _vShaderSource = `\r\n\t\t\tprecision mediump float; \t\r\n\r\n\t\t\tattribute vec3 a_position;\r\n\t\t\tattribute vec2 a_texCord;\r\n\t\t\tattribute vec3 a_normal;\r\n\r\n\t\t\tvarying vec3 frag_normal;\r\n\t\t\tvarying vec2 fragTexCord;\r\n\t\t\tvarying vec3 fragPosition;\r\n\r\n\t\t\tuniform mat4 Ltransform;\r\n\t\t\tuniform mat4 worldMatrix;\r\n\t\t\tuniform mat4 viewMatrix;\r\n\t\t\tuniform mat4 projMatrix;\r\n\t\t\tuniform mat4 reflectionMatrix;\r\n\r\n\t\t\tvoid main(){\r\n\t\t\t\tfragPosition = vec3( vec4(a_position,1.0) * worldMatrix );\r\n\t\t\t\tfragTexCord = a_texCord;\r\n\t\t\t\tfrag_normal = a_normal;\r\n\t\t\t\tfrag_normal = normalize(a_position);//(worldMatrix * vec4(a_normal, 0.0)).xyz;\r\n\r\n\t\t\t\tgl_Position = (projMatrix * viewMatrix * worldMatrix * reflectionMatrix * vec4(a_position, 1.0))  ;\r\n\t\t\t}\r\n\t\t\t`;\r\n        let _fShaderSource = `\r\n\t\t\tprecision mediump float;\r\n\r\n\t\t\tvarying vec2 fragTexCord;\r\n\t\t\tvarying vec3 fragPosition;\r\n\t\t\tvarying vec3 frag_normal;\r\n\r\n\t\t\tuniform sampler2D base;\r\n\t\t\tuniform samplerCube cubeTexture;\r\n\t\t\tuniform vec3 eyePosition;\r\n\r\n\t\t\tvoid main(){\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tvec3 incident = ( eyePosition - fragPosition ) ;\r\n\t\t\t\t//gl_FragColor = vec4( test, 0.5 , 1.0 );\r\n\r\n\t\t\t\tvec3 ambINT   = vec3(0.4,0.4,0.4);\t\r\n\t\t\t\tvec3 sunINT   = vec3(0.7,0.6,0.1);\r\n\t\t\t\tvec3 sunDIR   = normalize(vec3(1.0,-4.0,0.0));\r\n\t\t\t\tvec3 lightINT = ambINT + sunINT + dot( frag_normal , sunDIR ) ;\r\n\r\n\t\t\t\tvec4 texBase    = texture2D( base \t, fragTexCord\t);\r\n\t\t\t\tvec4 cubeTex    = textureCube( cubeTexture \t,  reflect(incident,  frag_normal)  ); //normalize(frag_normal)\t);\r\n\r\n\t\t\t\t//gl_FragColor = textureCube(cubeTexture, normalize(v_normal));\r\n\t\t\t\t//gl_FragColor = cubeTex; //vec4( texBase.rgb * lightINT , texBase.a ) + ;\r\n\t\t\t\tgl_FragColor = vec4( texBase.rgb * lightINT , texBase.a ) + ( 0.2* textureCube(cubeTexture,frag_normal));\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t`;\r\n        super(\"DEFAULT_\" + name, _vShaderSource, _fShaderSource);\r\n        this.ShaderTextureData.add(new GlTexData(\"base\", 0), \"diffuse\");\r\n        this.ShaderTextureData.add(new GlTexData(\"cubeTexture\", 1), \"reflection\");\r\n    }\r\n}\r\nclass ShaderBackground extends GLShader {\r\n    constructor(name) {\r\n        let _vShaderSource = `\r\n\t\t\tprecision mediump float; \t\r\n\r\n\t\t\tattribute vec3 a_position;\r\n\t\t\tattribute vec2 a_texCord;\r\n\t\t\tattribute vec3 a_normal;\r\n\r\n\t\t\tvarying vec3 frag_normal;\r\n\t\t\tvarying vec2 fragTexCord;\r\n\t\t\tvarying vec3 fragPosition;\r\n\r\n\t\t\tuniform mat4 Ltransform;\r\n\t\t\tuniform mat4 worldMatrix;\r\n\t\t\tuniform mat4 viewMatrix;\r\n\t\t\tuniform mat4 projMatrix;\r\n\t\t\tuniform mat4 reflectionMatrix;\r\n\r\n\t\t\tvoid main(){\r\n\t\t\t\tfragPosition = vec3( vec4(a_position,1.0) * worldMatrix );\r\n\t\t\t\tfragTexCord = a_texCord;\r\n\t\t\t\tfrag_normal = a_normal;\r\n\t\t\t\tfrag_normal = normalize(a_position);//(worldMatrix * vec4(a_normal, 0.0)).xyz;\r\n\r\n\t\t\t\t\r\n                mat4 test = projMatrix * viewMatrix *worldMatrix ;\r\n\t\t\t\tgl_Position = (projMatrix  * reflectionMatrix * viewMatrix * worldMatrix *vec4(a_position, 1.0)) \r\n\t\t\t\t+(vec4(0,0,0,0) * reflectionMatrix) \r\n\t\t\t\t+ (vec4(0,0,0,0) * test) ;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t`;\r\n        let _fShaderSource = `\r\n\t\t\tprecision mediump float;\r\n\r\n\t\t\tvarying vec2 fragTexCord;\r\n\t\t\tvarying vec3 fragPosition;\r\n\t\t\tvarying vec3 frag_normal;\r\n\r\n\t\t\tuniform sampler2D base;\r\n\t\t\tuniform samplerCube cubeTexture;\r\n\t\t\tuniform vec3 eyePosition;\r\n\r\n\t\t\tvoid main(){\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tvec3 incident = ( eyePosition - fragPosition ) ;\r\n\t\t\t\t//gl_FragColor = vec4( test, 0.5 , 1.0 );\r\n\r\n\t\t\t\tvec3 ambINT   = vec3(0.4,0.4,0.4);\t\r\n\t\t\t\tvec3 sunINT   = vec3(0.7,0.6,0.1);\r\n\t\t\t\tvec3 sunDIR   = normalize(vec3(1.0,-4.0,0.0));\r\n\t\t\t\tvec3 lightINT = ambINT + sunINT + dot( frag_normal , sunDIR ) ;\r\n\r\n\t\t\t\tvec4 texBase    = texture2D( base \t, fragTexCord\t);\r\n\t\t\t\tvec4 cubeTex    = textureCube( cubeTexture \t,  reflect(incident,  frag_normal)  ); //normalize(frag_normal)\t);\r\n\r\n\t\t\t\t//gl_FragColor = textureCube(cubeTexture, normalize(v_normal));\r\n\t\t\t\t//gl_FragColor = cubeTex; //vec4( texBase.rgb * lightINT , texBase.a ) + ;\r\n\t\t\t\tgl_FragColor =  (  textureCube(cubeTexture,frag_normal));\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t`;\r\n        super(\"BACKGROUND_\", _vShaderSource, _fShaderSource);\r\n        this.ShaderTextureData.add(new GlTexData(\"base\", 0), \"diffuse\");\r\n        this.ShaderTextureData.add(new GlTexData(\"cubeTexture\", 1), \"reflection\");\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEBGL/src/BaseObject/GL/GLShader.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/BaseObject/GL/webGlUtil.ts":
/*!**************************************************!*\
  !*** ./src/WEBGL/src/BaseObject/GL/webGlUtil.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gl\": () => (/* binding */ gl),\n/* harmony export */   \"WebGLUtil\": () => (/* binding */ WebGLUtil)\n/* harmony export */ });\nvar gl;\r\nclass WebGLUtil {\r\n    // SOURCE https://www.youtube.com/watch?v=q7_6CSf5HlI\r\n    /**\r\n     * Initializes WebGl and Gl Variable. also creates a reference to a Canvas element,either by id or create a new one.\r\n     * @param idName\r\n     */\r\n    static initialize(idName) {\r\n        let canvas;\r\n        if (idName !== undefined) {\r\n            canvas = document.getElementById(idName);\r\n            if (canvas === undefined) {\r\n                throw new Error(\"Could not find Canvas element of Id \" + idName);\r\n            }\r\n        }\r\n        else {\r\n            canvas = document.createElement(\"canvas\");\r\n            document.body.appendChild(canvas);\r\n        }\r\n        gl = canvas.getContext(\"webgl\");\r\n        if (gl === undefined) {\r\n            throw new Error(\"Unable to initialize WebGL\");\r\n        }\r\n        gl.enable(gl.DEPTH_TEST);\r\n        return canvas;\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL0Jhc2VPYmplY3QvR0wvd2ViR2xVdGlsLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQVcsSUFBSSxFQUF5QixDQUFDO0FBRTlCLE1BQU0sU0FBUztJQUNsQixxREFBcUQ7SUFDckQ7OztPQUdHO0lBQ0ksTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUFlO1FBRXBDLElBQUksTUFBeUIsQ0FBQztRQUM5QixJQUFJLE1BQU0sS0FBSyxTQUFTLEVBQUU7WUFDdEIsTUFBTSxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFzQixDQUFDO1lBQzlELElBQUksTUFBTSxLQUFLLFNBQVMsRUFBRTtnQkFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHNDQUFzQyxHQUFHLE1BQU0sQ0FBQyxDQUFDO2FBQUU7U0FDbEc7YUFBTTtZQUNILE1BQU0sR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBc0IsQ0FBQztZQUMvRCxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUNyQztRQUVELEVBQUUsR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2hDLElBQUksRUFBRSxLQUFLLFNBQVMsRUFBRTtZQUNsQixNQUFNLElBQUksS0FBSyxDQUFDLDRCQUE0QixDQUFDLENBQUM7U0FDakQ7UUFDRCxFQUFFLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUN6QixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0NBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJnbHdlYnBhY2svLi9zcmMvV0VCR0wvc3JjL0Jhc2VPYmplY3QvR0wvd2ViR2xVdGlsLnRzP2Y0NjUiXSwic291cmNlc0NvbnRlbnQiOlsiICAgIGV4cG9ydCB2YXIgZ2w6IFdlYkdMUmVuZGVyaW5nQ29udGV4dDtcclxuXHJcbiAgICBleHBvcnQgY2xhc3MgV2ViR0xVdGlsIHtcclxuICAgICAgICAvLyBTT1VSQ0UgaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1xN182Q1NmNUhsSVxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEluaXRpYWxpemVzIFdlYkdsIGFuZCBHbCBWYXJpYWJsZS4gYWxzbyBjcmVhdGVzIGEgcmVmZXJlbmNlIHRvIGEgQ2FudmFzIGVsZW1lbnQsZWl0aGVyIGJ5IGlkIG9yIGNyZWF0ZSBhIG5ldyBvbmUuIFxyXG4gICAgICAgICAqIEBwYXJhbSBpZE5hbWVcclxuICAgICAgICAgKi9cclxuICAgICAgICBwdWJsaWMgc3RhdGljIGluaXRpYWxpemUoaWROYW1lPzogc3RyaW5nKTogSFRNTENhbnZhc0VsZW1lbnQge1xyXG5cclxuICAgICAgICAgICAgbGV0IGNhbnZhczogSFRNTENhbnZhc0VsZW1lbnQ7XHJcbiAgICAgICAgICAgIGlmIChpZE5hbWUgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWROYW1lKSBhcyBIVE1MQ2FudmFzRWxlbWVudDtcclxuICAgICAgICAgICAgICAgIGlmIChjYW52YXMgPT09IHVuZGVmaW5lZCkgeyB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZCBub3QgZmluZCBDYW52YXMgZWxlbWVudCBvZiBJZCBcIiArIGlkTmFtZSk7IH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIikgYXMgSFRNTENhbnZhc0VsZW1lbnQ7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNhbnZhcyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGdsID0gY2FudmFzLmdldENvbnRleHQoXCJ3ZWJnbFwiKTtcclxuICAgICAgICAgICAgaWYgKGdsID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byBpbml0aWFsaXplIFdlYkdMXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGdsLmVuYWJsZShnbC5ERVBUSF9URVNUKTtcclxuICAgICAgICAgICAgcmV0dXJuIGNhbnZhcztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/WEBGL/src/BaseObject/GL/webGlUtil.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/BaseObject/HashArray.ts":
/*!***********************************************!*\
  !*** ./src/WEBGL/src/BaseObject/HashArray.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"HashArray\": () => (/* binding */ HashArray)\n/* harmony export */ });\nclass HashArray {\r\n    constructor() {\r\n        this.hashList = {};\r\n        this.debugHashList = [];\r\n        this.elemList = [];\r\n        this.length = 0;\r\n        this.a = new Array();\r\n    }\r\n    // ADD THINGS\r\n    add(element, hash) {\r\n        if (!(this.hasIndex(hash))) {\r\n            this.hashList[hash] = this.length;\r\n            this.elemList.push(element);\r\n            this.debugHashList.push(hash);\r\n            this.length++;\r\n        }\r\n    }\r\n    // CHANGETHINGS\r\n    change(element, i) {\r\n        this.elemList[i] = element;\r\n    }\r\n    changeHash(element, hash) {\r\n        this.change(element, this.getIndex(hash));\r\n    }\r\n    // GET THINGS \r\n    get(i) {\r\n        return this.elemList[i];\r\n    }\r\n    getHash(hash) {\r\n        return this.elemList[this.hashList[hash]];\r\n    }\r\n    getIndex(hash) {\r\n        return this.hashList[hash];\r\n    }\r\n    hasIndex(hash) {\r\n        if (this.hashList[hash] != null)\r\n            return true;\r\n        return false;\r\n    }\r\n    forEach(callbackfn, thisArg) {\r\n        for (let i = 0; i < this.elemList.length; i++) {\r\n            callbackfn(this.get(i), i, this.elemList);\r\n        }\r\n    }\r\n    // for removing this as a dependency\r\n    getElemList() {\r\n        return this.elemList;\r\n    }\r\n    getNameList() {\r\n        return this.hashList;\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL0Jhc2VPYmplY3QvSGFzaEFycmF5LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNLFNBQVM7SUFBdEI7UUFFWSxhQUFRLEdBQThCLEVBQUU7UUFDeEMsa0JBQWEsR0FBYyxFQUFFLENBQUM7UUFDOUIsYUFBUSxHQUFTLEVBQUUsQ0FBQztRQUNyQixXQUFNLEdBQUcsQ0FBQyxDQUFDO1FBRVgsTUFBQyxHQUFjLElBQUksS0FBSyxFQUFLO0lBMkR4QyxDQUFDO0lBeERHLGFBQWE7SUFDTixHQUFHLENBQUMsT0FBVyxFQUFFLElBQVk7UUFFaEMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFO1lBRXhCLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztZQUNsQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUM1QixJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUM5QixJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7U0FFakI7SUFFTCxDQUFDO0lBRUQsZUFBZTtJQUNSLE1BQU0sQ0FBRSxPQUFXLEVBQUcsQ0FBVTtRQUNuQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLE9BQU8sQ0FBQztJQUMvQixDQUFDO0lBRU0sVUFBVSxDQUFFLE9BQVcsRUFBRyxJQUFXO1FBQ3hDLElBQUksQ0FBQyxNQUFNLENBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUUsQ0FBQztJQUNoRCxDQUFDO0lBRUQsY0FBYztJQUNQLEdBQUcsQ0FBQyxDQUFVO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRU0sT0FBTyxDQUFDLElBQVc7UUFDdEIsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUcsQ0FBQztJQUNsRCxDQUFDO0lBRU0sUUFBUSxDQUFDLElBQVc7UUFDdkIsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFFTSxRQUFRLENBQUMsSUFBVztRQUN2QixJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSTtZQUMzQixPQUFPLElBQUksQ0FBQztRQUNoQixPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDO0lBRU0sT0FBTyxDQUFFLFVBQXlELEVBQUUsT0FBYTtRQUNwRixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDM0MsVUFBVSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFHLElBQUksQ0FBQyxRQUFRLENBQUUsQ0FBQztTQUMvQztJQUNMLENBQUM7SUFFRCxvQ0FBb0M7SUFDN0IsV0FBVztRQUNkLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN6QixDQUFDO0lBRU0sV0FBVztRQUNkLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN6QixDQUFDO0NBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJnbHdlYnBhY2svLi9zcmMvV0VCR0wvc3JjL0Jhc2VPYmplY3QvSGFzaEFycmF5LnRzP2U1OGIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEhhc2hBcnJheTxUPntcclxuXHJcbiAgICBwcml2YXRlIGhhc2hMaXN0IDogeyBbaGFzaDpzdHJpbmddOm51bWJlciB9ID0ge31cclxuICAgIHByaXZhdGUgZGVidWdIYXNoTGlzdCA6IHN0cmluZ1tdID0gW107XHJcbiAgICBwcml2YXRlIGVsZW1MaXN0IDogVFtdID0gW107IFxyXG4gICAgcHVibGljIGxlbmd0aCA9IDA7XHJcblxyXG4gICAgcHVibGljIGEgOiBBcnJheTxUPiA9IG5ldyBBcnJheTxUPigpXHJcblxyXG5cclxuICAgIC8vIEFERCBUSElOR1NcclxuICAgIHB1YmxpYyBhZGQoZWxlbWVudCA6IFQsIGhhc2ggOnN0cmluZyl7XHJcblxyXG4gICAgICAgIGlmKCAhKHRoaXMuaGFzSW5kZXgoaGFzaCkpICl7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmhhc2hMaXN0W2hhc2hdID0gdGhpcy5sZW5ndGg7XHJcbiAgICAgICAgICAgIHRoaXMuZWxlbUxpc3QucHVzaChlbGVtZW50KTtcclxuICAgICAgICAgICAgdGhpcy5kZWJ1Z0hhc2hMaXN0LnB1c2goaGFzaCk7XHJcbiAgICAgICAgICAgIHRoaXMubGVuZ3RoKys7XHJcbiAgICAgICBcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgIC8vIENIQU5HRVRISU5HU1xyXG4gICAgcHVibGljIGNoYW5nZSggZWxlbWVudCA6IFQgLCBpIDogbnVtYmVyKXtcclxuICAgICAgICB0aGlzLmVsZW1MaXN0W2ldID0gZWxlbWVudDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgcHVibGljIGNoYW5nZUhhc2goIGVsZW1lbnQgOiBUICwgaGFzaDpzdHJpbmcpe1xyXG4gICAgICAgIHRoaXMuY2hhbmdlKCBlbGVtZW50LCB0aGlzLmdldEluZGV4KGhhc2gpICk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gR0VUIFRISU5HUyBcclxuICAgIHB1YmxpYyBnZXQoaSA6IG51bWJlcik6IFR7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbUxpc3RbaV07XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldEhhc2goaGFzaDpzdHJpbmcpOiBUe1xyXG4gICAgICAgIHJldHVybiB0aGlzLmVsZW1MaXN0WyAgdGhpcy5oYXNoTGlzdFtoYXNoXSAgXTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0SW5kZXgoaGFzaDpzdHJpbmcpOm51bWJlcntcclxuICAgICAgICByZXR1cm4gdGhpcy5oYXNoTGlzdFtoYXNoXTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgaGFzSW5kZXgoaGFzaDpzdHJpbmcpOmJvb2xlYW57XHJcbiAgICAgICAgaWYoIHRoaXMuaGFzaExpc3RbaGFzaF0gIT0gbnVsbCApXHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZm9yRWFjaCggY2FsbGJhY2tmbjogKHZhbHVlOiBULCBpbmRleDogbnVtYmVyLCBhcnJheTogVFtdKSA9PiB2b2lkLCB0aGlzQXJnPzogYW55KTogdm9pZHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuZWxlbUxpc3QubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY2FsbGJhY2tmbih0aGlzLmdldChpKSwgaSAsIHRoaXMuZWxlbUxpc3QgKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gZm9yIHJlbW92aW5nIHRoaXMgYXMgYSBkZXBlbmRlbmN5XHJcbiAgICBwdWJsaWMgZ2V0RWxlbUxpc3QoKSA6IFRbXXtcclxuICAgICAgICByZXR1cm4gdGhpcy5lbGVtTGlzdDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0TmFtZUxpc3QoKTogIHsgW2hhc2g6c3RyaW5nXTpudW1iZXJ9IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5oYXNoTGlzdDtcclxuICAgIH1cclxufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/WEBGL/src/BaseObject/HashArray.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Loader/Assets/AssetManager.ts":
/*!*****************************************************!*\
  !*** ./src/WEBGL/src/Loader/Assets/AssetManager.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MESSAGE_ASSET_LOADER_ASSET_LOADED\": () => (/* binding */ MESSAGE_ASSET_LOADER_ASSET_LOADED),\n/* harmony export */   \"AssetManager\": () => (/* binding */ AssetManager)\n/* harmony export */ });\n/* harmony import */ var _Message_Message__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Message/Message */ \"./src/WEBGL/src/Loader/Message/Message.ts\");\n/* harmony import */ var _Loaders_AssetLoader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Loaders/AssetLoader */ \"./src/WEBGL/src/Loader/Assets/Loaders/AssetLoader.ts\");\n/* harmony import */ var _Loaders_JSONAssetLoader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Loaders/JSONAssetLoader */ \"./src/WEBGL/src/Loader/Assets/Loaders/JSONAssetLoader.ts\");\n\r\n\r\n\r\n// Source https://www.youtube.com/watch?v=_wvvtCqXwYY&list=PLv8Ddw9K0JPiTHLMQw31Yh4qyTAcHRnJx&index=7 \r\nconst MESSAGE_ASSET_LOADER_ASSET_LOADED = \"LOADED::\";\r\nclass AssetManager {\r\n    constructor() {\r\n    }\r\n    static initialize() {\r\n        //console.log(\"IMAGE LOADER ADDED\");\r\n        AssetManager._loaders.push(new _Loaders_AssetLoader__WEBPACK_IMPORTED_MODULE_1__.ImageAssetLoader());\r\n        //console.log(\"JSON LOADER ADDED\");\r\n        AssetManager._loaders.push(new _Loaders_JSONAssetLoader__WEBPACK_IMPORTED_MODULE_2__.JSONAssetLoader());\r\n    }\r\n    static registerLoader(loader) {\r\n        AssetManager._loaders.push(loader);\r\n    }\r\n    static onAssetLoaded(asset) {\r\n        AssetManager._loadedAssets[asset.name] = asset;\r\n        _Message_Message__WEBPACK_IMPORTED_MODULE_0__.Message.send(MESSAGE_ASSET_LOADER_ASSET_LOADED + asset.name, this, asset);\r\n    }\r\n    static loadAsset(assetName) {\r\n        try {\r\n            let extension = assetName.split('.').pop().toLowerCase().replace(/ /g, \"\");\r\n            for (let i = 0; i < AssetManager._loaders.length; i++) {\r\n                let l = AssetManager._loaders[i];\r\n                var ext = \"\";\r\n                for (let a = 0; a < l.supportedExtensions.length; a++) {\r\n                    ext = l.supportedExtensions[a];\r\n                    if (ext == extension) {\r\n                        l.LoadAsset(assetName);\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n            console.warn(\"Unable to Load Asset with extension of [\" + extension + \"]\");\r\n        }\r\n        catch (_a) {\r\n            console.log(\"ERROR AT EXTENSIION : WAS : \" + assetName);\r\n            return false;\r\n        }\r\n    }\r\n    static isAssetLoaded(assetName) {\r\n        return AssetManager._loadedAssets[assetName] !== undefined;\r\n    }\r\n    static getAsset(assetName) {\r\n        if (AssetManager.isAssetLoaded(assetName)) {\r\n            return AssetManager._loadedAssets[assetName];\r\n        }\r\n        AssetManager.loadAsset(assetName);\r\n    }\r\n}\r\nAssetManager._loaders = [];\r\nAssetManager._loadedAssets = {};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL0xvYWRlci9Bc3NldHMvQXNzZXRNYW5hZ2VyLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTZDO0FBQ1k7QUFHRztBQUV4RCxzR0FBc0c7QUFDL0YsTUFBTSxpQ0FBaUMsR0FBRyxVQUFVO0FBQ3BELE1BQU0sWUFBWTtJQUtyQjtJQUNBLENBQUM7SUFFTSxNQUFNLENBQUMsVUFBVTtRQUNwQixvQ0FBb0M7UUFDcEMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxrRUFBZ0IsRUFBRSxDQUFDLENBQUM7UUFDbkQsbUNBQW1DO1FBQ25DLFlBQVksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUkscUVBQWUsRUFBRSxDQUFDLENBQUM7SUFFdEQsQ0FBQztJQUVNLE1BQU0sQ0FBQyxjQUFjLENBQUUsTUFBb0I7UUFDOUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUVNLE1BQU0sQ0FBQyxhQUFhLENBQUMsS0FBWTtRQUNwQyxZQUFZLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxLQUFLLENBQUM7UUFDL0MsMERBQVksQ0FDUixpQ0FBaUMsR0FBRyxLQUFLLENBQUMsSUFBSSxFQUM5QyxJQUFJLEVBQ0osS0FBSyxDQUNSLENBQUM7SUFDTixDQUFDO0lBRU0sTUFBTSxDQUFDLFNBQVMsQ0FBQyxTQUFnQjtRQUNwQyxJQUFHO1lBRUMsSUFBSSxTQUFTLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBRTNFLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxZQUFZLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtnQkFDbkQsSUFBSSxDQUFDLEdBQUcsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDakMsSUFBSSxHQUFHLEdBQVksRUFBRSxDQUFDO2dCQUV0QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtvQkFDbkQsR0FBRyxHQUFHLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDL0IsSUFBSSxHQUFHLElBQUksU0FBUyxFQUFFO3dCQUNsQixDQUFDLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDO3dCQUN2QixPQUFPLElBQUksQ0FBQztxQkFDZjtpQkFDSjthQUNKO1lBQ0QsT0FBTyxLQUFLLENBQUM7WUFDYixPQUFPLENBQUMsSUFBSSxDQUFDLDBDQUEwQyxHQUFHLFNBQVMsR0FBQyxHQUFHLENBQUMsQ0FBQztTQUM1RTtRQUFBLFdBQUs7WUFDRixPQUFPLENBQUMsR0FBRyxDQUFDLDhCQUE4QixHQUFHLFNBQVMsQ0FBQyxDQUFDO1lBQ3hELE9BQU8sS0FBSyxDQUFDO1NBQ2hCO0lBQ0wsQ0FBQztJQUVNLE1BQU0sQ0FBQyxhQUFhLENBQUMsU0FBZ0I7UUFDeEMsT0FBTyxZQUFZLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxLQUFNLFNBQVMsQ0FBQztJQUNoRSxDQUFDO0lBRU0sTUFBTSxDQUFDLFFBQVEsQ0FBQyxTQUFnQjtRQUNuQyxJQUFHLFlBQVksQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEVBQUM7WUFDckMsT0FBTyxZQUFZLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1NBQ2hEO1FBQ0QsWUFBWSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUV0QyxDQUFDOztBQTlEYyxxQkFBUSxHQUFtQixFQUFFLENBQUM7QUFDOUIsMEJBQWEsR0FBNEIsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmdsd2VicGFjay8uL3NyYy9XRUJHTC9zcmMvTG9hZGVyL0Fzc2V0cy9Bc3NldE1hbmFnZXIudHM/ZDA4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNZXNzYWdlIH0gZnJvbSBcIi4uL01lc3NhZ2UvTWVzc2FnZVwiO1xyXG5pbXBvcnQgeyBJbWFnZUFzc2V0TG9hZGVyIH0gZnJvbSBcIi4vTG9hZGVycy9Bc3NldExvYWRlclwiO1xyXG5pbXBvcnQgeyBJQXNzZXQgfSBmcm9tIFwiLi9JQXNzZXRcIjtcclxuaW1wb3J0IHsgSUFzc2V0TG9hZGVyIH0gZnJvbSBcIi4vTG9hZGVycy9JQXNzZXRMb2FkZXJcIjtcclxuaW1wb3J0IHsgSlNPTkFzc2V0TG9hZGVyIH0gZnJvbSBcIi4vTG9hZGVycy9KU09OQXNzZXRMb2FkZXJcIjtcclxuXHJcbiAgICAvLyBTb3VyY2UgaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1fd3Z2dENxWHdZWSZsaXN0PVBMdjhEZHc5SzBKUGlUSExNUXczMVloNHF5VEFjSFJuSngmaW5kZXg9NyBcclxuICAgIGV4cG9ydCBjb25zdCBNRVNTQUdFX0FTU0VUX0xPQURFUl9BU1NFVF9MT0FERUQgPSBcIkxPQURFRDo6XCJcclxuICAgIGV4cG9ydCBjbGFzcyBBc3NldE1hbmFnZXJ7XHJcblxyXG4gICAgICAgIHByaXZhdGUgc3RhdGljIF9sb2FkZXJzOiBJQXNzZXRMb2FkZXJbXSA9IFtdO1xyXG4gICAgICAgIHByaXZhdGUgc3RhdGljIF9sb2FkZWRBc3NldHM6IHtbbmFtZTpzdHJpbmddOklBc3NldCB9ID0ge31cclxuXHJcbiAgICAgICAgcHJpdmF0ZSBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHVibGljIHN0YXRpYyBpbml0aWFsaXplKCk6dm9pZHtcclxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcIklNQUdFIExPQURFUiBBRERFRFwiKTtcclxuICAgICAgICAgICAgQXNzZXRNYW5hZ2VyLl9sb2FkZXJzLnB1c2gobmV3IEltYWdlQXNzZXRMb2FkZXIoKSk7XHJcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCJKU09OIExPQURFUiBBRERFRFwiKTtcclxuICAgICAgICAgICAgQXNzZXRNYW5hZ2VyLl9sb2FkZXJzLnB1c2gobmV3IEpTT05Bc3NldExvYWRlcigpKTtcclxuICAgICAgICAgICBcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgcmVnaXN0ZXJMb2FkZXIoIGxvYWRlcjogSUFzc2V0TG9hZGVyICk6dm9pZHtcclxuICAgICAgICAgICAgQXNzZXRNYW5hZ2VyLl9sb2FkZXJzLnB1c2gobG9hZGVyKTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBwdWJsaWMgc3RhdGljIG9uQXNzZXRMb2FkZWQoYXNzZXQ6SUFzc2V0KTp2b2lke1xyXG4gICAgICAgICAgICBBc3NldE1hbmFnZXIuX2xvYWRlZEFzc2V0c1thc3NldC5uYW1lXSA9IGFzc2V0O1xyXG4gICAgICAgICAgICBNZXNzYWdlLnNlbmQoXHJcbiAgICAgICAgICAgICAgICBNRVNTQUdFX0FTU0VUX0xPQURFUl9BU1NFVF9MT0FERUQgKyBhc3NldC5uYW1lLFxyXG4gICAgICAgICAgICAgICAgdGhpcyxcclxuICAgICAgICAgICAgICAgIGFzc2V0XHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgc3RhdGljIGxvYWRBc3NldChhc3NldE5hbWU6c3RyaW5nKTpib29sZWFue1xyXG4gICAgICAgICAgICB0cnl7XHJcblxyXG4gICAgICAgICAgICAgICAgbGV0IGV4dGVuc2lvbiA9IGFzc2V0TmFtZS5zcGxpdCgnLicpLnBvcCgpLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvIC9nLCBcIlwiKTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBBc3NldE1hbmFnZXIuX2xvYWRlcnMubGVuZ3RoOyBpKyspIHsgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIGxldCBsID0gQXNzZXRNYW5hZ2VyLl9sb2FkZXJzW2ldO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBleHQgOiBzdHJpbmcgPSBcIlwiO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBhID0gMDsgYSA8IGwuc3VwcG9ydGVkRXh0ZW5zaW9ucy5sZW5ndGg7IGErKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBleHQgPSBsLnN1cHBvcnRlZEV4dGVuc2lvbnNbYV07ICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKCBleHQgPT0gZXh0ZW5zaW9uICl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsLkxvYWRBc3NldChhc3NldE5hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oXCJVbmFibGUgdG8gTG9hZCBBc3NldCB3aXRoIGV4dGVuc2lvbiBvZiBbXCIgKyBleHRlbnNpb24rXCJdXCIpO1xyXG4gICAgICAgICAgICB9Y2F0Y2h7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkVSUk9SIEFUIEVYVEVOU0lJT04gOiBXQVMgOiBcIiArIGFzc2V0TmFtZSk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgaXNBc3NldExvYWRlZChhc3NldE5hbWU6c3RyaW5nKTogYm9vbGVhbntcclxuICAgICAgICAgICAgcmV0dXJuIEFzc2V0TWFuYWdlci5fbG9hZGVkQXNzZXRzW2Fzc2V0TmFtZV0gICE9PSB1bmRlZmluZWQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgc3RhdGljIGdldEFzc2V0KGFzc2V0TmFtZTpzdHJpbmcpe1xyXG4gICAgICAgICAgICBpZihBc3NldE1hbmFnZXIuaXNBc3NldExvYWRlZChhc3NldE5hbWUpKXtcclxuICAgICAgICAgICAgICAgIHJldHVybiBBc3NldE1hbmFnZXIuX2xvYWRlZEFzc2V0c1thc3NldE5hbWVdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIEFzc2V0TWFuYWdlci5sb2FkQXNzZXQoYXNzZXROYW1lKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Loader/Assets/AssetManager.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Loader/Assets/Loaders/AssetLoader.ts":
/*!************************************************************!*\
  !*** ./src/WEBGL/src/Loader/Assets/Loaders/AssetLoader.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ImageAsset\": () => (/* binding */ ImageAsset),\n/* harmony export */   \"ImageAssetLoader\": () => (/* binding */ ImageAssetLoader)\n/* harmony export */ });\n/* harmony import */ var _AssetManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../AssetManager */ \"./src/WEBGL/src/Loader/Assets/AssetManager.ts\");\n//https://github.com/travisvroman/NamorvTech/blob/master/src/Engine/Core/Assets/ImageAssetLoader.ts\r\n\r\nclass ImageAsset {\r\n    constructor(name, data) {\r\n        this.name = name;\r\n        this.data = data;\r\n    }\r\n    get width() {\r\n        return this.data.width;\r\n    }\r\n    get Height() {\r\n        return this.data.height;\r\n    }\r\n}\r\nclass ImageAssetLoader {\r\n    get supportedExtensions() {\r\n        return [\"png\", \"gif\", \"jpg\"];\r\n    }\r\n    LoadAsset(assetName) {\r\n        let image = new Image();\r\n        image.onload = this.onImageLoaded.bind(this, assetName, image);\r\n        image.src = assetName;\r\n    }\r\n    onImageLoaded(assetName, image) {\r\n        //console.log(\"onImageLoaded + assetName/image\"+assetName+\"/\"+image);\r\n        let asset = new ImageAsset(assetName, image);\r\n        _AssetManager__WEBPACK_IMPORTED_MODULE_0__.AssetManager.onAssetLoaded(asset);\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL0xvYWRlci9Bc3NldHMvTG9hZGVycy9Bc3NldExvYWRlci50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxtR0FBbUc7QUFFcEQ7QUFLcEMsTUFBTSxVQUFVO0lBSW5CLFlBQW1CLElBQWEsRUFBRSxJQUF1QjtRQUNyRCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNyQixDQUFDO0lBQ0QsSUFBVyxLQUFLO1FBQ1osT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztJQUMzQixDQUFDO0lBQ0QsSUFBVyxNQUFNO1FBQ2IsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUM1QixDQUFDO0NBQ0o7QUFFTSxNQUFNLGdCQUFnQjtJQUV6QixJQUFXLG1CQUFtQjtRQUMxQixPQUFPLENBQUMsS0FBSyxFQUFDLEtBQUssRUFBQyxLQUFLLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRU0sU0FBUyxDQUFDLFNBQWlCO1FBQzlCLElBQUksS0FBSyxHQUFxQixJQUFJLEtBQUssRUFBRSxDQUFDO1FBQzFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFDLFNBQVMsRUFBQyxLQUFLLENBQUMsQ0FBQztRQUM3RCxLQUFLLENBQUMsR0FBRyxHQUFHLFNBQVMsQ0FBQztJQUMxQixDQUFDO0lBRU8sYUFBYSxDQUFDLFNBQWdCLEVBQUUsS0FBc0I7UUFDM0QscUVBQXFFO1FBQ3BFLElBQUksS0FBSyxHQUFHLElBQUksVUFBVSxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUM3QyxxRUFBMEIsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN0QyxDQUFDO0NBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJnbHdlYnBhY2svLi9zcmMvV0VCR0wvc3JjL0xvYWRlci9Bc3NldHMvTG9hZGVycy9Bc3NldExvYWRlci50cz9lZmViIl0sInNvdXJjZXNDb250ZW50IjpbIi8vaHR0cHM6Ly9naXRodWIuY29tL3RyYXZpc3Zyb21hbi9OYW1vcnZUZWNoL2Jsb2IvbWFzdGVyL3NyYy9FbmdpbmUvQ29yZS9Bc3NldHMvSW1hZ2VBc3NldExvYWRlci50c1xyXG5cclxuaW1wb3J0IHsgQXNzZXRNYW5hZ2VyIH0gZnJvbSBcIi4uL0Fzc2V0TWFuYWdlclwiO1xyXG5pbXBvcnQgeyBJQXNzZXQgfSBmcm9tIFwiLi4vSUFzc2V0XCI7XHJcbmltcG9ydCB7IElBc3NldExvYWRlciB9IGZyb20gXCIuL0lBc3NldExvYWRlclwiO1xyXG5cclxuICAgIFxyXG4gICAgZXhwb3J0IGNsYXNzIEltYWdlQXNzZXQgaW1wbGVtZW50cyBJQXNzZXR7XHJcbiAgICAgICAgcHVibGljIHJlYWRvbmx5IG5hbWU6IHN0cmluZztcclxuICAgICAgICBwdWJsaWMgcmVhZG9ubHkgZGF0YTogSFRNTEltYWdlRWxlbWVudDtcclxuXHJcbiAgICAgICAgcHVibGljIGNvbnN0cnVjdG9yKG5hbWUgOiBzdHJpbmcsIGRhdGEgOiBIVE1MSW1hZ2VFbGVtZW50KXtcclxuICAgICAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcclxuICAgICAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcHVibGljIGdldCB3aWR0aCgpOm51bWJlcntcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGF0YS53aWR0aDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcHVibGljIGdldCBIZWlnaHQoKTpudW1iZXJ7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRhdGEuaGVpZ2h0O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBleHBvcnQgY2xhc3MgSW1hZ2VBc3NldExvYWRlciBpbXBsZW1lbnRzIElBc3NldExvYWRlcntcclxuXHJcbiAgICAgICAgcHVibGljIGdldCBzdXBwb3J0ZWRFeHRlbnNpb25zKCk6IHN0cmluZ1tde1xyXG4gICAgICAgICAgICByZXR1cm4gW1wicG5nXCIsXCJnaWZcIixcImpwZ1wiXTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBMb2FkQXNzZXQoYXNzZXROYW1lOiBzdHJpbmcpOiB2b2lkIHtcclxuICAgICAgICAgICAgbGV0IGltYWdlOiBIVE1MSW1hZ2VFbGVtZW50ID0gbmV3IEltYWdlKCk7XHJcbiAgICAgICAgICAgIGltYWdlLm9ubG9hZCA9IHRoaXMub25JbWFnZUxvYWRlZC5iaW5kKHRoaXMsYXNzZXROYW1lLGltYWdlKTtcclxuICAgICAgICAgICAgaW1hZ2Uuc3JjID0gYXNzZXROYW1lO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJpdmF0ZSBvbkltYWdlTG9hZGVkKGFzc2V0TmFtZTpzdHJpbmcsIGltYWdlOkhUTUxJbWFnZUVsZW1lbnQpOnZvaWR7XHJcbiAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcIm9uSW1hZ2VMb2FkZWQgKyBhc3NldE5hbWUvaW1hZ2VcIithc3NldE5hbWUrXCIvXCIraW1hZ2UpO1xyXG4gICAgICAgICAgICBsZXQgYXNzZXQgPSBuZXcgSW1hZ2VBc3NldChhc3NldE5hbWUsIGltYWdlKTtcclxuICAgICAgICAgICAgQXNzZXRNYW5hZ2VyLm9uQXNzZXRMb2FkZWQoYXNzZXQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG4gIFxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Loader/Assets/Loaders/AssetLoader.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Loader/Assets/Loaders/JSONAssetLoader.ts":
/*!****************************************************************!*\
  !*** ./src/WEBGL/src/Loader/Assets/Loaders/JSONAssetLoader.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"JSONAsset\": () => (/* binding */ JSONAsset),\n/* harmony export */   \"JSONAssetLoader\": () => (/* binding */ JSONAssetLoader),\n/* harmony export */   \"JSON_3DSCENE_SORTER\": () => (/* binding */ JSON_3DSCENE_SORTER),\n/* harmony export */   \"BitangentEnum\": () => (/* binding */ BitangentEnum)\n/* harmony export */ });\n/* harmony import */ var _AssetManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../AssetManager */ \"./src/WEBGL/src/Loader/Assets/AssetManager.ts\");\n/* harmony import */ var _BaseObject_Components_GLMesh__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../BaseObject/Components/GLMesh */ \"./src/WEBGL/src/BaseObject/Components/GLMesh.ts\");\n/* harmony import */ var _BaseObject_Components_GLMaterial__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../BaseObject/Components/GLMaterial */ \"./src/WEBGL/src/BaseObject/Components/GLMaterial.ts\");\n/* harmony import */ var _BaseObject_HashArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../BaseObject/HashArray */ \"./src/WEBGL/src/BaseObject/HashArray.ts\");\n/* harmony import */ var _BaseObject_Components_GLTexture__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../BaseObject/Components/GLTexture */ \"./src/WEBGL/src/BaseObject/Components/GLTexture.ts\");\n\r\n\r\n\r\n\r\n\r\nclass JSONAsset {\r\n    constructor(name, data) {\r\n        this.name = name;\r\n        this.data = data;\r\n    }\r\n}\r\nclass JSONAssetLoader {\r\n    get supportedExtensions() {\r\n        return [\"json\"];\r\n    }\r\n    LoadAsset(assetName) {\r\n        var rawFile = new XMLHttpRequest();\r\n        rawFile.overrideMimeType(\"application/json\");\r\n        rawFile.open(\"GET\", assetName, true);\r\n        rawFile.onreadystatechange = function () {\r\n            if (rawFile.readyState === 4) {\r\n                JSONAssetLoader.onload(assetName, rawFile.responseText);\r\n            }\r\n        };\r\n        rawFile.send(null);\r\n    }\r\n    static onload(assetName, rawData) {\r\n        var JsonAsset = JSON.parse(rawData);\r\n        var sorter = new JSON_3DSCENE_SORTER(JsonAsset);\r\n        var asset = new JSONAsset(assetName, sorter);\r\n        _AssetManager__WEBPACK_IMPORTED_MODULE_0__.AssetManager.onAssetLoaded(asset);\r\n    }\r\n}\r\nclass JSON_3DSCENE_SORTER {\r\n    // ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- \r\n    constructor(asset) {\r\n        this.matArr = new _BaseObject_HashArray__WEBPACK_IMPORTED_MODULE_3__.HashArray();\r\n        this.meshArr = new _BaseObject_HashArray__WEBPACK_IMPORTED_MODULE_3__.HashArray();\r\n        this.nodeTreeLookup = {};\r\n        this.c = 0;\r\n        this.ASSET = asset;\r\n        // MATERIALS \r\n        var c = 0;\r\n        this.ASSET.materials.forEach(imat => {\r\n            var material = this.OperateMaterial(imat);\r\n            this.matArr.add(material, \"default\" + c++ + \"\");\r\n        });\r\n        // MESHES \r\n        c = 0;\r\n        this.ASSET.meshes.forEach(imesh => {\r\n            var mesh = this.OperateMesh(imesh);\r\n            mesh.MaterialIndex = imesh.materialindex;\r\n            mesh.Index = c;\r\n            mesh.name = imesh.name;\r\n            this.meshArr.add(mesh, imesh.name);\r\n            this.matArr.get(imesh.materialindex)._meshIndicees.push(c);\r\n            c++;\r\n        });\r\n        // LOAD MATERIALS INTO MESHES \r\n        this.matArr.forEach(MAT => {\r\n            MAT._meshIndicees.forEach(i => {\r\n                this.meshArr.get(i).loadShaderLocations(MAT);\r\n            });\r\n        });\r\n        //this.nodeTree.get( 0 ).ApplyOffset(mat, this.nodeTree.getElemList() );\r\n        /*var arrName : string[] = [];\r\n        asset.animations.forEach(       anim => {\r\n            arrName.push(anim.name);\r\n        }); */\r\n    }\r\n    // ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- \r\n    /*\r\n        private DFC( inode : NodeElement ) : number {\r\n            \r\n            var counter = 0;\r\n    \r\n            if(inode.children)\r\n            inode.children.forEach(e => {\r\n                counter += this.DFC(e);\r\n            });\r\n    \r\n            return counter + 1;\r\n        }\r\n     \r\n        private DFL( INODE : NodeElement ):void {\r\n    \r\n            class semiNode{\r\n                public PARENT_INDEX : number;\r\n                public INDEX : number ;\r\n                public INODE : NodeElement\r\n                public constructor(){}\r\n            };\r\n    \r\n            // DEPTH FIRST LOOKUP : not a search, but a look up all elements and instantiate nodes for em.\r\n            var que : semiNode[] = [];\r\n    \r\n            let FIRST : semiNode = new semiNode();\r\n            FIRST.PARENT_INDEX  = null  ;\r\n            FIRST.INDEX         = 0     ;\r\n            FIRST.INODE         = INODE ;\r\n    \r\n            que.push(FIRST)\r\n            var indexCounter = 1;\r\n            var RUNS = true;\r\n    \r\n            while( RUNS ){\r\n    \r\n                var c = que.pop();\r\n            \r\n                // CREATE A NEW NODE\r\n                var newNode = new Node(\r\n                    c.INODE.name,\r\n                    c.PARENT_INDEX,\r\n                    c.INDEX         );\r\n                    \r\n                newNode.giveOriginalTranslationMatrix( new mat4(c.INODE.transformation) );\r\n    \r\n                // if this node is a mesh node. add that to the node\r\n                if(    this.meshArr.hasIndex(c.INODE.name) ){\r\n                    newNode.meshIndex = this.meshArr.getIndex(c.INODE.name)\r\n                }\r\n    \r\n    \r\n                if(c.INODE.children){\r\n    \r\n                    newNode.CHILDREN_INDICES = [];\r\n                    c.INODE.children.forEach( e => { newNode.CHILDREN_INDICES.push( indexCounter++ ); });\r\n    \r\n                    newNode.CHILDREN_INDICES.forEach( (childIndex, i ) => {\r\n                        var S : semiNode = new semiNode();\r\n                        S.PARENT_INDEX  = c.INDEX;\r\n                        S.INDEX         = childIndex;\r\n                        S.INODE         = c.INODE.children[i];\r\n                        que.push( S );\r\n                    });\r\n    \r\n                }\r\n                \r\n                this.nodeTreeLookup[c.INODE.name] = newNode.INDEX;\r\n                this.nodeTree[newNode.INDEX] = newNode;\r\n    \r\n                if(que.length == 0)\r\n                    RUNS = false;\r\n                \r\n            }\r\n        }\r\n    \r\n        */\r\n    // ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- \r\n    OperateMaterial(mat) {\r\n        return new _BaseObject_Components_GLMaterial__WEBPACK_IMPORTED_MODULE_2__.GLMaterial(\"BaseMaterial\", [\r\n            new _BaseObject_Components_GLMaterial__WEBPACK_IMPORTED_MODULE_2__.TextureDataInput(\"diffuse\", _BaseObject_Components_GLTexture__WEBPACK_IMPORTED_MODULE_4__.GLTexture.createCheckers(8)),\r\n            new _BaseObject_Components_GLMaterial__WEBPACK_IMPORTED_MODULE_2__.TextureDataInput(\"reflection\", new _BaseObject_Components_GLTexture__WEBPACK_IMPORTED_MODULE_4__.CubeMapTexture()),\r\n        ]);\r\n    }\r\n    OperateMesh(mesh) {\r\n        return new _BaseObject_Components_GLMesh__WEBPACK_IMPORTED_MODULE_1__.GLMesh(mesh.vertices, mesh.texturecoords[0], [].concat.apply([], mesh.faces), mesh.normals);\r\n    }\r\n    // ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- \r\n    getMeshes() {\r\n        return this.meshArr.getElemList();\r\n    }\r\n    getMaterials() {\r\n        //return this._mats;\r\n        return this.matArr.getElemList();\r\n    }\r\n    getNodeTree() {\r\n        return this.nodeTree;\r\n    }\r\n    // ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- ### --- \r\n    hasNode(hash) {\r\n        if (this.nodeTreeLookup[hash] != null)\r\n            return true;\r\n        return false;\r\n    }\r\n    getNodeindex(hash) {\r\n        if (this.nodeTreeLookup[hash] != null)\r\n            return this.nodeTreeLookup[hash];\r\n        return null;\r\n    }\r\n}\r\nvar BitangentEnum;\r\n(function (BitangentEnum) {\r\n    BitangentEnum[\"NaN\"] = \"NaN\";\r\n})(BitangentEnum || (BitangentEnum = {}));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Loader/Assets/Loaders/JSONAssetLoader.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Loader/FileReuqest.ts":
/*!*********************************************!*\
  !*** ./src/WEBGL/src/Loader/FileReuqest.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FileRequest\": () => (/* binding */ FileRequest),\n/* harmony export */   \"FileRequestBundle\": () => (/* binding */ FileRequestBundle)\n/* harmony export */ });\n/* harmony import */ var _Assets_AssetManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Assets/AssetManager */ \"./src/WEBGL/src/Loader/Assets/AssetManager.ts\");\n/* harmony import */ var _Message_MessageBus__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Message/MessageBus */ \"./src/WEBGL/src/Loader/Message/MessageBus.ts\");\n\r\n\r\nclass FileRequest {\r\n    constructor(requestString, handler) {\r\n        this.requestStr = requestString;\r\n        this.handler = handler;\r\n        _Message_MessageBus__WEBPACK_IMPORTED_MODULE_1__.MessageBus.addSubscription(_Assets_AssetManager__WEBPACK_IMPORTED_MODULE_0__.MESSAGE_ASSET_LOADER_ASSET_LOADED + requestString, this);\r\n        this.content = _Assets_AssetManager__WEBPACK_IMPORTED_MODULE_0__.AssetManager.getAsset(requestString);\r\n        if (this.content != undefined || this.content != null) {\r\n            _Message_MessageBus__WEBPACK_IMPORTED_MODULE_1__.MessageBus.removeSubscription(_Assets_AssetManager__WEBPACK_IMPORTED_MODULE_0__.MESSAGE_ASSET_LOADER_ASSET_LOADED + requestString, this);\r\n            this.handler.onFileRecieved(this.content.data);\r\n        }\r\n    }\r\n    onMessage(message) {\r\n        this.handler.onFileRecieved(message.context);\r\n        //MessageBus.removeSubscription(MESSAGE_ASSET_LOADER_ASSET_LOADED +  this.requestStr, this);\r\n    }\r\n}\r\nclass FileRequestBundle {\r\n    constructor(requests, handler) {\r\n        this.requestIndicies = [];\r\n        this.requests = [];\r\n        this.handler = handler;\r\n        this.responses = Array(requests.length);\r\n        this.respCounter = Array(requests.length).fill(false);\r\n        requests.forEach((req, i) => {\r\n            this.requestIndicies.push(i);\r\n            this.requests.push(req);\r\n        });\r\n        requests.forEach((req, i) => {\r\n            _Message_MessageBus__WEBPACK_IMPORTED_MODULE_1__.MessageBus.addSubscription(_Assets_AssetManager__WEBPACK_IMPORTED_MODULE_0__.MESSAGE_ASSET_LOADER_ASSET_LOADED + req, this);\r\n            this.responses[i] = _Assets_AssetManager__WEBPACK_IMPORTED_MODULE_0__.AssetManager.getAsset(req);\r\n            if (this.responses[i] != undefined || this.responses[i] != null) {\r\n                _Message_MessageBus__WEBPACK_IMPORTED_MODULE_1__.MessageBus.removeSubscription(_Assets_AssetManager__WEBPACK_IMPORTED_MODULE_0__.MESSAGE_ASSET_LOADER_ASSET_LOADED + req, this);\r\n                this.handler.onFileRecieved(this.responses[i].data);\r\n                this.respCounter[i] = true;\r\n            }\r\n        });\r\n    }\r\n    matchesRequest(val) {\r\n        for (let i = 0; i < this.requests.length; i++) {\r\n            var req = this.requests[i];\r\n            if (req == val)\r\n                return i;\r\n        }\r\n        return -1;\r\n    }\r\n    onMessage(message) {\r\n        var match = this.matchesRequest(message.context.name);\r\n        if (match < 0)\r\n            console.warn(\"MESSAGE NAME HAD NO MATCH IN REQUEST\");\r\n        this.responses[match] = message.context;\r\n        this.respCounter[match] = true;\r\n        var resp = true;\r\n        this.respCounter.forEach(respBool => {\r\n            if (!respBool)\r\n                resp = false;\r\n        });\r\n        if (resp)\r\n            this.handler.onFileRecieved(this.responses);\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL0xvYWRlci9GaWxlUmV1cWVzdC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXdGO0FBS3RDO0FBR3ZDLE1BQU0sV0FBVztJQU1wQixZQUFvQixhQUFzQixFQUFHLE9BQThCO1FBRXZFLElBQUksQ0FBQyxVQUFVLEdBQUcsYUFBYSxDQUFDO1FBQ2hDLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBRXZCLDJFQUEwQixDQUFDLG1GQUFpQyxHQUFJLGFBQWEsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNyRixJQUFJLENBQUMsT0FBTyxHQUFHLHVFQUFxQixDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ3BELElBQUksSUFBSSxDQUFDLE9BQU8sSUFBSSxTQUFTLElBQUksSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLEVBQUM7WUFDbEQsOEVBQTZCLENBQUMsbUZBQWlDLEdBQUksYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ3hGLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDbEQ7SUFDTCxDQUFDO0lBRUQsU0FBUyxDQUFDLE9BQWlCO1FBQ3ZCLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFFLE9BQU8sQ0FBQyxPQUFPLENBQUUsQ0FBQztRQUMvQyw0RkFBNEY7SUFDaEcsQ0FBQztDQUNKO0FBRU0sTUFBTSxpQkFBaUI7SUFVMUIsWUFBb0IsUUFBbUIsRUFBRyxPQUE4QjtRQVBoRSxvQkFBZSxHQUFlLEVBQUUsQ0FBQztRQUNqQyxhQUFRLEdBQWMsRUFBRSxDQUFDO1FBUTdCLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFTLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNoRCxJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBVSxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRS9ELFFBQVEsQ0FBQyxPQUFPLENBQUUsQ0FBQyxHQUFHLEVBQUMsQ0FBQyxFQUFFLEVBQUU7WUFDeEIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDN0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDNUIsQ0FBQyxDQUFDLENBQUM7UUFFSCxRQUFRLENBQUMsT0FBTyxDQUFFLENBQUMsR0FBRyxFQUFDLENBQUMsRUFBRSxFQUFFO1lBRXhCLDJFQUEwQixDQUFDLG1GQUFpQyxHQUFJLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztZQUMzRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxHQUFHLHVFQUFxQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQy9DLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxTQUFTLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLEVBQUM7Z0JBQzVELDhFQUE2QixDQUFDLG1GQUFpQyxHQUFJLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztnQkFDOUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDcEQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUM7YUFDOUI7UUFDTCxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFTyxjQUFjLENBQUUsR0FBWTtRQUNoQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDM0MsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMzQixJQUFJLEdBQUcsSUFBSSxHQUFHO2dCQUNWLE9BQU8sQ0FBQztTQUNmO1FBQ0QsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUNkLENBQUM7SUFFTSxTQUFTLENBQUMsT0FBaUI7UUFFOUIsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3RELElBQUcsS0FBSyxHQUFHLENBQUM7WUFDUixPQUFPLENBQUMsSUFBSSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFFekQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDO1FBQ3hDLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBRS9CLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQztRQUNoQixJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBRSxRQUFRLENBQUMsRUFBRTtZQUNqQyxJQUFHLENBQUMsUUFBUTtnQkFDUixJQUFJLEdBQUcsS0FBSyxDQUFDO1FBQ3JCLENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBRyxJQUFJO1lBQ0gsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBRSxDQUFDO0lBQ3ZELENBQUM7Q0FJSiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmdsd2VicGFjay8uL3NyYy9XRUJHTC9zcmMvTG9hZGVyL0ZpbGVSZXVxZXN0LnRzPzg0Y2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXNzZXRNYW5hZ2VyLCBNRVNTQUdFX0FTU0VUX0xPQURFUl9BU1NFVF9MT0FERUQgfSBmcm9tIFwiLi9Bc3NldHMvQXNzZXRNYW5hZ2VyXCI7XHJcbmltcG9ydCB7IElBc3NldCB9IGZyb20gXCIuL0Fzc2V0cy9JQXNzZXRcIjtcclxuaW1wb3J0IHsgSUZpbGVSZXF1ZXN0UmVzcG9uc2UgfSBmcm9tIFwiLi9JRmlsZVJlcXVlc3RSZXNwb25zZVwiO1xyXG5pbXBvcnQgeyBJTWVzc2FnZUhhbmRsZXIgfSBmcm9tIFwiLi9NZXNzYWdlL0lNZXNzYWdlSGFuZGxlclwiO1xyXG5pbXBvcnQgeyBNZXNzYWdlIH0gZnJvbSBcIi4vTWVzc2FnZS9NZXNzYWdlXCI7XHJcbmltcG9ydCB7IE1lc3NhZ2VCdXMgfSBmcm9tIFwiLi9NZXNzYWdlL01lc3NhZ2VCdXNcIjtcclxuXHJcblxyXG4gICAgZXhwb3J0IGNsYXNzIEZpbGVSZXF1ZXN0IGltcGxlbWVudHMgSU1lc3NhZ2VIYW5kbGVye1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNvbnRlbnQgOiBJQXNzZXQgO1xyXG4gICAgICAgIGhhbmRsZXIgOiBJRmlsZVJlcXVlc3RSZXNwb25zZSBcclxuICAgICAgICByZXF1ZXN0U3RyIDogU3RyaW5nO1xyXG5cclxuICAgICAgICBwdWJsaWMgY29uc3RydWN0b3IoIHJlcXVlc3RTdHJpbmcgOiBzdHJpbmcgLCBoYW5kbGVyIDogSUZpbGVSZXF1ZXN0UmVzcG9uc2UgKXtcclxuXHJcbiAgICAgICAgICAgIHRoaXMucmVxdWVzdFN0ciA9IHJlcXVlc3RTdHJpbmc7XHJcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlciA9IGhhbmRsZXI7XHJcblxyXG4gICAgICAgICAgICBNZXNzYWdlQnVzLmFkZFN1YnNjcmlwdGlvbihNRVNTQUdFX0FTU0VUX0xPQURFUl9BU1NFVF9MT0FERUQgKyAgcmVxdWVzdFN0cmluZywgdGhpcyk7ICAgXHJcbiAgICAgICAgICAgIHRoaXMuY29udGVudCA9IEFzc2V0TWFuYWdlci5nZXRBc3NldChyZXF1ZXN0U3RyaW5nKTtcclxuICAgICAgICAgICAgaWYoIHRoaXMuY29udGVudCAhPSB1bmRlZmluZWQgfHwgdGhpcy5jb250ZW50ICE9IG51bGwpe1xyXG4gICAgICAgICAgICAgICAgTWVzc2FnZUJ1cy5yZW1vdmVTdWJzY3JpcHRpb24oTUVTU0FHRV9BU1NFVF9MT0FERVJfQVNTRVRfTE9BREVEICsgIHJlcXVlc3RTdHJpbmcsIHRoaXMpOyAgICAgICAgXHJcbiAgICAgICAgICAgICAgICB0aGlzLmhhbmRsZXIub25GaWxlUmVjaWV2ZWQodGhpcy5jb250ZW50LmRhdGEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgb25NZXNzYWdlKG1lc3NhZ2UgOiBNZXNzYWdlKXtcclxuICAgICAgICAgICAgdGhpcy5oYW5kbGVyLm9uRmlsZVJlY2lldmVkKCBtZXNzYWdlLmNvbnRleHQgKTtcclxuICAgICAgICAgICAgLy9NZXNzYWdlQnVzLnJlbW92ZVN1YnNjcmlwdGlvbihNRVNTQUdFX0FTU0VUX0xPQURFUl9BU1NFVF9MT0FERUQgKyAgdGhpcy5yZXF1ZXN0U3RyLCB0aGlzKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZXhwb3J0IGNsYXNzIEZpbGVSZXF1ZXN0QnVuZGxlIGltcGxlbWVudHMgSU1lc3NhZ2VIYW5kbGVye1xyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgICAgIHByaXZhdGUgcmVxdWVzdEluZGljaWVzIDogbnVtYmVyIFtdID0gW107XHJcbiAgICAgICAgcHJpdmF0ZSByZXF1ZXN0cyA6IHN0cmluZ1tdID0gW107XHJcbiAgICAgICAgcHJpdmF0ZSByZXNwb25zZXM6IElBc3NldFtdO1xyXG4gICAgICAgIHByaXZhdGUgcmVzcENvdW50ZXI6IGJvb2xlYW5bXTtcclxuICAgICAgICBcclxuICAgICAgICBwcml2YXRlIGhhbmRsZXIgOiBJRmlsZVJlcXVlc3RSZXNwb25zZSA7XHJcblxyXG4gICAgICAgIHB1YmxpYyBjb25zdHJ1Y3RvciggcmVxdWVzdHMgOiBzdHJpbmdbXSAsIGhhbmRsZXIgOiBJRmlsZVJlcXVlc3RSZXNwb25zZSApe1xyXG5cclxuICAgICAgICAgICAgdGhpcy5oYW5kbGVyID0gaGFuZGxlcjtcclxuICAgICAgICAgICAgdGhpcy5yZXNwb25zZXMgPSBBcnJheTxJQXNzZXQ+KHJlcXVlc3RzLmxlbmd0aCk7XHJcbiAgICAgICAgICAgIHRoaXMucmVzcENvdW50ZXIgPSBBcnJheTxib29sZWFuPihyZXF1ZXN0cy5sZW5ndGgpLmZpbGwoZmFsc2UpO1xyXG5cclxuICAgICAgICAgICAgcmVxdWVzdHMuZm9yRWFjaCggKHJlcSxpKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJlcXVlc3RJbmRpY2llcy5wdXNoKGkpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yZXF1ZXN0cy5wdXNoKHJlcSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgcmVxdWVzdHMuZm9yRWFjaCggKHJlcSxpKSA9PiB7XHJcblxyXG4gICAgICAgICAgICAgICAgTWVzc2FnZUJ1cy5hZGRTdWJzY3JpcHRpb24oTUVTU0FHRV9BU1NFVF9MT0FERVJfQVNTRVRfTE9BREVEICsgIHJlcSwgdGhpcyk7ICAgICAgICBcclxuICAgICAgICAgICAgICAgIHRoaXMucmVzcG9uc2VzW2ldID0gQXNzZXRNYW5hZ2VyLmdldEFzc2V0KHJlcSk7XHJcbiAgICAgICAgICAgICAgICBpZiggdGhpcy5yZXNwb25zZXNbaV0gIT0gdW5kZWZpbmVkIHx8IHRoaXMucmVzcG9uc2VzW2ldICE9IG51bGwpe1xyXG4gICAgICAgICAgICAgICAgICAgIE1lc3NhZ2VCdXMucmVtb3ZlU3Vic2NyaXB0aW9uKE1FU1NBR0VfQVNTRVRfTE9BREVSX0FTU0VUX0xPQURFRCArICByZXEsIHRoaXMpOyAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVyLm9uRmlsZVJlY2lldmVkKHRoaXMucmVzcG9uc2VzW2ldLmRhdGEpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmVzcENvdW50ZXJbaV0gPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgbWF0Y2hlc1JlcXVlc3QoIHZhbCA6IHN0cmluZyApOiBudW1iZXJ7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5yZXF1ZXN0cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgdmFyIHJlcSA9IHRoaXMucmVxdWVzdHNbaV07XHJcbiAgICAgICAgICAgICAgICBpZiggcmVxID09IHZhbCApXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gLTE7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgb25NZXNzYWdlKG1lc3NhZ2UgOiBNZXNzYWdlKXtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHZhciBtYXRjaCA9IHRoaXMubWF0Y2hlc1JlcXVlc3QobWVzc2FnZS5jb250ZXh0Lm5hbWUpO1xyXG4gICAgICAgICAgICBpZihtYXRjaCA8IDAgKVxyXG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKFwiTUVTU0FHRSBOQU1FIEhBRCBOTyBNQVRDSCBJTiBSRVFVRVNUXCIpO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5yZXNwb25zZXNbbWF0Y2hdID0gbWVzc2FnZS5jb250ZXh0O1xyXG4gICAgICAgICAgICB0aGlzLnJlc3BDb3VudGVyW21hdGNoXSA9IHRydWU7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB2YXIgcmVzcCA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMucmVzcENvdW50ZXIuZm9yRWFjaCggcmVzcEJvb2wgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYoIXJlc3BCb29sKVxyXG4gICAgICAgICAgICAgICAgICAgIHJlc3AgPSBmYWxzZTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBpZihyZXNwKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVyLm9uRmlsZVJlY2lldmVkKCAgdGhpcy5yZXNwb25zZXMgKTtcclxuICAgICAgICB9XHJcblxyXG5cclxuXHJcbiAgICB9XHJcblxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Loader/FileReuqest.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Loader/Message/Message.ts":
/*!*************************************************!*\
  !*** ./src/WEBGL/src/Loader/Message/Message.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MessagePriority\": () => (/* binding */ MessagePriority),\n/* harmony export */   \"Message\": () => (/* binding */ Message)\n/* harmony export */ });\n/* harmony import */ var _MessageBus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MessageBus */ \"./src/WEBGL/src/Loader/Message/MessageBus.ts\");\n// // Source https://www.youtube.com/watch?v=_wvvtCqXwYY&list=PLv8Ddw9K0JPiTHLMQw31Yh4qyTAcHRnJx&index=7 \r\n\r\nvar MessagePriority;\r\n(function (MessagePriority) {\r\n    MessagePriority[MessagePriority[\"NORMAL\"] = 0] = \"NORMAL\";\r\n    MessagePriority[MessagePriority[\"HIGH\"] = 1] = \"HIGH\";\r\n})(MessagePriority || (MessagePriority = {}));\r\n/**\r\n * @Message class er en kort besked om noget der sket i programmet\r\n// @code er den key der bliver brugt i MessageBus classen\r\n// @context dataen der sendes med\r\n// @sender er den classe der sender beskeden.\r\n// @priority en værdi der bruges til at enten gå i message Queuen eller gå directe til send. */\r\nclass Message {\r\n    constructor(code, sender, context, priority = MessagePriority.NORMAL) {\r\n        this.code = code;\r\n        this.sender = sender;\r\n        this.context = context;\r\n        this.priority = priority;\r\n    }\r\n    static send(code, sender, context) {\r\n        _MessageBus__WEBPACK_IMPORTED_MODULE_0__.MessageBus.post(new Message(code, sender, context, MessagePriority.NORMAL));\r\n    }\r\n    static sendPriority(code, sender, context) {\r\n        _MessageBus__WEBPACK_IMPORTED_MODULE_0__.MessageBus.post(new Message(code, sender, context, MessagePriority.HIGH));\r\n    }\r\n    static subscribe(code, handler) {\r\n        _MessageBus__WEBPACK_IMPORTED_MODULE_0__.MessageBus.addSubscription(code, handler);\r\n    }\r\n    static unSubscribe(code, handler) {\r\n        _MessageBus__WEBPACK_IMPORTED_MODULE_0__.MessageBus.removeSubscription(code, handler);\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL0xvYWRlci9NZXNzYWdlL01lc3NhZ2UudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEseUdBQXlHO0FBRy9EO0FBR3RDLElBQVksZUFHWDtBQUhELFdBQVksZUFBZTtJQUN2Qix5REFBTTtJQUNOLHFEQUFJO0FBQ1IsQ0FBQyxFQUhXLGVBQWUsS0FBZixlQUFlLFFBRzFCO0FBRUQ7Ozs7OytGQUsrRjtBQUN4RixNQUFNLE9BQU87SUFPaEIsWUFBbUIsSUFBVyxFQUFFLE1BQVUsRUFBRSxPQUFhLEVBQUUsV0FBMkIsZUFBZSxDQUFDLE1BQU07UUFDeEcsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7SUFDN0IsQ0FBQztJQUVNLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBYSxFQUFHLE1BQVksRUFBRSxPQUFhO1FBQzFELHdEQUFlLENBQUMsSUFBSSxPQUFPLENBQUMsSUFBSSxFQUFDLE1BQU0sRUFBQyxPQUFPLEVBQUUsZUFBZSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDOUUsQ0FBQztJQUVNLE1BQU0sQ0FBQyxZQUFZLENBQUMsSUFBYSxFQUFHLE1BQVksRUFBRSxPQUFhO1FBQ2xFLHdEQUFlLENBQUMsSUFBSSxPQUFPLENBQUMsSUFBSSxFQUFDLE1BQU0sRUFBQyxPQUFPLEVBQUUsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDNUUsQ0FBQztJQUVNLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBVyxFQUFFLE9BQXlCO1FBQzFELG1FQUEwQixDQUFDLElBQUksRUFBQyxPQUFPLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRU0sTUFBTSxDQUFDLFdBQVcsQ0FBQyxJQUFXLEVBQUUsT0FBeUI7UUFDNUQsc0VBQTZCLENBQUMsSUFBSSxFQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2hELENBQUM7Q0FDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmdsd2VicGFjay8uL3NyYy9XRUJHTC9zcmMvTG9hZGVyL01lc3NhZ2UvTWVzc2FnZS50cz82ZjBhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIC8vIFNvdXJjZSBodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PV93dnZ0Q3FYd1lZJmxpc3Q9UEx2OERkdzlLMEpQaVRITE1RdzMxWWg0cXlUQWNIUm5KeCZpbmRleD03IFxyXG5cclxuaW1wb3J0IHsgSU1lc3NhZ2VIYW5kbGVyIH0gZnJvbSBcIi4vSU1lc3NhZ2VIYW5kbGVyXCI7XHJcbmltcG9ydCB7IE1lc3NhZ2VCdXMgfSBmcm9tIFwiLi9NZXNzYWdlQnVzXCI7XHJcblxyXG4gICAgXHJcbiAgICBleHBvcnQgZW51bSBNZXNzYWdlUHJpb3JpdHl7XHJcbiAgICAgICAgTk9STUFMLFxyXG4gICAgICAgIEhJR0gsXHJcbiAgICB9XHJcblxyXG4gICAgLyoqIFxyXG4gICAgICogQE1lc3NhZ2UgY2xhc3MgZXIgZW4ga29ydCBiZXNrZWQgb20gbm9nZXQgZGVyIHNrZXQgaSBwcm9ncmFtbWV0XHJcbiAgICAvLyBAY29kZSBlciBkZW4ga2V5IGRlciBibGl2ZXIgYnJ1Z3QgaSBNZXNzYWdlQnVzIGNsYXNzZW4gXHJcbiAgICAvLyBAY29udGV4dCBkYXRhZW4gZGVyIHNlbmRlcyBtZWRcclxuICAgIC8vIEBzZW5kZXIgZXIgZGVuIGNsYXNzZSBkZXIgc2VuZGVyIGJlc2tlZGVuLiBcclxuICAgIC8vIEBwcmlvcml0eSBlbiB2w6ZyZGkgZGVyIGJydWdlcyB0aWwgYXQgZW50ZW4gZ8OlIGkgbWVzc2FnZSBRdWV1ZW4gZWxsZXIgZ8OlIGRpcmVjdGUgdGlsIHNlbmQuICovXHJcbiAgICBleHBvcnQgY2xhc3MgTWVzc2FnZXtcclxuICAgICAgICBcclxuICAgICAgICBwdWJsaWMgY29kZTogc3RyaW5nO1xyXG4gICAgICAgIHB1YmxpYyBjb250ZXh0OiBhbnk7XHJcbiAgICAgICAgcHVibGljIHNlbmRlcjogYW55O1xyXG4gICAgICAgIHB1YmxpYyBwcmlvcml0eTogTWVzc2FnZVByaW9yaXR5O1xyXG5cclxuICAgICAgICBwdWJsaWMgY29uc3RydWN0b3IoY29kZTpzdHJpbmcsIHNlbmRlcjphbnksIGNvbnRleHQ/OiBhbnksIHByaW9yaXR5Ok1lc3NhZ2VQcmlvcml0eSA9IE1lc3NhZ2VQcmlvcml0eS5OT1JNQUwpe1xyXG4gICAgICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xyXG4gICAgICAgICAgICB0aGlzLnNlbmRlciA9IHNlbmRlcjtcclxuICAgICAgICAgICAgdGhpcy5jb250ZXh0ID0gY29udGV4dDtcclxuICAgICAgICAgICAgdGhpcy5wcmlvcml0eSA9IHByaW9yaXR5O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHVibGljIHN0YXRpYyBzZW5kKGNvZGUgOiBzdHJpbmcgLCBzZW5kZXIgOiBhbnksIGNvbnRleHQ/OiBhbnkpOnZvaWR7XHJcbiAgICAgICAgICAgIE1lc3NhZ2VCdXMucG9zdChuZXcgTWVzc2FnZShjb2RlLHNlbmRlcixjb250ZXh0LCBNZXNzYWdlUHJpb3JpdHkuTk9STUFMKSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgc3RhdGljIHNlbmRQcmlvcml0eShjb2RlIDogc3RyaW5nICwgc2VuZGVyIDogYW55LCBjb250ZXh0PzogYW55KTp2b2lke1xyXG4gICAgICAgICAgICBNZXNzYWdlQnVzLnBvc3QobmV3IE1lc3NhZ2UoY29kZSxzZW5kZXIsY29udGV4dCwgTWVzc2FnZVByaW9yaXR5LkhJR0gpKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgc3Vic2NyaWJlKGNvZGU6c3RyaW5nLCBoYW5kbGVyIDogSU1lc3NhZ2VIYW5kbGVyKTp2b2lkIHtcclxuICAgICAgICAgICAgTWVzc2FnZUJ1cy5hZGRTdWJzY3JpcHRpb24oY29kZSxoYW5kbGVyKTsgICAgICAgICAgICBcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgdW5TdWJzY3JpYmUoY29kZTpzdHJpbmcsIGhhbmRsZXIgOiBJTWVzc2FnZUhhbmRsZXIpOnZvaWQge1xyXG4gICAgICAgICAgICBNZXNzYWdlQnVzLnJlbW92ZVN1YnNjcmlwdGlvbihjb2RlLGhhbmRsZXIpOyAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Loader/Message/Message.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Loader/Message/MessageBus.ts":
/*!****************************************************!*\
  !*** ./src/WEBGL/src/Loader/Message/MessageBus.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MessageBus\": () => (/* binding */ MessageBus)\n/* harmony export */ });\n/* harmony import */ var _Message__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Message */ \"./src/WEBGL/src/Loader/Message/Message.ts\");\n/* harmony import */ var _MessageSubscriptionNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MessageSubscriptionNode */ \"./src/WEBGL/src/Loader/Message/MessageSubscriptionNode.ts\");\n// // Source https://www.youtube.com/watch?v=_wvvtCqXwYY&list=PLv8Ddw9K0JPiTHLMQw31Yh4qyTAcHRnJx&index=7 \r\n\r\n\r\n/**\r\n *  forklaring\r\n@code er et keyword der mapper hvor dataen ligger.\r\n@IMessageHandler er et simpelt listener pattern.\r\n@subscriptions er en array and arrays af IMessageHandlers . Så flere steder kan lytte til om messages kommer ud\r\n\r\n@POST er en metode der Ser efter listeners \"subscribers\" til en specifik \"code\"\r\nog for hver listener til den \"code\" sender et onMessage() signal.\r\n\r\ndenne classe implementere også en que. sådan at man kan begrænse antal \"messages\" der biver sendt*/\r\nclass MessageBus {\r\n    constructor() { }\r\n    ;\r\n    static addSubscription(code, handler) {\r\n        if (MessageBus._subscriptions[code] === undefined) {\r\n            MessageBus._subscriptions[code] = [];\r\n        }\r\n        if (MessageBus._subscriptions[code].indexOf(handler) !== -1) { // if this hanlder exists \r\n            console.warn(\"attempt to add a duplicate handler\" + code + \". subscription not added\");\r\n        }\r\n        else {\r\n            MessageBus._subscriptions[code].push(handler);\r\n        }\r\n    }\r\n    static removeSubscription(code, handler) {\r\n        if (MessageBus._subscriptions[code] === undefined) {\r\n            console.warn(\"cannot unsubscribe handler from \" + code + \". because\" + code + \"is not subscribed to\");\r\n            return;\r\n        }\r\n        let nodeIndex = MessageBus._subscriptions[code].indexOf(handler);\r\n        if (nodeIndex !== -1) { // if this hanlder exists \r\n            console.warn(\"cannot unsubscribe handler from \" + code + \". because\" + code + \"is not subscribed to\");\r\n            MessageBus._subscriptions[code].splice(nodeIndex, 1);\r\n        }\r\n    }\r\n    static post(message) {\r\n        //console.log(\"message posted:\", message);\r\n        let handlers = MessageBus._subscriptions[message.code];\r\n        if (handlers === undefined)\r\n            return;\r\n        for (let i = 0; i < handlers.length; i++) {\r\n            let h = handlers[i];\r\n            if (message.priority = _Message__WEBPACK_IMPORTED_MODULE_0__.MessagePriority.HIGH) {\r\n                h.onMessage(message);\r\n            }\r\n            else {\r\n                MessageBus._normalQueMessage.push(new _MessageSubscriptionNode__WEBPACK_IMPORTED_MODULE_1__.MessageSubscriptionNode(message, h));\r\n            }\r\n        }\r\n    }\r\n    static update(time) {\r\n        if (MessageBus._normalQueMessage.length == 0)\r\n            return;\r\n        let messageLimit = Math.min(MessageBus._normalQueMessagePrUpdate, MessageBus._normalQueMessage.length);\r\n        for (let i = 0; i < messageLimit; i++) {\r\n            let node = MessageBus._normalQueMessage.pop();\r\n            node.handler.onMessage(node.message);\r\n        }\r\n    }\r\n}\r\nMessageBus._subscriptions = {};\r\nMessageBus._normalQueMessagePrUpdate = 10;\r\nMessageBus._normalQueMessage = [];\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL0xvYWRlci9NZXNzYWdlL01lc3NhZ2VCdXMudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEseUdBQXlHO0FBR3BEO0FBQ2U7QUFFaEU7Ozs7Ozs7OzttR0FTbUc7QUFDNUYsTUFBTSxVQUFVO0lBT25CLGdCQUFzQixDQUFDO0lBRjJDLENBQUM7SUFJNUQsTUFBTSxDQUFDLGVBQWUsQ0FBQyxJQUFXLEVBQUUsT0FBdUI7UUFDOUQsSUFBRyxVQUFVLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxLQUFLLFNBQVMsRUFBRTtZQUM5QyxVQUFVLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztTQUN4QztRQUVELElBQUcsVUFBVSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUUsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUMsRUFBRSwwQkFBMEI7WUFDcEYsT0FBTyxDQUFDLElBQUksQ0FBQyxvQ0FBb0MsR0FBRyxJQUFJLEdBQUcsMEJBQTBCLENBQUMsQ0FBQztTQUMxRjthQUFJO1lBQ0QsVUFBVSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDakQ7SUFDTCxDQUFDO0lBRU0sTUFBTSxDQUFDLGtCQUFrQixDQUFDLElBQVcsRUFBRSxPQUF1QjtRQUNsRSxJQUFHLFVBQVUsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEtBQUssU0FBUyxFQUFFO1lBQzdDLE9BQU8sQ0FBQyxJQUFJLENBQUMsa0NBQWtDLEdBQUcsSUFBSSxHQUFHLFdBQVcsR0FBRyxJQUFJLEdBQUcsc0JBQXNCLENBQUMsQ0FBQztZQUN0RyxPQUFPO1NBQ1Y7UUFDRCxJQUFJLFNBQVMsR0FBRyxVQUFVLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBRSxPQUFPLENBQUM7UUFDakUsSUFBRyxTQUFTLEtBQUssQ0FBQyxDQUFDLEVBQUMsRUFBRSwwQkFBMEI7WUFDNUMsT0FBTyxDQUFDLElBQUksQ0FBQyxrQ0FBa0MsR0FBRyxJQUFJLEdBQUcsV0FBVyxHQUFHLElBQUksR0FBRyxzQkFBc0IsQ0FBQyxDQUFDO1lBQ3RHLFVBQVUsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQztTQUN4RDtJQUNMLENBQUM7SUFFTSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQWdCO1FBQy9CLDBDQUEwQztRQUMxQyxJQUFJLFFBQVEsR0FBRyxVQUFVLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN2RCxJQUFHLFFBQVEsS0FBSyxTQUFTO1lBQ3JCLE9BQU87UUFFWCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUN0QyxJQUFJLENBQUMsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ25CLElBQUcsT0FBTyxDQUFDLFFBQVEsR0FBRywwREFBb0IsRUFBQztnQkFDdkMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQzthQUN4QjtpQkFBSTtnQkFDRCxVQUFVLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLElBQUksNkVBQXVCLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDOUU7U0FDSjtJQUNMLENBQUM7SUFFTSxNQUFNLENBQUMsTUFBTSxDQUFDLElBQVc7UUFDNUIsSUFBRyxVQUFVLENBQUMsaUJBQWlCLENBQUMsTUFBTSxJQUFJLENBQUM7WUFDdkMsT0FBTztRQUVYLElBQUksWUFBWSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLHlCQUF5QixFQUFFLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUUsQ0FBQztRQUN4RyxLQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBQyxDQUFDLEdBQUcsWUFBWSxFQUFFLENBQUMsRUFBRSxFQUFDO1lBQ2hDLElBQUksSUFBSSxHQUFHLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsQ0FBQztZQUM5QyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDeEM7SUFDTCxDQUFDOztBQXhEYyx5QkFBYyxHQUF1QyxFQUFFO0FBRXZELG9DQUF5QixHQUFZLEVBQUUsQ0FBQztBQUN4Qyw0QkFBaUIsR0FBK0IsRUFBRSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViZ2x3ZWJwYWNrLy4vc3JjL1dFQkdML3NyYy9Mb2FkZXIvTWVzc2FnZS9NZXNzYWdlQnVzLnRzPzc5MTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gLy8gU291cmNlIGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9X3d2dnRDcVh3WVkmbGlzdD1QTHY4RGR3OUswSlBpVEhMTVF3MzFZaDRxeVRBY0hSbkp4JmluZGV4PTcgXHJcblxyXG5pbXBvcnQgeyBJTWVzc2FnZUhhbmRsZXIgfSBmcm9tIFwiLi9JTWVzc2FnZUhhbmRsZXJcIjtcclxuaW1wb3J0IHsgTWVzc2FnZSwgTWVzc2FnZVByaW9yaXR5IH0gZnJvbSBcIi4vTWVzc2FnZVwiO1xyXG5pbXBvcnQgeyBNZXNzYWdlU3Vic2NyaXB0aW9uTm9kZSB9IGZyb20gXCIuL01lc3NhZ2VTdWJzY3JpcHRpb25Ob2RlXCI7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiAgZm9ya2xhcmluZyBcclxuICAgIEBjb2RlIGVyIGV0IGtleXdvcmQgZGVyIG1hcHBlciBodm9yIGRhdGFlbiBsaWdnZXIuIFxyXG4gICAgQElNZXNzYWdlSGFuZGxlciBlciBldCBzaW1wZWx0IGxpc3RlbmVyIHBhdHRlcm4uIFxyXG4gICAgQHN1YnNjcmlwdGlvbnMgZXIgZW4gYXJyYXkgYW5kIGFycmF5cyBhZiBJTWVzc2FnZUhhbmRsZXJzIC4gU8OlIGZsZXJlIHN0ZWRlciBrYW4gbHl0dGUgdGlsIG9tIG1lc3NhZ2VzIGtvbW1lciB1ZFxyXG5cclxuICAgIEBQT1NUIGVyIGVuIG1ldG9kZSBkZXIgU2VyIGVmdGVyIGxpc3RlbmVycyBcInN1YnNjcmliZXJzXCIgdGlsIGVuIHNwZWNpZmlrIFwiY29kZVwiXHJcbiAgICBvZyBmb3IgaHZlciBsaXN0ZW5lciB0aWwgZGVuIFwiY29kZVwiIHNlbmRlciBldCBvbk1lc3NhZ2UoKSBzaWduYWwuIFxyXG5cclxuICAgIGRlbm5lIGNsYXNzZSBpbXBsZW1lbnRlcmUgb2dzw6UgZW4gcXVlLiBzw6VkYW4gYXQgbWFuIGthbiBiZWdyw6Zuc2UgYW50YWwgXCJtZXNzYWdlc1wiIGRlciBiaXZlciBzZW5kdCovXHJcbiAgICBleHBvcnQgY2xhc3MgTWVzc2FnZUJ1c3tcclxuXHJcbiAgICAgICAgcHJpdmF0ZSBzdGF0aWMgX3N1YnNjcmlwdGlvbnM6IHtbY29kZTpzdHJpbmddOklNZXNzYWdlSGFuZGxlcltdIH0gPSB7fVxyXG4gICAgICAgIFxyXG4gICAgICAgIHByaXZhdGUgc3RhdGljIF9ub3JtYWxRdWVNZXNzYWdlUHJVcGRhdGUgOiBudW1iZXIgPSAxMDtcclxuICAgICAgICBwcml2YXRlIHN0YXRpYyBfbm9ybWFsUXVlTWVzc2FnZSA6IE1lc3NhZ2VTdWJzY3JpcHRpb25Ob2RlW10gPSBbXTs7XHJcblxyXG4gICAgICAgIHByaXZhdGUgY29uc3RydWN0b3IoKXt9XHJcblxyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgYWRkU3Vic2NyaXB0aW9uKGNvZGU6c3RyaW5nLCBoYW5kbGVyOklNZXNzYWdlSGFuZGxlcil7XHJcbiAgICAgICAgICAgIGlmKE1lc3NhZ2VCdXMuX3N1YnNjcmlwdGlvbnNbY29kZV0gPT09IHVuZGVmaW5lZCApe1xyXG4gICAgICAgICAgICAgICAgTWVzc2FnZUJ1cy5fc3Vic2NyaXB0aW9uc1tjb2RlXSA9IFtdO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZihNZXNzYWdlQnVzLl9zdWJzY3JpcHRpb25zW2NvZGVdLmluZGV4T2YoIGhhbmRsZXIpICE9PSAtMSl7IC8vIGlmIHRoaXMgaGFubGRlciBleGlzdHMgXHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oXCJhdHRlbXB0IHRvIGFkZCBhIGR1cGxpY2F0ZSBoYW5kbGVyXCIgKyBjb2RlICsgXCIuIHN1YnNjcmlwdGlvbiBub3QgYWRkZWRcIik7XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgTWVzc2FnZUJ1cy5fc3Vic2NyaXB0aW9uc1tjb2RlXS5wdXNoKGhhbmRsZXIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgc3RhdGljIHJlbW92ZVN1YnNjcmlwdGlvbihjb2RlOnN0cmluZywgaGFuZGxlcjpJTWVzc2FnZUhhbmRsZXIpe1xyXG4gICAgICAgICAgIGlmKE1lc3NhZ2VCdXMuX3N1YnNjcmlwdGlvbnNbY29kZV0gPT09IHVuZGVmaW5lZCApe1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKFwiY2Fubm90IHVuc3Vic2NyaWJlIGhhbmRsZXIgZnJvbSBcIiArIGNvZGUgKyBcIi4gYmVjYXVzZVwiICsgY29kZSArIFwiaXMgbm90IHN1YnNjcmliZWQgdG9cIik7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbGV0IG5vZGVJbmRleCA9IE1lc3NhZ2VCdXMuX3N1YnNjcmlwdGlvbnNbY29kZV0uaW5kZXhPZiggaGFuZGxlcilcclxuICAgICAgICAgICAgaWYobm9kZUluZGV4ICE9PSAtMSl7IC8vIGlmIHRoaXMgaGFubGRlciBleGlzdHMgXHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oXCJjYW5ub3QgdW5zdWJzY3JpYmUgaGFuZGxlciBmcm9tIFwiICsgY29kZSArIFwiLiBiZWNhdXNlXCIgKyBjb2RlICsgXCJpcyBub3Qgc3Vic2NyaWJlZCB0b1wiKTtcclxuICAgICAgICAgICAgICAgIE1lc3NhZ2VCdXMuX3N1YnNjcmlwdGlvbnNbY29kZV0uc3BsaWNlKG5vZGVJbmRleCwgMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgcG9zdChtZXNzYWdlOiBNZXNzYWdlKTp2b2lke1xyXG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwibWVzc2FnZSBwb3N0ZWQ6XCIsIG1lc3NhZ2UpO1xyXG4gICAgICAgICAgICBsZXQgaGFuZGxlcnMgPSBNZXNzYWdlQnVzLl9zdWJzY3JpcHRpb25zW21lc3NhZ2UuY29kZV07XHJcbiAgICAgICAgICAgIGlmKGhhbmRsZXJzID09PSB1bmRlZmluZWQpXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGhhbmRsZXJzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgaCA9IGhhbmRsZXJzW2ldXHJcbiAgICAgICAgICAgICAgICBpZihtZXNzYWdlLnByaW9yaXR5ID0gTWVzc2FnZVByaW9yaXR5LkhJR0gpe1xyXG4gICAgICAgICAgICAgICAgICAgIGgub25NZXNzYWdlKG1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgTWVzc2FnZUJ1cy5fbm9ybWFsUXVlTWVzc2FnZS5wdXNoKG5ldyBNZXNzYWdlU3Vic2NyaXB0aW9uTm9kZShtZXNzYWdlLCBoKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgdXBkYXRlKHRpbWU6bnVtYmVyICk6dm9pZHtcclxuICAgICAgICAgICAgaWYoTWVzc2FnZUJ1cy5fbm9ybWFsUXVlTWVzc2FnZS5sZW5ndGggPT0gMClcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGxldCBtZXNzYWdlTGltaXQgPSBNYXRoLm1pbihNZXNzYWdlQnVzLl9ub3JtYWxRdWVNZXNzYWdlUHJVcGRhdGUgLE1lc3NhZ2VCdXMuX25vcm1hbFF1ZU1lc3NhZ2UubGVuZ3RoICk7XHJcbiAgICAgICAgICAgIGZvcihsZXQgaSA9IDA7aSA8IG1lc3NhZ2VMaW1pdDsgaSsrKXtcclxuICAgICAgICAgICAgICAgIGxldCBub2RlID0gTWVzc2FnZUJ1cy5fbm9ybWFsUXVlTWVzc2FnZS5wb3AoKTtcclxuICAgICAgICAgICAgICAgIG5vZGUuaGFuZGxlci5vbk1lc3NhZ2Uobm9kZS5tZXNzYWdlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Loader/Message/MessageBus.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Loader/Message/MessageSubscriptionNode.ts":
/*!*****************************************************************!*\
  !*** ./src/WEBGL/src/Loader/Message/MessageSubscriptionNode.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MessageSubscriptionNode\": () => (/* binding */ MessageSubscriptionNode)\n/* harmony export */ });\nclass MessageSubscriptionNode {\r\n    constructor(message, handler) {\r\n        this.message = message;\r\n        this.handler = handler;\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL0xvYWRlci9NZXNzYWdlL01lc3NhZ2VTdWJzY3JpcHRpb25Ob2RlLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFHVyxNQUFNLHVCQUF1QjtJQUloQyxZQUFtQixPQUFlLEVBQUUsT0FBdUI7UUFDdkQsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7SUFDM0IsQ0FBQztDQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViZ2x3ZWJwYWNrLy4vc3JjL1dFQkdML3NyYy9Mb2FkZXIvTWVzc2FnZS9NZXNzYWdlU3Vic2NyaXB0aW9uTm9kZS50cz8zMDYwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElNZXNzYWdlSGFuZGxlciB9IGZyb20gXCIuL0lNZXNzYWdlSGFuZGxlclwiO1xyXG5pbXBvcnQgeyBNZXNzYWdlIH0gZnJvbSBcIi4vTWVzc2FnZVwiO1xyXG5cclxuICAgIGV4cG9ydCBjbGFzcyBNZXNzYWdlU3Vic2NyaXB0aW9uTm9kZXtcclxuICAgICAgICBwdWJsaWMgbWVzc2FnZTpNZXNzYWdlO1xyXG4gICAgICAgIHB1YmxpYyBoYW5kbGVyOiBJTWVzc2FnZUhhbmRsZXI7XHJcblxyXG4gICAgICAgIHB1YmxpYyBjb25zdHJ1Y3RvcihtZXNzYWdlOk1lc3NhZ2UsIGhhbmRsZXI6SU1lc3NhZ2VIYW5kbGVyKXtcclxuICAgICAgICAgICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcclxuICAgICAgICAgICAgdGhpcy5oYW5kbGVyID0gaGFuZGxlcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Loader/Message/MessageSubscriptionNode.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Math/TSM_Library/constants.ts":
/*!*****************************************************!*\
  !*** ./src/WEBGL/src/Math/TSM_Library/constants.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"epsilon\": () => (/* binding */ epsilon),\n/* harmony export */   \"toRadians\": () => (/* binding */ toRadians)\n/* harmony export */ });\nconst epsilon = 0.00001;\r\nfunction toRadians(value) {\r\n    var r = 1.0174532924;\r\n    return (r * value);\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL01hdGgvVFNNX0xpYnJhcnkvY29uc3RhbnRzLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQ1csTUFBTSxPQUFPLEdBQUcsT0FBTztBQUd2QixTQUFTLFNBQVMsQ0FBQyxLQUFZO0lBQ2xDLElBQUksQ0FBQyxHQUFHLFlBQVksQ0FBQztJQUNyQixPQUFPLENBQUMsQ0FBQyxHQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3JCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJnbHdlYnBhY2svLi9zcmMvV0VCR0wvc3JjL01hdGgvVFNNX0xpYnJhcnkvY29uc3RhbnRzLnRzPzA5MGUiXSwic291cmNlc0NvbnRlbnQiOlsiXHJcbiAgICBleHBvcnQgY29uc3QgZXBzaWxvbiA9IDAuMDAwMDFcclxuXHJcblxyXG4gICAgZXhwb3J0IGZ1bmN0aW9uIHRvUmFkaWFucyh2YWx1ZTpudW1iZXIpOm51bWJlcntcclxuICAgICAgICB2YXIgciA9IDEuMDE3NDUzMjkyNDtcclxuICAgICAgICByZXR1cm4gKHIqdmFsdWUpO1xyXG4gICAgfVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Math/TSM_Library/constants.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Math/TSM_Library/mat3.ts":
/*!************************************************!*\
  !*** ./src/WEBGL/src/Math/TSM_Library/mat3.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mat3\": () => (/* binding */ mat3)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/WEBGL/src/Math/TSM_Library/constants.ts\");\n/* harmony import */ var _mat4__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mat4 */ \"./src/WEBGL/src/Math/TSM_Library/mat4.ts\");\n/* harmony import */ var _quat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./quat */ \"./src/WEBGL/src/Math/TSM_Library/quat.ts\");\n/* harmony import */ var _vec2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vec2 */ \"./src/WEBGL/src/Math/TSM_Library/vec2.ts\");\n/* harmony import */ var _vec3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./vec3 */ \"./src/WEBGL/src/Math/TSM_Library/vec3.ts\");\n\r\n\r\n\r\n\r\n\r\nclass mat3 {\r\n    constructor(values) {\r\n        this.values = new Float32Array(9);\r\n        if (values !== undefined) {\r\n            this.init(values);\r\n        }\r\n    }\r\n    at(index) {\r\n        return this.values[index];\r\n    }\r\n    init(values) {\r\n        for (let i = 0; i < 9; i++) {\r\n            this.values[i] = values[i];\r\n        }\r\n        return this;\r\n    }\r\n    reset() {\r\n        for (let i = 0; i < 9; i++) {\r\n            this.values[i] = 0;\r\n        }\r\n    }\r\n    copy(dest) {\r\n        if (!dest) {\r\n            dest = new mat3();\r\n        }\r\n        for (let i = 0; i < 9; i++) {\r\n            dest.values[i] = this.values[i];\r\n        }\r\n        return dest;\r\n    }\r\n    all() {\r\n        const data = [];\r\n        for (let i = 0; i < 9; i++) {\r\n            data[i] = this.values[i];\r\n        }\r\n        return data;\r\n    }\r\n    row(index) {\r\n        return [\r\n            this.values[index * 3 + 0],\r\n            this.values[index * 3 + 1],\r\n            this.values[index * 3 + 2],\r\n        ];\r\n    }\r\n    col(index) {\r\n        return [\r\n            this.values[index],\r\n            this.values[index + 3],\r\n            this.values[index + 6],\r\n        ];\r\n    }\r\n    equals(matrix, threshold = _constants__WEBPACK_IMPORTED_MODULE_0__.epsilon) {\r\n        for (let i = 0; i < 9; i++) {\r\n            if (Math.abs(this.values[i] - matrix.at(i)) > threshold) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    determinant() {\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a10 = this.values[3];\r\n        const a11 = this.values[4];\r\n        const a12 = this.values[5];\r\n        const a20 = this.values[6];\r\n        const a21 = this.values[7];\r\n        const a22 = this.values[8];\r\n        const det01 = a22 * a11 - a12 * a21;\r\n        const det11 = -a22 * a10 + a12 * a20;\r\n        const det21 = a21 * a10 - a11 * a20;\r\n        return a00 * det01 + a01 * det11 + a02 * det21;\r\n    }\r\n    setIdentity() {\r\n        this.values[0] = 1;\r\n        this.values[1] = 0;\r\n        this.values[2] = 0;\r\n        this.values[3] = 0;\r\n        this.values[4] = 1;\r\n        this.values[5] = 0;\r\n        this.values[6] = 0;\r\n        this.values[7] = 0;\r\n        this.values[8] = 1;\r\n        return this;\r\n    }\r\n    transpose() {\r\n        const temp01 = this.values[1];\r\n        const temp02 = this.values[2];\r\n        const temp12 = this.values[5];\r\n        this.values[1] = this.values[3];\r\n        this.values[2] = this.values[6];\r\n        this.values[3] = temp01;\r\n        this.values[5] = this.values[7];\r\n        this.values[6] = temp02;\r\n        this.values[7] = temp12;\r\n        return this;\r\n    }\r\n    inverse() {\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a10 = this.values[3];\r\n        const a11 = this.values[4];\r\n        const a12 = this.values[5];\r\n        const a20 = this.values[6];\r\n        const a21 = this.values[7];\r\n        const a22 = this.values[8];\r\n        const det01 = a22 * a11 - a12 * a21;\r\n        const det11 = -a22 * a10 + a12 * a20;\r\n        const det21 = a21 * a10 - a11 * a20;\r\n        let det = a00 * det01 + a01 * det11 + a02 * det21;\r\n        if (!det) {\r\n            return null;\r\n        }\r\n        det = 1.0 / det;\r\n        this.values[0] = det01 * det;\r\n        this.values[1] = (-a22 * a01 + a02 * a21) * det;\r\n        this.values[2] = (a12 * a01 - a02 * a11) * det;\r\n        this.values[3] = det11 * det;\r\n        this.values[4] = (a22 * a00 - a02 * a20) * det;\r\n        this.values[5] = (-a12 * a00 + a02 * a10) * det;\r\n        this.values[6] = det21 * det;\r\n        this.values[7] = (-a21 * a00 + a01 * a20) * det;\r\n        this.values[8] = (a11 * a00 - a01 * a10) * det;\r\n        return this;\r\n    }\r\n    multiply(matrix) {\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a10 = this.values[3];\r\n        const a11 = this.values[4];\r\n        const a12 = this.values[5];\r\n        const a20 = this.values[6];\r\n        const a21 = this.values[7];\r\n        const a22 = this.values[8];\r\n        const b00 = matrix.at(0);\r\n        const b01 = matrix.at(1);\r\n        const b02 = matrix.at(2);\r\n        const b10 = matrix.at(3);\r\n        const b11 = matrix.at(4);\r\n        const b12 = matrix.at(5);\r\n        const b20 = matrix.at(6);\r\n        const b21 = matrix.at(7);\r\n        const b22 = matrix.at(8);\r\n        this.values[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n        this.values[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n        this.values[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n        this.values[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n        this.values[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n        this.values[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n        this.values[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n        this.values[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n        this.values[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n        return this;\r\n    }\r\n    multiplyVec2(vector, result) {\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        if (result) {\r\n            result.xy = [\r\n                x * this.values[0] + y * this.values[3] + this.values[6],\r\n                x * this.values[1] + y * this.values[4] + this.values[7],\r\n            ];\r\n            return result;\r\n        }\r\n        else {\r\n            return new _vec2__WEBPACK_IMPORTED_MODULE_3__.vec2([\r\n                x * this.values[0] + y * this.values[3] + this.values[6],\r\n                x * this.values[1] + y * this.values[4] + this.values[7],\r\n            ]);\r\n        }\r\n    }\r\n    multiplyVec3(vector, result) {\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        if (result) {\r\n            result.xyz = [\r\n                x * this.values[0] + y * this.values[3] + z * this.values[6],\r\n                x * this.values[1] + y * this.values[4] + z * this.values[7],\r\n                x * this.values[2] + y * this.values[5] + z * this.values[8],\r\n            ];\r\n            return result;\r\n        }\r\n        else {\r\n            return new _vec3__WEBPACK_IMPORTED_MODULE_4__.vec3([\r\n                x * this.values[0] + y * this.values[3] + z * this.values[6],\r\n                x * this.values[1] + y * this.values[4] + z * this.values[7],\r\n                x * this.values[2] + y * this.values[5] + z * this.values[8],\r\n            ]);\r\n        }\r\n    }\r\n    toMat4(result) {\r\n        if (result) {\r\n            result.init([\r\n                this.values[0],\r\n                this.values[1],\r\n                this.values[2],\r\n                0,\r\n                this.values[3],\r\n                this.values[4],\r\n                this.values[5],\r\n                0,\r\n                this.values[6],\r\n                this.values[7],\r\n                this.values[8],\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                1,\r\n            ]);\r\n            return result;\r\n        }\r\n        else {\r\n            return new _mat4__WEBPACK_IMPORTED_MODULE_1__.mat4([\r\n                this.values[0],\r\n                this.values[1],\r\n                this.values[2],\r\n                0,\r\n                this.values[3],\r\n                this.values[4],\r\n                this.values[5],\r\n                0,\r\n                this.values[6],\r\n                this.values[7],\r\n                this.values[8],\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                1,\r\n            ]);\r\n        }\r\n    }\r\n    toQuat() {\r\n        const m00 = this.values[0];\r\n        const m01 = this.values[1];\r\n        const m02 = this.values[2];\r\n        const m10 = this.values[3];\r\n        const m11 = this.values[4];\r\n        const m12 = this.values[5];\r\n        const m20 = this.values[6];\r\n        const m21 = this.values[7];\r\n        const m22 = this.values[8];\r\n        const fourXSquaredMinus1 = m00 - m11 - m22;\r\n        const fourYSquaredMinus1 = m11 - m00 - m22;\r\n        const fourZSquaredMinus1 = m22 - m00 - m11;\r\n        const fourWSquaredMinus1 = m00 + m11 + m22;\r\n        let biggestIndex = 0;\r\n        let fourBiggestSquaredMinus1 = fourWSquaredMinus1;\r\n        if (fourXSquaredMinus1 > fourBiggestSquaredMinus1) {\r\n            fourBiggestSquaredMinus1 = fourXSquaredMinus1;\r\n            biggestIndex = 1;\r\n        }\r\n        if (fourYSquaredMinus1 > fourBiggestSquaredMinus1) {\r\n            fourBiggestSquaredMinus1 = fourYSquaredMinus1;\r\n            biggestIndex = 2;\r\n        }\r\n        if (fourZSquaredMinus1 > fourBiggestSquaredMinus1) {\r\n            fourBiggestSquaredMinus1 = fourZSquaredMinus1;\r\n            biggestIndex = 3;\r\n        }\r\n        const biggestVal = Math.sqrt(fourBiggestSquaredMinus1 + 1) * 0.5;\r\n        const mult = 0.25 / biggestVal;\r\n        const result = new _quat__WEBPACK_IMPORTED_MODULE_2__.quat();\r\n        switch (biggestIndex) {\r\n            case 0:\r\n                result.w = biggestVal;\r\n                result.x = (m12 - m21) * mult;\r\n                result.y = (m20 - m02) * mult;\r\n                result.z = (m01 - m10) * mult;\r\n                break;\r\n            case 1:\r\n                result.w = (m12 - m21) * mult;\r\n                result.x = biggestVal;\r\n                result.y = (m01 + m10) * mult;\r\n                result.z = (m20 + m02) * mult;\r\n                break;\r\n            case 2:\r\n                result.w = (m20 - m02) * mult;\r\n                result.x = (m01 + m10) * mult;\r\n                result.y = biggestVal;\r\n                result.z = (m12 + m21) * mult;\r\n                break;\r\n            case 3:\r\n                result.w = (m01 - m10) * mult;\r\n                result.x = (m20 + m02) * mult;\r\n                result.y = (m12 + m21) * mult;\r\n                result.z = biggestVal;\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    rotate(angle, axis) {\r\n        let x = axis.x;\r\n        let y = axis.y;\r\n        let z = axis.z;\r\n        let length = Math.sqrt(x * x + y * y + z * z);\r\n        if (!length) {\r\n            return null;\r\n        }\r\n        if (length !== 1) {\r\n            length = 1 / length;\r\n            x *= length;\r\n            y *= length;\r\n            z *= length;\r\n        }\r\n        const s = Math.sin(angle);\r\n        const c = Math.cos(angle);\r\n        const t = 1.0 - c;\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a10 = this.values[4];\r\n        const a11 = this.values[5];\r\n        const a12 = this.values[6];\r\n        const a20 = this.values[8];\r\n        const a21 = this.values[9];\r\n        const a22 = this.values[10];\r\n        const b00 = x * x * t + c;\r\n        const b01 = y * x * t + z * s;\r\n        const b02 = z * x * t - y * s;\r\n        const b10 = x * y * t - z * s;\r\n        const b11 = y * y * t + c;\r\n        const b12 = z * y * t + x * s;\r\n        const b20 = x * z * t + y * s;\r\n        const b21 = y * z * t - x * s;\r\n        const b22 = z * z * t + c;\r\n        this.values[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n        this.values[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n        this.values[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n        this.values[3] = a00 * b10 + a10 * b11 + a20 * b12;\r\n        this.values[4] = a01 * b10 + a11 * b11 + a21 * b12;\r\n        this.values[5] = a02 * b10 + a12 * b11 + a22 * b12;\r\n        this.values[6] = a00 * b20 + a10 * b21 + a20 * b22;\r\n        this.values[7] = a01 * b20 + a11 * b21 + a21 * b22;\r\n        this.values[8] = a02 * b20 + a12 * b21 + a22 * b22;\r\n        return this;\r\n    }\r\n    static product(m1, m2, result) {\r\n        const a00 = m1.at(0);\r\n        const a01 = m1.at(1);\r\n        const a02 = m1.at(2);\r\n        const a10 = m1.at(3);\r\n        const a11 = m1.at(4);\r\n        const a12 = m1.at(5);\r\n        const a20 = m1.at(6);\r\n        const a21 = m1.at(7);\r\n        const a22 = m1.at(8);\r\n        const b00 = m2.at(0);\r\n        const b01 = m2.at(1);\r\n        const b02 = m2.at(2);\r\n        const b10 = m2.at(3);\r\n        const b11 = m2.at(4);\r\n        const b12 = m2.at(5);\r\n        const b20 = m2.at(6);\r\n        const b21 = m2.at(7);\r\n        const b22 = m2.at(8);\r\n        if (result) {\r\n            result.init([\r\n                b00 * a00 + b01 * a10 + b02 * a20,\r\n                b00 * a01 + b01 * a11 + b02 * a21,\r\n                b00 * a02 + b01 * a12 + b02 * a22,\r\n                b10 * a00 + b11 * a10 + b12 * a20,\r\n                b10 * a01 + b11 * a11 + b12 * a21,\r\n                b10 * a02 + b11 * a12 + b12 * a22,\r\n                b20 * a00 + b21 * a10 + b22 * a20,\r\n                b20 * a01 + b21 * a11 + b22 * a21,\r\n                b20 * a02 + b21 * a12 + b22 * a22,\r\n            ]);\r\n            return result;\r\n        }\r\n        else {\r\n            return new mat3([\r\n                b00 * a00 + b01 * a10 + b02 * a20,\r\n                b00 * a01 + b01 * a11 + b02 * a21,\r\n                b00 * a02 + b01 * a12 + b02 * a22,\r\n                b10 * a00 + b11 * a10 + b12 * a20,\r\n                b10 * a01 + b11 * a11 + b12 * a21,\r\n                b10 * a02 + b11 * a12 + b12 * a22,\r\n                b20 * a00 + b21 * a10 + b22 * a20,\r\n                b20 * a01 + b21 * a11 + b22 * a21,\r\n                b20 * a02 + b21 * a12 + b22 * a22,\r\n            ]);\r\n        }\r\n    }\r\n}\r\nmat3.identity = new mat3().setIdentity();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Math/TSM_Library/mat3.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Math/TSM_Library/mat4.ts":
/*!************************************************!*\
  !*** ./src/WEBGL/src/Math/TSM_Library/mat4.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mat4\": () => (/* binding */ mat4)\n/* harmony export */ });\nObject(function webpackMissingModule() { var e = new Error(\"Cannot find module '@types/three'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"./src/WEBGL/src/Math/TSM_Library/constants.ts\");\n/* harmony import */ var _mat3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mat3 */ \"./src/WEBGL/src/Math/TSM_Library/mat3.ts\");\n/* harmony import */ var _vec3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vec3 */ \"./src/WEBGL/src/Math/TSM_Library/vec3.ts\");\n/* harmony import */ var _vec4__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./vec4 */ \"./src/WEBGL/src/Math/TSM_Library/vec4.ts\");\n\r\n\r\n\r\n\r\n\r\nclass mat4 {\r\n    constructor(values) {\r\n        this.values = new Float32Array(16);\r\n        if (values !== undefined) {\r\n            this.init(values);\r\n        }\r\n    }\r\n    static getIdentity() {\r\n        var mat = new mat4();\r\n        mat.setIdentity();\r\n        return mat;\r\n    }\r\n    at(index) {\r\n        return this.values[index];\r\n    }\r\n    init(values) {\r\n        for (let i = 0; i < 16; i++) {\r\n            this.values[i] = values[i];\r\n        }\r\n        return this;\r\n    }\r\n    reset() {\r\n        for (let i = 0; i < 16; i++) {\r\n            this.values[i] = 0;\r\n        }\r\n    }\r\n    copy(dest) {\r\n        if (!dest) {\r\n            dest = new mat4();\r\n        }\r\n        for (let i = 0; i < 16; i++) {\r\n            dest.values[i] = this.values[i];\r\n        }\r\n        return dest;\r\n    }\r\n    all() {\r\n        const data = [];\r\n        for (let i = 0; i < 16; i++) {\r\n            data[i] = this.values[i];\r\n        }\r\n        return data;\r\n    }\r\n    row(index) {\r\n        return [\r\n            this.values[index * 4 + 0],\r\n            this.values[index * 4 + 1],\r\n            this.values[index * 4 + 2],\r\n            this.values[index * 4 + 3],\r\n        ];\r\n    }\r\n    col(index) {\r\n        return [\r\n            this.values[index],\r\n            this.values[index + 4],\r\n            this.values[index + 8],\r\n            this.values[index + 12],\r\n        ];\r\n    }\r\n    equals(matrix, threshold = _constants__WEBPACK_IMPORTED_MODULE_1__.epsilon) {\r\n        for (let i = 0; i < 16; i++) {\r\n            if (Math.abs(this.values[i] - matrix.at(i)) > threshold) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    determinant() {\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a03 = this.values[3];\r\n        const a10 = this.values[4];\r\n        const a11 = this.values[5];\r\n        const a12 = this.values[6];\r\n        const a13 = this.values[7];\r\n        const a20 = this.values[8];\r\n        const a21 = this.values[9];\r\n        const a22 = this.values[10];\r\n        const a23 = this.values[11];\r\n        const a30 = this.values[12];\r\n        const a31 = this.values[13];\r\n        const a32 = this.values[14];\r\n        const a33 = this.values[15];\r\n        const det00 = a00 * a11 - a01 * a10;\r\n        const det01 = a00 * a12 - a02 * a10;\r\n        const det02 = a00 * a13 - a03 * a10;\r\n        const det03 = a01 * a12 - a02 * a11;\r\n        const det04 = a01 * a13 - a03 * a11;\r\n        const det05 = a02 * a13 - a03 * a12;\r\n        const det06 = a20 * a31 - a21 * a30;\r\n        const det07 = a20 * a32 - a22 * a30;\r\n        const det08 = a20 * a33 - a23 * a30;\r\n        const det09 = a21 * a32 - a22 * a31;\r\n        const det10 = a21 * a33 - a23 * a31;\r\n        const det11 = a22 * a33 - a23 * a32;\r\n        return (det00 * det11 - det01 * det10 + det02 * det09 + det03 * det08 - det04 * det07 + det05 * det06);\r\n    }\r\n    setIdentity() {\r\n        this.values[0] = 1;\r\n        this.values[1] = 0;\r\n        this.values[2] = 0;\r\n        this.values[3] = 0;\r\n        this.values[4] = 0;\r\n        this.values[5] = 1;\r\n        this.values[6] = 0;\r\n        this.values[7] = 0;\r\n        this.values[8] = 0;\r\n        this.values[9] = 0;\r\n        this.values[10] = 1;\r\n        this.values[11] = 0;\r\n        this.values[12] = 0;\r\n        this.values[13] = 0;\r\n        this.values[14] = 0;\r\n        this.values[15] = 1;\r\n        return this;\r\n    }\r\n    transpose() {\r\n        const temp01 = this.values[1];\r\n        const temp02 = this.values[2];\r\n        const temp03 = this.values[3];\r\n        const temp12 = this.values[6];\r\n        const temp13 = this.values[7];\r\n        const temp23 = this.values[11];\r\n        this.values[1] = this.values[4];\r\n        this.values[2] = this.values[8];\r\n        this.values[3] = this.values[12];\r\n        this.values[4] = temp01;\r\n        this.values[6] = this.values[9];\r\n        this.values[7] = this.values[13];\r\n        this.values[8] = temp02;\r\n        this.values[9] = temp12;\r\n        this.values[11] = this.values[14];\r\n        this.values[12] = temp03;\r\n        this.values[13] = temp13;\r\n        this.values[14] = temp23;\r\n        return this;\r\n    }\r\n    inverse() {\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a03 = this.values[3];\r\n        const a10 = this.values[4];\r\n        const a11 = this.values[5];\r\n        const a12 = this.values[6];\r\n        const a13 = this.values[7];\r\n        const a20 = this.values[8];\r\n        const a21 = this.values[9];\r\n        const a22 = this.values[10];\r\n        const a23 = this.values[11];\r\n        const a30 = this.values[12];\r\n        const a31 = this.values[13];\r\n        const a32 = this.values[14];\r\n        const a33 = this.values[15];\r\n        const det00 = a00 * a11 - a01 * a10;\r\n        const det01 = a00 * a12 - a02 * a10;\r\n        const det02 = a00 * a13 - a03 * a10;\r\n        const det03 = a01 * a12 - a02 * a11;\r\n        const det04 = a01 * a13 - a03 * a11;\r\n        const det05 = a02 * a13 - a03 * a12;\r\n        const det06 = a20 * a31 - a21 * a30;\r\n        const det07 = a20 * a32 - a22 * a30;\r\n        const det08 = a20 * a33 - a23 * a30;\r\n        const det09 = a21 * a32 - a22 * a31;\r\n        const det10 = a21 * a33 - a23 * a31;\r\n        const det11 = a22 * a33 - a23 * a32;\r\n        let det = (det00 * det11 - det01 * det10 + det02 * det09 + det03 * det08 - det04 * det07 + det05 * det06);\r\n        if (!det) {\r\n            return null;\r\n        }\r\n        det = 1.0 / det;\r\n        this.values[0] = (a11 * det11 - a12 * det10 + a13 * det09) * det;\r\n        this.values[1] = (-a01 * det11 + a02 * det10 - a03 * det09) * det;\r\n        this.values[2] = (a31 * det05 - a32 * det04 + a33 * det03) * det;\r\n        this.values[3] = (-a21 * det05 + a22 * det04 - a23 * det03) * det;\r\n        this.values[4] = (-a10 * det11 + a12 * det08 - a13 * det07) * det;\r\n        this.values[5] = (a00 * det11 - a02 * det08 + a03 * det07) * det;\r\n        this.values[6] = (-a30 * det05 + a32 * det02 - a33 * det01) * det;\r\n        this.values[7] = (a20 * det05 - a22 * det02 + a23 * det01) * det;\r\n        this.values[8] = (a10 * det10 - a11 * det08 + a13 * det06) * det;\r\n        this.values[9] = (-a00 * det10 + a01 * det08 - a03 * det06) * det;\r\n        this.values[10] = (a30 * det04 - a31 * det02 + a33 * det00) * det;\r\n        this.values[11] = (-a20 * det04 + a21 * det02 - a23 * det00) * det;\r\n        this.values[12] = (-a10 * det09 + a11 * det07 - a12 * det06) * det;\r\n        this.values[13] = (a00 * det09 - a01 * det07 + a02 * det06) * det;\r\n        this.values[14] = (-a30 * det03 + a31 * det01 - a32 * det00) * det;\r\n        this.values[15] = (a20 * det03 - a21 * det01 + a22 * det00) * det;\r\n        return this;\r\n    }\r\n    multiply(matrix) {\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a03 = this.values[3];\r\n        const a10 = this.values[4];\r\n        const a11 = this.values[5];\r\n        const a12 = this.values[6];\r\n        const a13 = this.values[7];\r\n        const a20 = this.values[8];\r\n        const a21 = this.values[9];\r\n        const a22 = this.values[10];\r\n        const a23 = this.values[11];\r\n        const a30 = this.values[12];\r\n        const a31 = this.values[13];\r\n        const a32 = this.values[14];\r\n        const a33 = this.values[15];\r\n        let b0 = matrix.at(0);\r\n        let b1 = matrix.at(1);\r\n        let b2 = matrix.at(2);\r\n        let b3 = matrix.at(3);\r\n        this.values[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        this.values[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        this.values[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        this.values[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        b0 = matrix.at(4);\r\n        b1 = matrix.at(5);\r\n        b2 = matrix.at(6);\r\n        b3 = matrix.at(7);\r\n        this.values[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        this.values[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        this.values[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        this.values[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        b0 = matrix.at(8);\r\n        b1 = matrix.at(9);\r\n        b2 = matrix.at(10);\r\n        b3 = matrix.at(11);\r\n        this.values[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        this.values[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        this.values[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        this.values[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        b0 = matrix.at(12);\r\n        b1 = matrix.at(13);\r\n        b2 = matrix.at(14);\r\n        b3 = matrix.at(15);\r\n        this.values[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        this.values[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        this.values[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        this.values[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        return this;\r\n    }\r\n    multiplyVec3(vector) {\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        return new _vec3__WEBPACK_IMPORTED_MODULE_3__.vec3([\r\n            this.values[0] * x + this.values[4] * y + this.values[8] * z + this.values[12],\r\n            this.values[1] * x + this.values[5] * y + this.values[9] * z + this.values[13],\r\n            this.values[2] * x + this.values[6] * y + this.values[10] * z + this.values[14],\r\n        ]);\r\n    }\r\n    multiplyVec4(vector, dest) {\r\n        if (!dest) {\r\n            dest = new _vec4__WEBPACK_IMPORTED_MODULE_4__.vec4();\r\n        }\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        const w = vector.w;\r\n        dest.x = this.values[0] * x + this.values[4] * y + this.values[8] * z + this.values[12] * w;\r\n        dest.y = this.values[1] * x + this.values[5] * y + this.values[9] * z + this.values[13] * w;\r\n        dest.z = this.values[2] * x + this.values[6] * y + this.values[10] * z + this.values[14] * w;\r\n        dest.w = this.values[3] * x + this.values[7] * y + this.values[11] * z + this.values[15] * w;\r\n        return dest;\r\n    }\r\n    toMat3() {\r\n        return new _mat3__WEBPACK_IMPORTED_MODULE_2__.mat3([\r\n            this.values[0],\r\n            this.values[1],\r\n            this.values[2],\r\n            this.values[4],\r\n            this.values[5],\r\n            this.values[6],\r\n            this.values[8],\r\n            this.values[9],\r\n            this.values[10],\r\n        ]);\r\n    }\r\n    toInverseMat3() {\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a10 = this.values[4];\r\n        const a11 = this.values[5];\r\n        const a12 = this.values[6];\r\n        const a20 = this.values[8];\r\n        const a21 = this.values[9];\r\n        const a22 = this.values[10];\r\n        const det01 = a22 * a11 - a12 * a21;\r\n        const det11 = -a22 * a10 + a12 * a20;\r\n        const det21 = a21 * a10 - a11 * a20;\r\n        let det = a00 * det01 + a01 * det11 + a02 * det21;\r\n        if (!det) {\r\n            return null;\r\n        }\r\n        det = 1.0 / det;\r\n        return new _mat3__WEBPACK_IMPORTED_MODULE_2__.mat3([\r\n            det01 * det,\r\n            (-a22 * a01 + a02 * a21) * det,\r\n            (a12 * a01 - a02 * a11) * det,\r\n            det11 * det,\r\n            (a22 * a00 - a02 * a20) * det,\r\n            (-a12 * a00 + a02 * a10) * det,\r\n            det21 * det,\r\n            (-a21 * a00 + a01 * a20) * det,\r\n            (a11 * a00 - a01 * a10) * det,\r\n        ]);\r\n    }\r\n    translate(vector) {\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        this.values[12] += this.values[0] * x + this.values[4] * y + this.values[8] * z;\r\n        this.values[13] += this.values[1] * x + this.values[5] * y + this.values[9] * z;\r\n        this.values[14] += this.values[2] * x + this.values[6] * y + this.values[10] * z;\r\n        this.values[15] += this.values[3] * x + this.values[7] * y + this.values[11] * z;\r\n        return this;\r\n    }\r\n    scale(vector) {\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        this.values[0] *= x;\r\n        this.values[1] *= x;\r\n        this.values[2] *= x;\r\n        this.values[3] *= x;\r\n        this.values[4] *= y;\r\n        this.values[5] *= y;\r\n        this.values[6] *= y;\r\n        this.values[7] *= y;\r\n        this.values[8] *= z;\r\n        this.values[9] *= z;\r\n        this.values[10] *= z;\r\n        this.values[11] *= z;\r\n        return this;\r\n    }\r\n    rotate(angle, axis) {\r\n        let x = axis.x;\r\n        let y = axis.y;\r\n        let z = axis.z;\r\n        let length = Math.sqrt(x * x + y * y + z * z);\r\n        if (!length) {\r\n            return null;\r\n        }\r\n        if (length !== 1) {\r\n            length = 1 / length;\r\n            x *= length;\r\n            y *= length;\r\n            z *= length;\r\n        }\r\n        const s = Math.sin(angle);\r\n        const c = Math.cos(angle);\r\n        const t = 1.0 - c;\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a03 = this.values[3];\r\n        const a10 = this.values[4];\r\n        const a11 = this.values[5];\r\n        const a12 = this.values[6];\r\n        const a13 = this.values[7];\r\n        const a20 = this.values[8];\r\n        const a21 = this.values[9];\r\n        const a22 = this.values[10];\r\n        const a23 = this.values[11];\r\n        const b00 = x * x * t + c;\r\n        const b01 = y * x * t + z * s;\r\n        const b02 = z * x * t - y * s;\r\n        const b10 = x * y * t - z * s;\r\n        const b11 = y * y * t + c;\r\n        const b12 = z * y * t + x * s;\r\n        const b20 = x * z * t + y * s;\r\n        const b21 = y * z * t - x * s;\r\n        const b22 = z * z * t + c;\r\n        this.values[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n        this.values[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n        this.values[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n        this.values[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n        this.values[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n        this.values[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n        this.values[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n        this.values[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n        this.values[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n        this.values[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n        this.values[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n        this.values[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n        return this;\r\n    }\r\n    static frustum(left, right, bottom, top, near, far) {\r\n        const rl = (right - left);\r\n        const tb = (top - bottom);\r\n        const fn = (far - near);\r\n        return new mat4([\r\n            (near * 2) / rl,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            (near * 2) / tb,\r\n            0,\r\n            0,\r\n            (right + left) / rl,\r\n            (top + bottom) / tb,\r\n            -(far + near) / fn,\r\n            -1,\r\n            0,\r\n            0,\r\n            -(far * near * 2) / fn,\r\n            0,\r\n        ]);\r\n    }\r\n    static perspective(fov, aspect, near, far) {\r\n        const top = near * Math.tan(fov * Math.PI / 360.0);\r\n        const right = top * aspect;\r\n        return mat4.frustum(-right, right, -top, top, near, far);\r\n    }\r\n    static orthographic(left, right, bottom, top, near, far) {\r\n        const rl = (right - left);\r\n        const tb = (top - bottom);\r\n        const fn = (far - near);\r\n        return new mat4([\r\n            2 / rl,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            2 / tb,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            -2 / fn,\r\n            0,\r\n            -(left + right) / rl,\r\n            -(top + bottom) / tb,\r\n            -(far + near) / fn,\r\n            1,\r\n        ]);\r\n    }\r\n    static lookAt(position, target, up = _vec3__WEBPACK_IMPORTED_MODULE_3__.vec3.up) {\r\n        if (position.equals(target)) {\r\n            return this.getIdentity();\r\n        }\r\n        const z = _vec3__WEBPACK_IMPORTED_MODULE_3__.vec3.difference(position, target).normalize();\r\n        const x = _vec3__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(up, z).normalize();\r\n        const y = _vec3__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(z, x).normalize();\r\n        return new mat4([\r\n            x.x,\r\n            y.x,\r\n            z.x,\r\n            0,\r\n            x.y,\r\n            y.y,\r\n            z.y,\r\n            0,\r\n            x.z,\r\n            y.z,\r\n            z.z,\r\n            0,\r\n            -_vec3__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(x, position),\r\n            -_vec3__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(y, position),\r\n            -_vec3__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(z, position),\r\n            1,\r\n        ]);\r\n    }\r\n    static product(m1, m2, result) {\r\n        const a00 = m1.at(0);\r\n        const a01 = m1.at(1);\r\n        const a02 = m1.at(2);\r\n        const a03 = m1.at(3);\r\n        const a10 = m1.at(4);\r\n        const a11 = m1.at(5);\r\n        const a12 = m1.at(6);\r\n        const a13 = m1.at(7);\r\n        const a20 = m1.at(8);\r\n        const a21 = m1.at(9);\r\n        const a22 = m1.at(10);\r\n        const a23 = m1.at(11);\r\n        const a30 = m1.at(12);\r\n        const a31 = m1.at(13);\r\n        const a32 = m1.at(14);\r\n        const a33 = m1.at(15);\r\n        const b00 = m2.at(0);\r\n        const b01 = m2.at(1);\r\n        const b02 = m2.at(2);\r\n        const b03 = m2.at(3);\r\n        const b10 = m2.at(4);\r\n        const b11 = m2.at(5);\r\n        const b12 = m2.at(6);\r\n        const b13 = m2.at(7);\r\n        const b20 = m2.at(8);\r\n        const b21 = m2.at(9);\r\n        const b22 = m2.at(10);\r\n        const b23 = m2.at(11);\r\n        const b30 = m2.at(12);\r\n        const b31 = m2.at(13);\r\n        const b32 = m2.at(14);\r\n        const b33 = m2.at(15);\r\n        if (result) {\r\n            result.init([\r\n                b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\r\n                b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\r\n                b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\r\n                b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\r\n                b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\r\n                b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\r\n                b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\r\n                b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\r\n                b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\r\n                b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\r\n                b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\r\n                b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\r\n                b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\r\n                b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\r\n                b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\r\n                b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33,\r\n            ]);\r\n            return result;\r\n        }\r\n        else {\r\n            return new mat4([\r\n                b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\r\n                b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\r\n                b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\r\n                b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\r\n                b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\r\n                b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\r\n                b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\r\n                b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\r\n                b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\r\n                b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\r\n                b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\r\n                b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\r\n                b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\r\n                b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\r\n                b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\r\n                b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33,\r\n            ]);\r\n        }\r\n    }\r\n    toString() {\r\n        var n = 0;\r\n        let str = \"\";\r\n        for (let i = 0; i < 4; i++) {\r\n            for (let u = 0; u < 4; u++) {\r\n                n = i * 4 + u;\r\n                str += this.values[n] + \" ,\";\r\n            }\r\n            str += \"\\n\";\r\n        }\r\n        return str;\r\n    }\r\n    getTranslation() {\r\n        return new _vec3__WEBPACK_IMPORTED_MODULE_3__.vec3([this.values[3], this.values[7], this.values[11]]);\r\n    }\r\n    getScale() {\r\n        var m = this.copy();\r\n        var scaleX = new _vec3__WEBPACK_IMPORTED_MODULE_3__.vec3([m.values[0], m.values[4], m.values[8]]).length();\r\n        var scaleY = new _vec3__WEBPACK_IMPORTED_MODULE_3__.vec3([m.values[1], m.values[5], m.values[9]]).length();\r\n        var scaleZ = new _vec3__WEBPACK_IMPORTED_MODULE_3__.vec3([m.values[2], m.values[6], m.values[10]]).length();\r\n        return new _vec3__WEBPACK_IMPORTED_MODULE_3__.vec3([scaleX, scaleY, scaleZ]);\r\n    }\r\n    getRotationMATRIX() {\r\n        var temp = new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '@types/three'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())();\r\n        var i = 0;\r\n        temp.set(this.values[i++], this.values[i++], this.values[i++], this.values[i++], this.values[i++], this.values[i++], this.values[i++], this.values[i++], this.values[i++], this.values[i++], this.values[i++], this.values[i++], this.values[i++], this.values[i++], this.values[i++], this.values[i++]);\r\n        temp = temp.extractRotation(temp);\r\n        var rot = new mat4(temp.toArray());\r\n        return rot;\r\n    }\r\n}\r\nmat4.identity = new mat4().setIdentity();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Math/TSM_Library/mat4.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Math/TSM_Library/quat.ts":
/*!************************************************!*\
  !*** ./src/WEBGL/src/Math/TSM_Library/quat.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"quat\": () => (/* binding */ quat)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/WEBGL/src/Math/TSM_Library/constants.ts\");\n/* harmony import */ var _mat3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mat3 */ \"./src/WEBGL/src/Math/TSM_Library/mat3.ts\");\n/* harmony import */ var _mat4__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mat4 */ \"./src/WEBGL/src/Math/TSM_Library/mat4.ts\");\n/* harmony import */ var _vec3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vec3 */ \"./src/WEBGL/src/Math/TSM_Library/vec3.ts\");\n\r\n\r\n\r\n\r\nclass quat {\r\n    constructor(values) {\r\n        this.values = new Float32Array(4);\r\n        if (values !== undefined) {\r\n            this.xyzw = values;\r\n        }\r\n    }\r\n    get x() {\r\n        return this.values[0];\r\n    }\r\n    get y() {\r\n        return this.values[1];\r\n    }\r\n    get z() {\r\n        return this.values[2];\r\n    }\r\n    get w() {\r\n        return this.values[3];\r\n    }\r\n    get xy() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n        ];\r\n    }\r\n    get xyz() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n            this.values[2],\r\n        ];\r\n    }\r\n    get xyzw() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n            this.values[2],\r\n            this.values[3],\r\n        ];\r\n    }\r\n    set x(value) {\r\n        this.values[0] = value;\r\n    }\r\n    set y(value) {\r\n        this.values[1] = value;\r\n    }\r\n    set z(value) {\r\n        this.values[2] = value;\r\n    }\r\n    set w(value) {\r\n        this.values[3] = value;\r\n    }\r\n    set xy(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n    }\r\n    set xyz(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n        this.values[2] = values[2];\r\n    }\r\n    set xyzw(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n        this.values[2] = values[2];\r\n        this.values[3] = values[3];\r\n    }\r\n    at(index) {\r\n        return this.values[index];\r\n    }\r\n    reset() {\r\n        for (let i = 0; i < 4; i++) {\r\n            this.values[i] = 0;\r\n        }\r\n    }\r\n    copy(dest) {\r\n        if (!dest) {\r\n            dest = new quat();\r\n        }\r\n        for (let i = 0; i < 4; i++) {\r\n            dest.values[i] = this.values[i];\r\n        }\r\n        return dest;\r\n    }\r\n    roll() {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        return Math.atan2(2.0 * (x * y + w * z), w * w + x * x - y * y - z * z);\r\n    }\r\n    pitch() {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        return Math.atan2(2.0 * (y * z + w * x), w * w - x * x - y * y + z * z);\r\n    }\r\n    yaw() {\r\n        return Math.asin(2.0 * (this.x * this.z - this.w * this.y));\r\n    }\r\n    equals(vector, threshold = _constants__WEBPACK_IMPORTED_MODULE_0__.epsilon) {\r\n        for (let i = 0; i < 4; i++) {\r\n            if (Math.abs(this.values[i] - vector.at(i)) > threshold) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    setIdentity() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        this.w = 1;\r\n        return this;\r\n    }\r\n    calculateW() {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        this.w = -(Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z)));\r\n        return this;\r\n    }\r\n    inverse() {\r\n        const dot = quat.dot(this, this);\r\n        if (!dot) {\r\n            this.xyzw = [0, 0, 0, 0];\r\n            return this;\r\n        }\r\n        const invDot = dot ? 1.0 / dot : 0;\r\n        this.x *= -invDot;\r\n        this.y *= -invDot;\r\n        this.z *= -invDot;\r\n        this.w *= invDot;\r\n        return this;\r\n    }\r\n    conjugate() {\r\n        this.values[0] *= -1;\r\n        this.values[1] *= -1;\r\n        this.values[2] *= -1;\r\n        return this;\r\n    }\r\n    length() {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        return Math.sqrt(x * x + y * y + z * z + w * w);\r\n    }\r\n    normalize(dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        let length = Math.sqrt(x * x + y * y + z * z + w * w);\r\n        if (!length) {\r\n            dest.x = 0;\r\n            dest.y = 0;\r\n            dest.z = 0;\r\n            dest.w = 0;\r\n            return dest;\r\n        }\r\n        length = 1 / length;\r\n        dest.x = x * length;\r\n        dest.y = y * length;\r\n        dest.z = z * length;\r\n        dest.w = w * length;\r\n        return dest;\r\n    }\r\n    add(other) {\r\n        for (let i = 0; i < 4; i++) {\r\n            this.values[i] += other.at(i);\r\n        }\r\n        return this;\r\n    }\r\n    multiply(other) {\r\n        const q1x = this.values[0];\r\n        const q1y = this.values[1];\r\n        const q1z = this.values[2];\r\n        const q1w = this.values[3];\r\n        const q2x = other.x;\r\n        const q2y = other.y;\r\n        const q2z = other.z;\r\n        const q2w = other.w;\r\n        this.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;\r\n        this.y = q1y * q2w + q1w * q2y + q1z * q2x - q1x * q2z;\r\n        this.z = q1z * q2w + q1w * q2z + q1x * q2y - q1y * q2x;\r\n        this.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;\r\n        return this;\r\n    }\r\n    multiplyVec3(vector, dest) {\r\n        if (!dest) {\r\n            dest = new _vec3__WEBPACK_IMPORTED_MODULE_3__.vec3();\r\n        }\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        const qx = this.x;\r\n        const qy = this.y;\r\n        const qz = this.z;\r\n        const qw = this.w;\r\n        const ix = qw * x + qy * z - qz * y;\r\n        const iy = qw * y + qz * x - qx * z;\r\n        const iz = qw * z + qx * y - qy * x;\r\n        const iw = -qx * x - qy * y - qz * z;\r\n        dest.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n        dest.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n        dest.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n        return dest;\r\n    }\r\n    toMat3(dest) {\r\n        if (!dest) {\r\n            dest = new _mat3__WEBPACK_IMPORTED_MODULE_1__.mat3();\r\n        }\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        const x2 = x + x;\r\n        const y2 = y + y;\r\n        const z2 = z + z;\r\n        const xx = x * x2;\r\n        const xy = x * y2;\r\n        const xz = x * z2;\r\n        const yy = y * y2;\r\n        const yz = y * z2;\r\n        const zz = z * z2;\r\n        const wx = w * x2;\r\n        const wy = w * y2;\r\n        const wz = w * z2;\r\n        dest.init([\r\n            1 - (yy + zz),\r\n            xy + wz,\r\n            xz - wy,\r\n            xy - wz,\r\n            1 - (xx + zz),\r\n            yz + wx,\r\n            xz + wy,\r\n            yz - wx,\r\n            1 - (xx + yy),\r\n        ]);\r\n        return dest;\r\n    }\r\n    toMat4(dest) {\r\n        if (!dest) {\r\n            dest = new _mat4__WEBPACK_IMPORTED_MODULE_2__.mat4();\r\n        }\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        const x2 = x + x;\r\n        const y2 = y + y;\r\n        const z2 = z + z;\r\n        const xx = x * x2;\r\n        const xy = x * y2;\r\n        const xz = x * z2;\r\n        const yy = y * y2;\r\n        const yz = y * z2;\r\n        const zz = z * z2;\r\n        const wx = w * x2;\r\n        const wy = w * y2;\r\n        const wz = w * z2;\r\n        dest.init([\r\n            1 - (yy + zz),\r\n            xy + wz,\r\n            xz - wy,\r\n            0,\r\n            xy - wz,\r\n            1 - (xx + zz),\r\n            yz + wx,\r\n            0,\r\n            xz + wy,\r\n            yz - wx,\r\n            1 - (xx + yy),\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            1,\r\n        ]);\r\n        return dest;\r\n    }\r\n    static dot(q1, q2) {\r\n        return q1.x * q2.x + q1.y * q2.y + q1.z * q2.z + q1.w * q2.w;\r\n    }\r\n    static sum(q1, q2, dest) {\r\n        if (!dest) {\r\n            dest = new quat();\r\n        }\r\n        dest.x = q1.x + q2.x;\r\n        dest.y = q1.y + q2.y;\r\n        dest.z = q1.z + q2.z;\r\n        dest.w = q1.w + q2.w;\r\n        return dest;\r\n    }\r\n    static product(q1, q2, dest) {\r\n        if (!dest) {\r\n            dest = new quat();\r\n        }\r\n        const q1x = q1.x;\r\n        const q1y = q1.y;\r\n        const q1z = q1.z;\r\n        const q1w = q1.w;\r\n        const q2x = q2.x;\r\n        const q2y = q2.y;\r\n        const q2z = q2.z;\r\n        const q2w = q2.w;\r\n        dest.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;\r\n        dest.y = q1y * q2w + q1w * q2y + q1z * q2x - q1x * q2z;\r\n        dest.z = q1z * q2w + q1w * q2z + q1x * q2y - q1y * q2x;\r\n        dest.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;\r\n        return dest;\r\n    }\r\n    static cross(q1, q2, dest) {\r\n        if (!dest) {\r\n            dest = new quat();\r\n        }\r\n        const q1x = q1.x;\r\n        const q1y = q1.y;\r\n        const q1z = q1.z;\r\n        const q1w = q1.w;\r\n        const q2x = q2.x;\r\n        const q2y = q2.y;\r\n        const q2z = q2.z;\r\n        const q2w = q2.w;\r\n        dest.x = q1w * q2z + q1z * q2w + q1x * q2y - q1y * q2x;\r\n        dest.y = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;\r\n        dest.z = q1w * q2x + q1x * q2w + q1y * q2z - q1z * q2y;\r\n        dest.w = q1w * q2y + q1y * q2w + q1z * q2x - q1x * q2z;\r\n        return dest;\r\n    }\r\n    static shortMix(q1, q2, time, dest) {\r\n        if (!dest) {\r\n            dest = new quat();\r\n        }\r\n        if (time <= 0.0) {\r\n            dest.xyzw = q1.xyzw;\r\n            return dest;\r\n        }\r\n        else if (time >= 1.0) {\r\n            dest.xyzw = q2.xyzw;\r\n            return dest;\r\n        }\r\n        let cos = quat.dot(q1, q2);\r\n        const q2a = q2.copy();\r\n        if (cos < 0.0) {\r\n            q2a.inverse();\r\n            cos = -cos;\r\n        }\r\n        let k0;\r\n        let k1;\r\n        if (cos > 0.9999) {\r\n            k0 = 1 - time;\r\n            k1 = 0 + time;\r\n        }\r\n        else {\r\n            const sin = Math.sqrt(1 - cos * cos);\r\n            const angle = Math.atan2(sin, cos);\r\n            const oneOverSin = 1 / sin;\r\n            k0 = Math.sin((1 - time) * angle) * oneOverSin;\r\n            k1 = Math.sin((0 + time) * angle) * oneOverSin;\r\n        }\r\n        dest.x = k0 * q1.x + k1 * q2a.x;\r\n        dest.y = k0 * q1.y + k1 * q2a.y;\r\n        dest.z = k0 * q1.z + k1 * q2a.z;\r\n        dest.w = k0 * q1.w + k1 * q2a.w;\r\n        return dest;\r\n    }\r\n    static mix(q1, q2, time, dest) {\r\n        if (!dest) {\r\n            dest = new quat();\r\n        }\r\n        const cosHalfTheta = q1.x * q2.x + q1.y * q2.y + q1.z * q2.z + q1.w * q2.w;\r\n        if (Math.abs(cosHalfTheta) >= 1.0) {\r\n            dest.xyzw = q1.xyzw;\r\n            return dest;\r\n        }\r\n        const halfTheta = Math.acos(cosHalfTheta);\r\n        const sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta);\r\n        if (Math.abs(sinHalfTheta) < 0.001) {\r\n            dest.x = q1.x * 0.5 + q2.x * 0.5;\r\n            dest.y = q1.y * 0.5 + q2.y * 0.5;\r\n            dest.z = q1.z * 0.5 + q2.z * 0.5;\r\n            dest.w = q1.w * 0.5 + q2.w * 0.5;\r\n            return dest;\r\n        }\r\n        const ratioA = Math.sin((1 - time) * halfTheta) / sinHalfTheta;\r\n        const ratioB = Math.sin(time * halfTheta) / sinHalfTheta;\r\n        dest.x = q1.x * ratioA + q2.x * ratioB;\r\n        dest.y = q1.y * ratioA + q2.y * ratioB;\r\n        dest.z = q1.z * ratioA + q2.z * ratioB;\r\n        dest.w = q1.w * ratioA + q2.w * ratioB;\r\n        return dest;\r\n    }\r\n    static fromAxisAngle(axis, angle, dest) {\r\n        if (!dest) {\r\n            dest = new quat();\r\n        }\r\n        angle *= 0.5;\r\n        const sin = Math.sin(angle);\r\n        dest.x = axis.x * sin;\r\n        dest.y = axis.y * sin;\r\n        dest.z = axis.z * sin;\r\n        dest.w = Math.cos(angle);\r\n        return dest;\r\n    }\r\n}\r\nquat.identity = new quat().setIdentity();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Math/TSM_Library/quat.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Math/TSM_Library/vec2.ts":
/*!************************************************!*\
  !*** ./src/WEBGL/src/Math/TSM_Library/vec2.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"vec2\": () => (/* binding */ vec2)\n/* harmony export */ });\n/* harmony import */ var _vec3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vec3 */ \"./src/WEBGL/src/Math/TSM_Library/vec3.ts\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"./src/WEBGL/src/Math/TSM_Library/constants.ts\");\n\r\n\r\nclass vec2 {\r\n    constructor(values) {\r\n        this.values = new Float32Array(2);\r\n        if (values !== undefined) {\r\n            this.xy = values;\r\n        }\r\n    }\r\n    get x() {\r\n        return this.values[0];\r\n    }\r\n    get y() {\r\n        return this.values[1];\r\n    }\r\n    get xy() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n        ];\r\n    }\r\n    set x(value) {\r\n        this.values[0] = value;\r\n    }\r\n    set y(value) {\r\n        this.values[1] = value;\r\n    }\r\n    set xy(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n    }\r\n    at(index) {\r\n        return this.values[index];\r\n    }\r\n    reset() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n    }\r\n    copy(dest) {\r\n        if (!dest) {\r\n            dest = new vec2();\r\n        }\r\n        dest.x = this.x;\r\n        dest.y = this.y;\r\n        return dest;\r\n    }\r\n    negate(dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        dest.x = -this.x;\r\n        dest.y = -this.y;\r\n        return dest;\r\n    }\r\n    equals(vector, threshold = _constants__WEBPACK_IMPORTED_MODULE_1__.epsilon) {\r\n        if (Math.abs(this.x - vector.x) > threshold) {\r\n            return false;\r\n        }\r\n        if (Math.abs(this.y - vector.y) > threshold) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    length() {\r\n        return Math.sqrt(this.squaredLength());\r\n    }\r\n    squaredLength() {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        return (x * x + y * y);\r\n    }\r\n    add(vector) {\r\n        this.x += vector.x;\r\n        this.y += vector.y;\r\n        return this;\r\n    }\r\n    subtract(vector) {\r\n        this.x -= vector.x;\r\n        this.y -= vector.y;\r\n        return this;\r\n    }\r\n    multiply(vector) {\r\n        this.x *= vector.x;\r\n        this.y *= vector.y;\r\n        return this;\r\n    }\r\n    divide(vector) {\r\n        this.x /= vector.x;\r\n        this.y /= vector.y;\r\n        return this;\r\n    }\r\n    scale(value, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        dest.x *= value;\r\n        dest.y *= value;\r\n        return dest;\r\n    }\r\n    normalize(dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        let length = this.length();\r\n        if (length === 1) {\r\n            return this;\r\n        }\r\n        if (length === 0) {\r\n            dest.x = 0;\r\n            dest.y = 0;\r\n            return dest;\r\n        }\r\n        length = 1.0 / length;\r\n        dest.x *= length;\r\n        dest.y *= length;\r\n        return dest;\r\n    }\r\n    multiplyMat2(matrix, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        return matrix.multiplyVec2(this, dest);\r\n    }\r\n    multiplyMat3(matrix, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        return matrix.multiplyVec2(this, dest);\r\n    }\r\n    static cross(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new _vec3__WEBPACK_IMPORTED_MODULE_0__.vec3();\r\n        }\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const x2 = vector2.x;\r\n        const y2 = vector2.y;\r\n        const z = x * y2 - y * x2;\r\n        dest.x = 0;\r\n        dest.y = 0;\r\n        dest.z = z;\r\n        return dest;\r\n    }\r\n    static dot(vector, vector2) {\r\n        return (vector.x * vector2.x + vector.y * vector2.y);\r\n    }\r\n    static distance(vector, vector2) {\r\n        return Math.sqrt(this.squaredDistance(vector, vector2));\r\n    }\r\n    static squaredDistance(vector, vector2) {\r\n        const x = vector2.x - vector.x;\r\n        const y = vector2.y - vector.y;\r\n        return (x * x + y * y);\r\n    }\r\n    static direction(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec2();\r\n        }\r\n        const x = vector.x - vector2.x;\r\n        const y = vector.y - vector2.y;\r\n        let length = Math.sqrt(x * x + y * y);\r\n        if (length === 0) {\r\n            dest.x = 0;\r\n            dest.y = 0;\r\n            return dest;\r\n        }\r\n        length = 1 / length;\r\n        dest.x = x * length;\r\n        dest.y = y * length;\r\n        return dest;\r\n    }\r\n    static mix(vector, vector2, time, dest) {\r\n        if (!dest) {\r\n            dest = new vec2();\r\n        }\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const x2 = vector2.x;\r\n        const y2 = vector2.y;\r\n        dest.x = x + time * (x2 - x);\r\n        dest.y = y + time * (y2 - y);\r\n        return dest;\r\n    }\r\n    static sum(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec2();\r\n        }\r\n        dest.x = vector.x + vector2.x;\r\n        dest.y = vector.y + vector2.y;\r\n        return dest;\r\n    }\r\n    static difference(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec2();\r\n        }\r\n        dest.x = vector.x - vector2.x;\r\n        dest.y = vector.y - vector2.y;\r\n        return dest;\r\n    }\r\n    static product(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec2();\r\n        }\r\n        dest.x = vector.x * vector2.x;\r\n        dest.y = vector.y * vector2.y;\r\n        return dest;\r\n    }\r\n    static quotient(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec2();\r\n        }\r\n        dest.x = vector.x / vector2.x;\r\n        dest.y = vector.y / vector2.y;\r\n        return dest;\r\n    }\r\n}\r\nvec2.zero = new vec2([0, 0]);\r\nvec2.one = new vec2([1, 1]);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Math/TSM_Library/vec2.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Math/TSM_Library/vec3.ts":
/*!************************************************!*\
  !*** ./src/WEBGL/src/Math/TSM_Library/vec3.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"vec3\": () => (/* binding */ vec3)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/WEBGL/src/Math/TSM_Library/constants.ts\");\n/* harmony import */ var _quat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quat */ \"./src/WEBGL/src/Math/TSM_Library/quat.ts\");\n\r\n\r\nclass vec3 {\r\n    constructor(values) {\r\n        this.values = new Float32Array(3);\r\n        if (values !== undefined) {\r\n            this.xyz = values;\r\n        }\r\n    }\r\n    get x() {\r\n        return this.values[0];\r\n    }\r\n    get y() {\r\n        return this.values[1];\r\n    }\r\n    get z() {\r\n        return this.values[2];\r\n    }\r\n    get xy() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n        ];\r\n    }\r\n    get xyz() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n            this.values[2],\r\n        ];\r\n    }\r\n    set x(value) {\r\n        this.values[0] = value;\r\n    }\r\n    set y(value) {\r\n        this.values[1] = value;\r\n    }\r\n    set z(value) {\r\n        this.values[2] = value;\r\n    }\r\n    set xy(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n    }\r\n    set xyz(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n        this.values[2] = values[2];\r\n    }\r\n    at(index) {\r\n        return this.values[index];\r\n    }\r\n    reset() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n    }\r\n    copy(dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        dest.x = this.x;\r\n        dest.y = this.y;\r\n        dest.z = this.z;\r\n        return dest;\r\n    }\r\n    negate(dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        dest.x = -this.x;\r\n        dest.y = -this.y;\r\n        dest.z = -this.z;\r\n        return dest;\r\n    }\r\n    equals(vector, threshold = _constants__WEBPACK_IMPORTED_MODULE_0__.epsilon) {\r\n        if (Math.abs(this.x - vector.x) > threshold) {\r\n            return false;\r\n        }\r\n        if (Math.abs(this.y - vector.y) > threshold) {\r\n            return false;\r\n        }\r\n        if (Math.abs(this.z - vector.z) > threshold) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    length() {\r\n        return Math.sqrt(this.squaredLength());\r\n    }\r\n    squaredLength() {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        return (x * x + y * y + z * z);\r\n    }\r\n    add(vector) {\r\n        this.x += vector.x;\r\n        this.y += vector.y;\r\n        this.z += vector.z;\r\n        return this;\r\n    }\r\n    subtract(vector) {\r\n        this.x -= vector.x;\r\n        this.y -= vector.y;\r\n        this.z -= vector.z;\r\n        return this;\r\n    }\r\n    multiply(vector) {\r\n        this.x *= vector.x;\r\n        this.y *= vector.y;\r\n        this.z *= vector.z;\r\n        return this;\r\n    }\r\n    divide(vector) {\r\n        this.x /= vector.x;\r\n        this.y /= vector.y;\r\n        this.z /= vector.z;\r\n        return this;\r\n    }\r\n    scale(value, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        dest.x *= value;\r\n        dest.y *= value;\r\n        dest.z *= value;\r\n        return dest;\r\n    }\r\n    normalize(dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        let length = this.length();\r\n        if (length === 1) {\r\n            return this;\r\n        }\r\n        if (length === 0) {\r\n            dest.x = 0;\r\n            dest.y = 0;\r\n            dest.z = 0;\r\n            return dest;\r\n        }\r\n        length = 1.0 / length;\r\n        dest.x *= length;\r\n        dest.y *= length;\r\n        dest.z *= length;\r\n        return dest;\r\n    }\r\n    multiplyByMat3(matrix, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        return matrix.multiplyVec3(this, dest);\r\n    }\r\n    multiplyByQuat(quaternion, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        return quaternion.multiplyVec3(this, dest);\r\n    }\r\n    toQuat(dest) {\r\n        if (!dest) {\r\n            dest = new _quat__WEBPACK_IMPORTED_MODULE_1__.quat();\r\n        }\r\n        const c = new vec3();\r\n        const s = new vec3();\r\n        c.x = Math.cos(this.x * 0.5);\r\n        s.x = Math.sin(this.x * 0.5);\r\n        c.y = Math.cos(this.y * 0.5);\r\n        s.y = Math.sin(this.y * 0.5);\r\n        c.z = Math.cos(this.z * 0.5);\r\n        s.z = Math.sin(this.z * 0.5);\r\n        dest.x = s.x * c.y * c.z - c.x * s.y * s.z;\r\n        dest.y = c.x * s.y * c.z + s.x * c.y * s.z;\r\n        dest.z = c.x * c.y * s.z - s.x * s.y * c.z;\r\n        dest.w = c.x * c.y * c.z + s.x * s.y * s.z;\r\n        return dest;\r\n    }\r\n    static cross(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        const x2 = vector2.x;\r\n        const y2 = vector2.y;\r\n        const z2 = vector2.z;\r\n        dest.x = y * z2 - z * y2;\r\n        dest.y = z * x2 - x * z2;\r\n        dest.z = x * y2 - y * x2;\r\n        return dest;\r\n    }\r\n    static dot(vector, vector2) {\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        const x2 = vector2.x;\r\n        const y2 = vector2.y;\r\n        const z2 = vector2.z;\r\n        return (x * x2 + y * y2 + z * z2);\r\n    }\r\n    static distance(vector, vector2) {\r\n        const x = vector2.x - vector.x;\r\n        const y = vector2.y - vector.y;\r\n        const z = vector2.z - vector.z;\r\n        return Math.sqrt(this.squaredDistance(vector, vector2));\r\n    }\r\n    static squaredDistance(vector, vector2) {\r\n        const x = vector2.x - vector.x;\r\n        const y = vector2.y - vector.y;\r\n        const z = vector2.z - vector.z;\r\n        return (x * x + y * y + z * z);\r\n    }\r\n    static direction(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        const x = vector.x - vector2.x;\r\n        const y = vector.y - vector2.y;\r\n        const z = vector.z - vector2.z;\r\n        let length = Math.sqrt(x * x + y * y + z * z);\r\n        if (length === 0) {\r\n            dest.x = 0;\r\n            dest.y = 0;\r\n            dest.z = 0;\r\n            return dest;\r\n        }\r\n        length = 1 / length;\r\n        dest.x = x * length;\r\n        dest.y = y * length;\r\n        dest.z = z * length;\r\n        return dest;\r\n    }\r\n    static mix(vector, vector2, time, dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        dest.x = vector.x + time * (vector2.x - vector.x);\r\n        dest.y = vector.y + time * (vector2.y - vector.y);\r\n        dest.z = vector.z + time * (vector2.z - vector.z);\r\n        return dest;\r\n    }\r\n    static sum(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        dest.x = vector.x + vector2.x;\r\n        dest.y = vector.y + vector2.y;\r\n        dest.z = vector.z + vector2.z;\r\n        return dest;\r\n    }\r\n    static difference(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        dest.x = vector.x - vector2.x;\r\n        dest.y = vector.y - vector2.y;\r\n        dest.z = vector.z - vector2.z;\r\n        return dest;\r\n    }\r\n    static product(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        dest.x = vector.x * vector2.x;\r\n        dest.y = vector.y * vector2.y;\r\n        dest.z = vector.z * vector2.z;\r\n        return dest;\r\n    }\r\n    static quotient(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        dest.x = vector.x / vector2.x;\r\n        dest.y = vector.y / vector2.y;\r\n        dest.z = vector.z / vector2.z;\r\n        return dest;\r\n    }\r\n}\r\nvec3.zero = new vec3([0, 0, 0]);\r\nvec3.one = new vec3([1, 1, 1]);\r\nvec3.up = new vec3([0, 1, 0]);\r\nvec3.right = new vec3([1, 0, 0]);\r\nvec3.forward = new vec3([0, 0, 1]);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Math/TSM_Library/vec3.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/Math/TSM_Library/vec4.ts":
/*!************************************************!*\
  !*** ./src/WEBGL/src/Math/TSM_Library/vec4.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"vec4\": () => (/* binding */ vec4)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/WEBGL/src/Math/TSM_Library/constants.ts\");\n\r\nclass vec4 {\r\n    constructor(values) {\r\n        this.values = new Float32Array(4);\r\n        if (values !== undefined) {\r\n            this.xyzw = values;\r\n        }\r\n    }\r\n    get x() {\r\n        return this.values[0];\r\n    }\r\n    get y() {\r\n        return this.values[1];\r\n    }\r\n    get z() {\r\n        return this.values[2];\r\n    }\r\n    get w() {\r\n        return this.values[3];\r\n    }\r\n    get xy() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n        ];\r\n    }\r\n    get xyz() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n            this.values[2],\r\n        ];\r\n    }\r\n    get xyzw() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n            this.values[2],\r\n            this.values[3],\r\n        ];\r\n    }\r\n    set x(value) {\r\n        this.values[0] = value;\r\n    }\r\n    set y(value) {\r\n        this.values[1] = value;\r\n    }\r\n    set z(value) {\r\n        this.values[2] = value;\r\n    }\r\n    set w(value) {\r\n        this.values[3] = value;\r\n    }\r\n    set xy(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n    }\r\n    set xyz(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n        this.values[2] = values[2];\r\n    }\r\n    set xyzw(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n        this.values[2] = values[2];\r\n        this.values[3] = values[3];\r\n    }\r\n    get r() {\r\n        return this.values[0];\r\n    }\r\n    get g() {\r\n        return this.values[1];\r\n    }\r\n    get b() {\r\n        return this.values[2];\r\n    }\r\n    get a() {\r\n        return this.values[3];\r\n    }\r\n    get rg() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n        ];\r\n    }\r\n    get rgb() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n            this.values[2],\r\n        ];\r\n    }\r\n    get rgba() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n            this.values[2],\r\n            this.values[3],\r\n        ];\r\n    }\r\n    set r(value) {\r\n        this.values[0] = value;\r\n    }\r\n    set g(value) {\r\n        this.values[1] = value;\r\n    }\r\n    set b(value) {\r\n        this.values[2] = value;\r\n    }\r\n    set a(value) {\r\n        this.values[3] = value;\r\n    }\r\n    set rg(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n    }\r\n    set rgb(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n        this.values[2] = values[2];\r\n    }\r\n    set rgba(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n        this.values[2] = values[2];\r\n        this.values[3] = values[3];\r\n    }\r\n    at(index) {\r\n        return this.values[index];\r\n    }\r\n    reset() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        this.w = 0;\r\n    }\r\n    copy(dest) {\r\n        if (!dest) {\r\n            dest = new vec4();\r\n        }\r\n        dest.x = this.x;\r\n        dest.y = this.y;\r\n        dest.z = this.z;\r\n        dest.w = this.w;\r\n        return dest;\r\n    }\r\n    negate(dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        dest.x = -this.x;\r\n        dest.y = -this.y;\r\n        dest.z = -this.z;\r\n        dest.w = -this.w;\r\n        return dest;\r\n    }\r\n    equals(vector, threshold = _constants__WEBPACK_IMPORTED_MODULE_0__.epsilon) {\r\n        if (Math.abs(this.x - vector.x) > threshold) {\r\n            return false;\r\n        }\r\n        if (Math.abs(this.y - vector.y) > threshold) {\r\n            return false;\r\n        }\r\n        if (Math.abs(this.z - vector.z) > threshold) {\r\n            return false;\r\n        }\r\n        if (Math.abs(this.w - vector.w) > threshold) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    length() {\r\n        return Math.sqrt(this.squaredLength());\r\n    }\r\n    squaredLength() {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        return (x * x + y * y + z * z + w * w);\r\n    }\r\n    add(vector) {\r\n        this.x += vector.x;\r\n        this.y += vector.y;\r\n        this.z += vector.z;\r\n        this.w += vector.w;\r\n        return this;\r\n    }\r\n    subtract(vector) {\r\n        this.x -= vector.x;\r\n        this.y -= vector.y;\r\n        this.z -= vector.z;\r\n        this.w -= vector.w;\r\n        return this;\r\n    }\r\n    multiply(vector) {\r\n        this.x *= vector.x;\r\n        this.y *= vector.y;\r\n        this.z *= vector.z;\r\n        this.w *= vector.w;\r\n        return this;\r\n    }\r\n    divide(vector) {\r\n        this.x /= vector.x;\r\n        this.y /= vector.y;\r\n        this.z /= vector.z;\r\n        this.w /= vector.w;\r\n        return this;\r\n    }\r\n    scale(value, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        dest.x *= value;\r\n        dest.y *= value;\r\n        dest.z *= value;\r\n        dest.w *= value;\r\n        return dest;\r\n    }\r\n    normalize(dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        let length = this.length();\r\n        if (length === 1) {\r\n            return this;\r\n        }\r\n        if (length === 0) {\r\n            dest.x *= 0;\r\n            dest.y *= 0;\r\n            dest.z *= 0;\r\n            dest.w *= 0;\r\n            return dest;\r\n        }\r\n        length = 1.0 / length;\r\n        dest.x *= length;\r\n        dest.y *= length;\r\n        dest.z *= length;\r\n        dest.w *= length;\r\n        return dest;\r\n    }\r\n    multiplyMat4(matrix, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        return matrix.multiplyVec4(this, dest);\r\n    }\r\n    static mix(vector, vector2, time, dest) {\r\n        if (!dest) {\r\n            dest = new vec4();\r\n        }\r\n        dest.x = vector.x + time * (vector2.x - vector.x);\r\n        dest.y = vector.y + time * (vector2.y - vector.y);\r\n        dest.z = vector.z + time * (vector2.z - vector.z);\r\n        dest.w = vector.w + time * (vector2.w - vector.w);\r\n        return dest;\r\n    }\r\n    static sum(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec4();\r\n        }\r\n        dest.x = vector.x + vector2.x;\r\n        dest.y = vector.y + vector2.y;\r\n        dest.z = vector.z + vector2.z;\r\n        dest.w = vector.w + vector2.w;\r\n        return dest;\r\n    }\r\n    static difference(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec4();\r\n        }\r\n        dest.x = vector.x - vector2.x;\r\n        dest.y = vector.y - vector2.y;\r\n        dest.z = vector.z - vector2.z;\r\n        dest.w = vector.w - vector2.w;\r\n        return dest;\r\n    }\r\n    static product(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec4();\r\n        }\r\n        dest.x = vector.x * vector2.x;\r\n        dest.y = vector.y * vector2.y;\r\n        dest.z = vector.z * vector2.z;\r\n        dest.w = vector.w * vector2.w;\r\n        return dest;\r\n    }\r\n    static quotient(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec4();\r\n        }\r\n        dest.x = vector.x / vector2.x;\r\n        dest.y = vector.y / vector2.y;\r\n        dest.z = vector.z / vector2.z;\r\n        dest.w = vector.w / vector2.w;\r\n        return dest;\r\n    }\r\n}\r\nvec4.zero = new vec4([0, 0, 0, 1]);\r\nvec4.one = new vec4([1, 1, 1, 1]);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEBGL/src/Math/TSM_Library/vec4.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/World/World.ts":
/*!**************************************!*\
  !*** ./src/WEBGL/src/World/World.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WorldMatrixNames\": () => (/* binding */ WorldMatrixNames),\n/* harmony export */   \"GLOBAL_WORLD\": () => (/* binding */ GLOBAL_WORLD),\n/* harmony export */   \"World\": () => (/* binding */ World)\n/* harmony export */ });\n/* harmony import */ var _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../BaseObject/GL/webGlUtil */ \"./src/WEBGL/src/BaseObject/GL/webGlUtil.ts\");\n/* harmony import */ var _Math_TSM_Library_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../Math/TSM_Library/constants */ \"./src/WEBGL/src/Math/TSM_Library/constants.ts\");\n/* harmony import */ var _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../Math/TSM_Library/vec3 */ \"./src/WEBGL/src/Math/TSM_Library/vec3.ts\");\n/* harmony import */ var _Loader_FileReuqest__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Loader/FileReuqest */ \"./src/WEBGL/src/Loader/FileReuqest.ts\");\n/* harmony import */ var _BaseObject_Components_GLMesh__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../BaseObject/Components/GLMesh */ \"./src/WEBGL/src/BaseObject/Components/GLMesh.ts\");\n/* harmony import */ var _BaseObject_Components_GLTexture__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../BaseObject/Components/GLTexture */ \"./src/WEBGL/src/BaseObject/Components/GLTexture.ts\");\n/* harmony import */ var _BaseObject_Components_GLMaterial__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../BaseObject/Components/GLMaterial */ \"./src/WEBGL/src/BaseObject/Components/GLMaterial.ts\");\n/* harmony import */ var _Math_TSM_Library_mat4__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Math/TSM_Library/mat4 */ \"./src/WEBGL/src/Math/TSM_Library/mat4.ts\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass AWorld {\r\n    constructor() {\r\n        this.FarPlaneCoordinate = 1000.0;\r\n        this.camPos = new _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_2__.vec3([5, 5, 5]);\r\n        this.lookAt = new _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_2__.vec3([0, 0, 0]);\r\n        this.zDirection = new _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_2__.vec3([0, 1, 0]);\r\n        this.worldMatrix = _Math_TSM_Library_mat4__WEBPACK_IMPORTED_MODULE_7__.mat4.getIdentity();\r\n        this.viewMatrix = _Math_TSM_Library_mat4__WEBPACK_IMPORTED_MODULE_7__.mat4.lookAt(this.camPos, this.lookAt, this.zDirection);\r\n        this.projMatrix = _Math_TSM_Library_mat4__WEBPACK_IMPORTED_MODULE_7__.mat4.perspective((0,_Math_TSM_Library_constants__WEBPACK_IMPORTED_MODULE_1__.toRadians)(45), (_BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.canvas.width / _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_0__.gl.canvas.height), 0.1, this.FarPlaneCoordinate);\r\n    }\r\n    reCalc(camPos, lookAt, up) {\r\n        this.viewMatrix = _Math_TSM_Library_mat4__WEBPACK_IMPORTED_MODULE_7__.mat4.lookAt(camPos, lookAt, up);\r\n    }\r\n    getWorldMatrix() {\r\n        return this.worldMatrix;\r\n    }\r\n    getViewMatrix() {\r\n        return this.viewMatrix;\r\n    }\r\n    getProjectionMatrix() {\r\n        return this.projMatrix;\r\n    }\r\n    rotateWorld(angle) {\r\n        this.worldMatrix.rotate(angle, new _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_2__.vec3([0.5, 0.5, 1]));\r\n    }\r\n}\r\nvar WorldMatrixNames;\r\n(function (WorldMatrixNames) {\r\n    WorldMatrixNames[\"World\"] = \"worldMatrix\";\r\n    WorldMatrixNames[\"Projection\"] = \"projMatrix\";\r\n    WorldMatrixNames[\"View\"] = \"viewMatrix\";\r\n})(WorldMatrixNames || (WorldMatrixNames = {}));\r\n;\r\nvar GLOBAL_WORLD;\r\nclass World extends AWorld {\r\n    constructor() {\r\n        super();\r\n        this.MESHES = [];\r\n        this.MATERIALS = [];\r\n        this.loaded = false;\r\n        GLOBAL_WORLD = this;\r\n        var a = new _Loader_FileReuqest__WEBPACK_IMPORTED_MODULE_3__.FileRequest(\"resources\\\\sphere.json\", this);\r\n    }\r\n    updateOther(val) {\r\n        this.MATERIALS.forEach(e => {\r\n            e.updateOther(val);\r\n        });\r\n    }\r\n    updateFilter(val) {\r\n        this.MATERIALS.forEach(e => {\r\n            e.updateFilter(val);\r\n        });\r\n    }\r\n    bind() {\r\n        if (this.loaded)\r\n            this.MATERIALS.forEach(mat => {\r\n                mat.use();\r\n                mat.updateUniform_World(GLOBAL_WORLD.worldMatrix);\r\n                mat.updateUniform_Camera(GLOBAL_WORLD.viewMatrix);\r\n                mat.updateUniform_Projection(GLOBAL_WORLD.projMatrix);\r\n                mat.bind();\r\n            });\r\n    }\r\n    draw() {\r\n        if (this.loaded == true) {\r\n            this.bind();\r\n            this.MATERIALS.forEach((mat, i) => {\r\n                mat.use();\r\n                mat.bind();\r\n                mat._meshIndicees.forEach(index => {\r\n                    this.MESHES[index].bind();\r\n                    this.MESHES[index].draw();\r\n                });\r\n                mat.unBind();\r\n            });\r\n            GLOBAL_WORLD.rotateWorld(0.005);\r\n        }\r\n    }\r\n    onFileRecieved(asset) {\r\n        var JSON = asset.data;\r\n        this.MATERIALS.push(new _BaseObject_Components_GLMaterial__WEBPACK_IMPORTED_MODULE_6__.GLMaterial(\"BaseMaterial\", [\r\n            new _BaseObject_Components_GLMaterial__WEBPACK_IMPORTED_MODULE_6__.TextureDataInput(\"diffuse\", _BaseObject_Components_GLTexture__WEBPACK_IMPORTED_MODULE_5__.GLTexture.createCheckers(8)),\r\n            new _BaseObject_Components_GLMaterial__WEBPACK_IMPORTED_MODULE_6__.TextureDataInput(\"reflection\", new _BaseObject_Components_GLTexture__WEBPACK_IMPORTED_MODULE_5__.CubeMapTexture()),\r\n        ]));\r\n        this.MESHES.push(JSON.getMeshes()[0]);\r\n        this.MATERIALS[0]._meshIndicees.push(0);\r\n        this.MESHES[0].loadShaderLocations(this.MATERIALS[0]);\r\n        this.MATERIALS.push(new _BaseObject_Components_GLMaterial__WEBPACK_IMPORTED_MODULE_6__.BackgroundMaterial(\"reflection\", [\r\n            //new TextureDataInput(\"diffuse\"     ,  GLTexture.createCheckers(8) ),\r\n            new _BaseObject_Components_GLMaterial__WEBPACK_IMPORTED_MODULE_6__.TextureDataInput(\"reflection\", new _BaseObject_Components_GLTexture__WEBPACK_IMPORTED_MODULE_5__.CubeMapTexture()),\r\n        ]));\r\n        this.MESHES.push(_BaseObject_Components_GLMesh__WEBPACK_IMPORTED_MODULE_4__.GLMesh.createBackgroundFarPlaneMesh());\r\n        this.MATERIALS[1]._meshIndicees.push(1);\r\n        this.MESHES[1].loadShaderLocations(this.MATERIALS[1]);\r\n        this.loaded = true;\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL1dvcmxkL1dvcmxkLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQWtEO0FBRVU7QUFDVjtBQUNFO0FBRUs7QUFHdUM7QUFDTztBQUl2RDtBQUc1QyxNQUFlLE1BQU07SUFBckI7UUFDVyx1QkFBa0IsR0FBRyxNQUFNLENBQUM7UUFFNUIsV0FBTSxHQUFRLElBQUksd0RBQUksQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNoQyxXQUFNLEdBQVEsSUFBSSx3REFBSSxDQUFDLENBQUUsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2pDLGVBQVUsR0FBSSxJQUFJLHdEQUFJLENBQUMsQ0FBRSxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFakMsZ0JBQVcsR0FBVyxvRUFBZ0IsRUFBRSxDQUFDO1FBQ3pDLGVBQVUsR0FBWSwrREFBVyxDQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDOUUsZUFBVSxHQUFZLG9FQUFnQixDQUFFLHNFQUFTLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBRSxxRUFBZSxHQUFHLHNFQUFnQixDQUFDLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBRSxDQUFDO0lBdUJ4SSxDQUFDO0lBbkJHLE1BQU0sQ0FBQyxNQUFXLEVBQUUsTUFBVyxFQUFFLEVBQU87UUFDcEMsSUFBSSxDQUFDLFVBQVUsR0FBSywrREFBVyxDQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDekQsQ0FBQztJQUdELGNBQWM7UUFDVixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDNUIsQ0FBQztJQUNELGFBQWE7UUFDVCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDM0IsQ0FBQztJQUNELG1CQUFtQjtRQUNmLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUMzQixDQUFDO0lBRU0sV0FBVyxDQUFDLEtBQVk7UUFFNUIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLElBQUksd0RBQUksQ0FBQyxDQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBRSxDQUFDO0lBQzFELENBQUM7Q0FDSjtBQUVELElBQVksZ0JBSVg7QUFKRCxXQUFZLGdCQUFnQjtJQUN4Qix5Q0FBMkI7SUFDM0IsNkNBQTBCO0lBQzFCLHVDQUEwQjtBQUM5QixDQUFDLEVBSlcsZ0JBQWdCLEtBQWhCLGdCQUFnQixRQUkzQjtBQUFBLENBQUM7QUFFSyxJQUFJLFlBQWtCLENBQUM7QUFFdkIsTUFBTSxLQUFNLFNBQVEsTUFBTTtJQWlEN0I7UUFDSSxLQUFLLEVBQUUsQ0FBQztRQWhETCxXQUFNLEdBQW1CLEVBQUUsQ0FBQztRQUM1QixjQUFTLEdBQWMsRUFBRSxDQUFDO1FBQ3pCLFdBQU0sR0FBa0IsS0FBSyxDQUFDO1FBK0NsQyxZQUFZLEdBQUcsSUFBSSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxHQUFHLElBQUksNERBQVcsQ0FBQyx3QkFBd0IsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUM1RCxDQUFDO0lBOUNNLFdBQVcsQ0FBQyxHQUFHO1FBQ2xCLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBRSxFQUFFO1lBQ3hCLENBQUMsQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdkIsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRU0sWUFBWSxDQUFDLEdBQUc7UUFDbkIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFFLEVBQUU7WUFDeEIsQ0FBQyxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN4QixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFTSxJQUFJO1FBQ1AsSUFBRyxJQUFJLENBQUMsTUFBTTtZQUNkLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFFLEdBQUcsQ0FBQyxFQUFFO2dCQUMxQixHQUFHLENBQUMsR0FBRyxFQUFFLENBQUM7Z0JBQ1YsR0FBRyxDQUFDLG1CQUFtQixDQUFPLFlBQVksQ0FBQyxXQUFXLENBQUMsQ0FBQztnQkFDeEQsR0FBRyxDQUFDLG9CQUFvQixDQUFNLFlBQVksQ0FBQyxVQUFVLENBQUUsQ0FBQztnQkFDeEQsR0FBRyxDQUFDLHdCQUF3QixDQUFFLFlBQVksQ0FBQyxVQUFVLENBQUU7Z0JBQ3ZELEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUNmLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVNLElBQUk7UUFFUCxJQUFHLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxFQUFDO1lBQ25CLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUNaLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFFLENBQUUsR0FBRyxFQUFHLENBQUMsRUFBRyxFQUFFO2dCQUNsQyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUM7Z0JBQ1YsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDO2dCQUNYLEdBQUcsQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFFLEtBQUssQ0FBQyxFQUFFO29CQUMvQixJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO29CQUMxQixJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO2dCQUM5QixDQUFDLENBQUMsQ0FBQztnQkFDSCxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUM7WUFDakIsQ0FBQyxDQUFDLENBQUM7WUFFSCxZQUFZLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQztTQUVsQztJQUNMLENBQUM7SUFRTSxjQUFjLENBQUUsS0FBVztRQUM5QixJQUFJLElBQUksR0FBeUIsS0FBSyxDQUFDLElBQUksQ0FBQztRQUU1QyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBRSxJQUFJLHlFQUFVLENBQy9CLGNBQWMsRUFBQztZQUNkLElBQUksK0VBQWdCLENBQUMsU0FBUyxFQUFRLHNGQUF3QixDQUFDLENBQUMsQ0FBQyxDQUFFO1lBQ25FLElBQUksK0VBQWdCLENBQUMsWUFBWSxFQUFLLElBQUksNEVBQWMsRUFBRSxDQUFFO1NBQ2hFLENBQUMsQ0FBQyxDQUFDO1FBQ0osSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3hDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBR3RELElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFFLElBQUksaUZBQWtCLENBQ3ZDLFlBQVksRUFBQztZQUNULHNFQUFzRTtZQUN0RSxJQUFJLCtFQUFnQixDQUFDLFlBQVksRUFBSyxJQUFJLDRFQUFjLEVBQUUsQ0FBRTtTQUNuRSxDQUFDLENBQUMsQ0FBQztRQUNKLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFFLDhGQUFtQyxFQUFFLENBQUUsQ0FBQztRQUMxRCxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDeEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFdkQsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7SUFFdEIsQ0FBQztDQUdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViZ2x3ZWJwYWNrLy4vc3JjL1dFQkdML3NyYy9Xb3JsZC9Xb3JsZC50cz82ZDYxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdsIH0gZnJvbSBcIi4vLi4vQmFzZU9iamVjdC9HTC93ZWJHbFV0aWxcIjtcclxuXHJcbmltcG9ydCB7IHRvUmFkaWFucyB9IGZyb20gXCIuLy4uL01hdGgvVFNNX0xpYnJhcnkvY29uc3RhbnRzXCI7XHJcbmltcG9ydCB7IHZlYzMgfSBmcm9tIFwiLi8uLi9NYXRoL1RTTV9MaWJyYXJ5L3ZlYzNcIjtcclxuaW1wb3J0IHsgRmlsZVJlcXVlc3QgfSBmcm9tICcuLi9Mb2FkZXIvRmlsZVJldXFlc3QnO1xyXG5pbXBvcnQgeyBKU09OM0QsIE1hdGVyaWFsLCBNZXNoLCBMaWdodCwgQ2FtZXJhLCBOb2RlRWxlbWVudCwgSlNPTl8zRFNDRU5FX1NPUlRFUiB9IGZyb20gJy4uL0xvYWRlci9Bc3NldHMvTG9hZGVycy9KU09OQXNzZXRMb2FkZXInO1xyXG5pbXBvcnQgeyBHTE1lc2ggfSBmcm9tICcuLi9CYXNlT2JqZWN0L0NvbXBvbmVudHMvR0xNZXNoJztcclxuXHJcbmltcG9ydCB7IERlZmF1bHRTaGFkZXIsIEdMU2hhZGVyIH0gZnJvbSAnLi4vQmFzZU9iamVjdC9HTC9HTFNoYWRlcic7XHJcbmltcG9ydCB7IEdMVGV4dHVyZSwgTG9hZGFibGVUZXh0dXJlLCBDdWJlTWFwVGV4dHVyZSB9IGZyb20gJy4uL0Jhc2VPYmplY3QvQ29tcG9uZW50cy9HTFRleHR1cmUnO1xyXG5pbXBvcnQgeyBHTE1hdGVyaWFsLCBUZXh0dXJlRGF0YUlucHV0LCBCYWNrZ3JvdW5kTWF0ZXJpYWwgfSBmcm9tICcuLi9CYXNlT2JqZWN0L0NvbXBvbmVudHMvR0xNYXRlcmlhbCc7XHJcbmltcG9ydCB7IEV1bGVyLCBRdWF0ZXJuaW9uIH0gZnJvbSAndGhyZWUnO1xyXG5pbXBvcnQgeyBNYXRlcmlhbCBhcyBNTWF0fSBmcm9tIFwiLi4vQmFzZU9iamVjdC9Db21wb25lbnRzL0dMTWF0ZXJpYWxcIiAgXHJcblxyXG5pbXBvcnQgeyBtYXQ0IH0gZnJvbSAnLi4vTWF0aC9UU01fTGlicmFyeS9tYXQ0JztcclxuaW1wb3J0IHsgSUZpbGVSZXF1ZXN0UmVzcG9uc2UgfSBmcm9tICcuLi9Mb2FkZXIvSUZpbGVSZXF1ZXN0UmVzcG9uc2UnO1xyXG5cclxuICAgIGFic3RyYWN0IGNsYXNzIEFXb3JsZHtcclxuICAgICAgICBwdWJsaWMgRmFyUGxhbmVDb29yZGluYXRlID0gMTAwMC4wO1xyXG5cclxuICAgICAgICBwdWJsaWMgY2FtUG9zICAgICAgPSBuZXcgdmVjMyhbNSw1LDVdKTtcclxuICAgICAgICBwdWJsaWMgbG9va0F0ICAgICAgPSBuZXcgdmVjMyhbIDAsMCwwXSk7XHJcbiAgICAgICAgcHVibGljIHpEaXJlY3Rpb24gID0gbmV3IHZlYzMoWyAwLDEsMF0pO1xyXG5cclxuICAgICAgICBwdWJsaWMgd29ybGRNYXRyaXggIDogbWF0NCA9IG1hdDQuZ2V0SWRlbnRpdHkoKTsgXHJcbiAgICAgICAgcHVibGljIHZpZXdNYXRyaXggICA6IG1hdDQgPSBtYXQ0Lmxvb2tBdCggdGhpcy5jYW1Qb3MsIHRoaXMubG9va0F0LCB0aGlzLnpEaXJlY3Rpb24pO1xyXG4gICAgICAgIHB1YmxpYyBwcm9qTWF0cml4ICAgOiBtYXQ0ID0gbWF0NC5wZXJzcGVjdGl2ZSggdG9SYWRpYW5zKDQ1KSwgKCBnbC5jYW52YXMud2lkdGggLyBnbC5jYW52YXMuaGVpZ2h0KSwgMC4xLCB0aGlzLkZhclBsYW5lQ29vcmRpbmF0ZSApO1xyXG5cclxuICAgICAgICBcclxuXHJcbiAgICAgICAgcmVDYWxjKGNhbVBvczp2ZWMzLCBsb29rQXQ6dmVjMywgdXA6dmVjMyl7XHJcbiAgICAgICAgICAgIHRoaXMudmlld01hdHJpeCAgID0gbWF0NC5sb29rQXQoIGNhbVBvcywgbG9va0F0LCB1cCk7XHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgZ2V0V29ybGRNYXRyaXgoKTogIG1hdDQge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy53b3JsZE1hdHJpeDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZ2V0Vmlld01hdHJpeCgpOiAgbWF0NCB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnZpZXdNYXRyaXg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGdldFByb2plY3Rpb25NYXRyaXgoKTogbWF0NCB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnByb2pNYXRyaXg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgcm90YXRlV29ybGQoYW5nbGU6bnVtYmVyKXtcclxuICAgICAgICAgICBcclxuICAgICAgICAgICB0aGlzLndvcmxkTWF0cml4LnJvdGF0ZShhbmdsZSwgbmV3IHZlYzMoWzAuNSwwLjUsMV0pICk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGV4cG9ydCBlbnVtIFdvcmxkTWF0cml4TmFtZXN7XHJcbiAgICAgICAgV29ybGQgICAgICAgPSBcIndvcmxkTWF0cml4XCIsXHJcbiAgICAgICAgUHJvamVjdGlvbiAgPSBcInByb2pNYXRyaXhcIixcclxuICAgICAgICBWaWV3ICAgICAgICA9IFwidmlld01hdHJpeFwiIFxyXG4gICAgfTtcclxuXHJcbiAgICBleHBvcnQgdmFyIEdMT0JBTF9XT1JMRDpXb3JsZDtcclxuXHJcbiAgICBleHBvcnQgY2xhc3MgV29ybGQgZXh0ZW5kcyBBV29ybGQgaW1wbGVtZW50cyBJRmlsZVJlcXVlc3RSZXNwb25zZXtcclxuXHJcbiAgICAgICAgcHVibGljIE1FU0hFUyAgICAgIDogR0xNZXNoW10gPSBbXTtcclxuICAgICAgICBwdWJsaWMgTUFURVJJQUxTICAgOiBNTWF0W10gPSBbXTtcclxuICAgICAgICBwcml2YXRlIGxvYWRlZCAgICAgIDogYm9vbGVhbiA9IGZhbHNlO1xyXG5cclxuXHJcbiAgICAgICAgcHVibGljIHVwZGF0ZU90aGVyKHZhbCl7XHJcbiAgICAgICAgICAgIHRoaXMuTUFURVJJQUxTLmZvckVhY2goZSAgPT4ge1xyXG4gICAgICAgICAgICAgICAgZS51cGRhdGVPdGhlcih2YWwpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyB1cGRhdGVGaWx0ZXIodmFsKXtcclxuICAgICAgICAgICAgdGhpcy5NQVRFUklBTFMuZm9yRWFjaChlICA9PiB7XHJcbiAgICAgICAgICAgICAgICBlLnVwZGF0ZUZpbHRlcih2YWwpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBiaW5kKCk6IHZvaWR7XHJcbiAgICAgICAgICAgIGlmKHRoaXMubG9hZGVkKVxyXG4gICAgICAgICAgICB0aGlzLk1BVEVSSUFMUy5mb3JFYWNoKCBtYXQgPT4ge1xyXG4gICAgICAgICAgICAgICAgbWF0LnVzZSgpO1xyXG4gICAgICAgICAgICAgICAgbWF0LnVwZGF0ZVVuaWZvcm1fV29ybGQoICAgICAgR0xPQkFMX1dPUkxELndvcmxkTWF0cml4KTtcclxuICAgICAgICAgICAgICAgIG1hdC51cGRhdGVVbmlmb3JtX0NhbWVyYSggICAgIEdMT0JBTF9XT1JMRC52aWV3TWF0cml4ICk7XHJcbiAgICAgICAgICAgICAgICBtYXQudXBkYXRlVW5pZm9ybV9Qcm9qZWN0aW9uKCBHTE9CQUxfV09STEQucHJvak1hdHJpeCApXHJcbiAgICAgICAgICAgICAgICBtYXQuYmluZCgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBkcmF3KCk6IHZvaWQge1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgaWYodGhpcy5sb2FkZWQgPT0gdHJ1ZSl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJpbmQoKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuTUFURVJJQUxTLmZvckVhY2goICggbWF0ICwgaSApID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBtYXQudXNlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgbWF0LmJpbmQoKTtcclxuICAgICAgICAgICAgICAgICAgICBtYXQuX21lc2hJbmRpY2Vlcy5mb3JFYWNoKCBpbmRleCA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuTUVTSEVTW2luZGV4XS5iaW5kKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuTUVTSEVTW2luZGV4XS5kcmF3KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgbWF0LnVuQmluZCgpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIEdMT0JBTF9XT1JMRC5yb3RhdGVXb3JsZCgwLjAwNSlcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgICAgICBHTE9CQUxfV09STEQgPSB0aGlzO1xyXG4gICAgICAgICAgICB2YXIgYSA9IG5ldyBGaWxlUmVxdWVzdChcInJlc291cmNlc1xcXFxzcGhlcmUuanNvblwiLCB0aGlzKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBvbkZpbGVSZWNpZXZlZCggYXNzZXQgOiBhbnkpe1xyXG4gICAgICAgICAgICB2YXIgSlNPTiA6IEpTT05fM0RTQ0VORV9TT1JURVIgPSBhc3NldC5kYXRhOyBcclxuICAgICBcclxuICAgICAgICAgICAgdGhpcy5NQVRFUklBTFMucHVzaCggbmV3IEdMTWF0ZXJpYWwoXHJcbiAgICAgICAgICAgICAgICBcIkJhc2VNYXRlcmlhbFwiLFtcclxuICAgICAgICAgICAgICAgICBuZXcgVGV4dHVyZURhdGFJbnB1dChcImRpZmZ1c2VcIiAgICAgLCAgR0xUZXh0dXJlLmNyZWF0ZUNoZWNrZXJzKDgpICksXHJcbiAgICAgICAgICAgICAgICAgbmV3IFRleHR1cmVEYXRhSW5wdXQoXCJyZWZsZWN0aW9uXCIgICwgIG5ldyBDdWJlTWFwVGV4dHVyZSgpICksXHJcbiAgICAgICAgICAgIF0pKTtcclxuICAgICAgICAgICAgdGhpcy5NRVNIRVMucHVzaCggSlNPTi5nZXRNZXNoZXMoKVswXSk7XHJcbiAgICAgICAgICAgIHRoaXMuTUFURVJJQUxTWzBdLl9tZXNoSW5kaWNlZXMucHVzaCgwKTtcclxuICAgICAgICAgICAgdGhpcy5NRVNIRVNbMF0ubG9hZFNoYWRlckxvY2F0aW9ucyh0aGlzLk1BVEVSSUFMU1swXSk7XHJcblxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgdGhpcy5NQVRFUklBTFMucHVzaCggbmV3IEJhY2tncm91bmRNYXRlcmlhbChcclxuICAgICAgICAgICAgICAgIFwicmVmbGVjdGlvblwiLFtcclxuICAgICAgICAgICAgICAgICAgICAvL25ldyBUZXh0dXJlRGF0YUlucHV0KFwiZGlmZnVzZVwiICAgICAsICBHTFRleHR1cmUuY3JlYXRlQ2hlY2tlcnMoOCkgKSxcclxuICAgICAgICAgICAgICAgICAgICBuZXcgVGV4dHVyZURhdGFJbnB1dChcInJlZmxlY3Rpb25cIiAgLCAgbmV3IEN1YmVNYXBUZXh0dXJlKCkgKSxcclxuICAgICAgICAgICAgXSkpO1xyXG4gICAgICAgICAgICB0aGlzLk1FU0hFUy5wdXNoKCBHTE1lc2guY3JlYXRlQmFja2dyb3VuZEZhclBsYW5lTWVzaCgpICk7XHJcbiAgICAgICAgICAgIHRoaXMuTUFURVJJQUxTWzFdLl9tZXNoSW5kaWNlZXMucHVzaCgxKTtcclxuICAgICAgICAgICAgdGhpcy5NRVNIRVNbMV0ubG9hZFNoYWRlckxvY2F0aW9ucyh0aGlzLk1BVEVSSUFMU1sxXSk7XHJcblxyXG4gICAgICAgICAgIHRoaXMubG9hZGVkID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBcclxuICAgIH1cclxuXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/WEBGL/src/World/World.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/main.ts":
/*!*******************************!*\
  !*** ./src/WEBGL/src/main.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"startClass\": () => (/* binding */ startClass)\n/* harmony export */ });\n/* harmony import */ var _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseObject/GL/webGlUtil */ \"./src/WEBGL/src/BaseObject/GL/webGlUtil.ts\");\n/* harmony import */ var _Loader_Assets_AssetManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Loader/Assets/AssetManager */ \"./src/WEBGL/src/Loader/Assets/AssetManager.ts\");\n/* harmony import */ var _Loader_Message_MessageBus__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Loader/Message/MessageBus */ \"./src/WEBGL/src/Loader/Message/MessageBus.ts\");\n/* harmony import */ var _test__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./test */ \"./src/WEBGL/src/test.ts\");\n/* harmony import */ var _World_World__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./World/World */ \"./src/WEBGL/src/World/World.ts\");\n\r\n\r\n\r\n\r\n\r\nclass startClass {\r\n    constructor() {\r\n        this.init();\r\n    }\r\n    onFileRecieved(asset) {\r\n        console.log(asset);\r\n    }\r\n    init() {\r\n        _Loader_Assets_AssetManager__WEBPACK_IMPORTED_MODULE_1__.AssetManager.initialize();\r\n        startClass.canvas = _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_0__.WebGLUtil.initialize(\"canvas\");\r\n        this.world = new _World_World__WEBPACK_IMPORTED_MODULE_4__.World();\r\n        requestAnimationFrame(this.update.bind(this));\r\n    }\r\n    update() {\r\n        _World_World__WEBPACK_IMPORTED_MODULE_4__.GLOBAL_WORLD.draw();\r\n        _Loader_Message_MessageBus__WEBPACK_IMPORTED_MODULE_2__.MessageBus.update(1);\r\n        requestAnimationFrame(this.update.bind(this));\r\n    }\r\n    updateOther(val) {\r\n        this.world.updateOther(val);\r\n    }\r\n    updateFilter(val) {\r\n        this.world.updateFilter(val);\r\n    }\r\n    init_test() {\r\n        _Loader_Assets_AssetManager__WEBPACK_IMPORTED_MODULE_1__.AssetManager.initialize();\r\n        _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_0__.WebGLUtil.initialize(\"c\");\r\n        this._e = new _test__WEBPACK_IMPORTED_MODULE_3__.testClass();\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvV0VCR0wvc3JjL21haW4udHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXNEO0FBQ007QUFDSDtBQUN0QjtBQUNpQjtBQUl6QyxNQUFNLFVBQVU7SUFLbkI7UUFDSSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVNLGNBQWMsQ0FBQyxLQUFVO1FBQzdCLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdEIsQ0FBQztJQUdNLElBQUk7UUFDUCxnRkFBdUIsRUFBRSxDQUFDO1FBQzFCLFVBQVUsQ0FBQyxNQUFNLEdBQUcsMEVBQW9CLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLCtDQUFLLEVBQUUsQ0FBQztRQUN6QixxQkFBcUIsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFFTSxNQUFNO1FBQ1QsMkRBQWlCLEVBQUUsQ0FBQztRQUNwQix5RUFBaUIsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNyQixxQkFBcUIsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFHTSxXQUFXLENBQUMsR0FBRztRQUNsQixJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBQ00sWUFBWSxDQUFDLEdBQUc7UUFDbkIsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUdNLFNBQVM7UUFDWixnRkFBdUIsRUFBRSxDQUFDO1FBQzFCLDBFQUFvQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzFCLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSw0Q0FBUyxFQUFFLENBQUM7SUFDOUIsQ0FBQztDQUlKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViZ2x3ZWJwYWNrLy4vc3JjL1dFQkdML3NyYy9tYWluLnRzPzAwOGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV2ViR0xVdGlsIH0gZnJvbSBcIi4vQmFzZU9iamVjdC9HTC93ZWJHbFV0aWxcIjtcclxuaW1wb3J0IHsgQXNzZXRNYW5hZ2VyIH0gZnJvbSBcIi4vTG9hZGVyL0Fzc2V0cy9Bc3NldE1hbmFnZXJcIjtcclxuaW1wb3J0IHsgTWVzc2FnZUJ1cyB9IGZyb20gXCIuL0xvYWRlci9NZXNzYWdlL01lc3NhZ2VCdXNcIjtcclxuaW1wb3J0IHsgdGVzdENsYXNzIH0gZnJvbSBcIi4vdGVzdFwiO1xyXG5pbXBvcnQgeyBHTE9CQUxfV09STEQsIFdvcmxkIH0gZnJvbSAnLi9Xb3JsZC9Xb3JsZCc7XHJcbmltcG9ydCB7IEZpbGVSZXF1ZXN0IH0gZnJvbSAnLi9Mb2FkZXIvRmlsZVJldXFlc3QnO1xyXG5pbXBvcnQgeyBJRmlsZVJlcXVlc3RSZXNwb25zZSB9IGZyb20gJy4vTG9hZGVyL0lGaWxlUmVxdWVzdFJlc3BvbnNlJztcclxuICAgIFxyXG4gICAgZXhwb3J0IGNsYXNzIHN0YXJ0Q2xhc3MgaW1wbGVtZW50cyBJRmlsZVJlcXVlc3RSZXNwb25zZXtcclxuXHJcbiAgICAgICAgXHJcbiAgICAgICAgcHVibGljIHN0YXRpYyBjYW52YXMgOiBIVE1MQ2FudmFzRWxlbWVudDtcclxuXHJcbiAgICAgICAgcHVibGljIGNvbnN0cnVjdG9yKCl7XHJcbiAgICAgICAgICAgIHRoaXMuaW5pdCgpOyAgICAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHVibGljIG9uRmlsZVJlY2lldmVkKGFzc2V0OiBhbnkpIHtcclxuICAgICAgICAgICBjb25zb2xlLmxvZyhhc3NldCk7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgcHJpdmF0ZSB3b3JsZCA6IFdvcmxkXHJcbiAgICAgICAgcHVibGljIGluaXQoKTogdm9pZHtcclxuICAgICAgICAgICAgQXNzZXRNYW5hZ2VyLmluaXRpYWxpemUoKTtcclxuICAgICAgICAgICAgc3RhcnRDbGFzcy5jYW52YXMgPSBXZWJHTFV0aWwuaW5pdGlhbGl6ZShcImNhbnZhc1wiKTtcclxuICAgICAgICAgICAgdGhpcy53b3JsZCA9IG5ldyBXb3JsZCgpO1xyXG4gICAgICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy51cGRhdGUuYmluZCh0aGlzKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIHB1YmxpYyB1cGRhdGUoKXtcclxuICAgICAgICAgICAgR0xPQkFMX1dPUkxELmRyYXcoKTtcclxuICAgICAgICAgICAgTWVzc2FnZUJ1cy51cGRhdGUoMSk7XHJcbiAgICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLnVwZGF0ZS5iaW5kKHRoaXMpKTtcclxuICAgICAgICB9ICAgICAgXHJcblxyXG5cclxuICAgICAgICBwdWJsaWMgdXBkYXRlT3RoZXIodmFsKXtcclxuICAgICAgICAgICAgdGhpcy53b3JsZC51cGRhdGVPdGhlcih2YWwpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBwdWJsaWMgdXBkYXRlRmlsdGVyKHZhbCl7XHJcbiAgICAgICAgICAgIHRoaXMud29ybGQudXBkYXRlRmlsdGVyKHZhbCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgX2UgOiB0ZXN0Q2xhc3M7XHJcbiAgICAgICAgcHVibGljIGluaXRfdGVzdCgpe1xyXG4gICAgICAgICAgICBBc3NldE1hbmFnZXIuaW5pdGlhbGl6ZSgpO1xyXG4gICAgICAgICAgICBXZWJHTFV0aWwuaW5pdGlhbGl6ZShcImNcIik7XHJcbiAgICAgICAgICAgIHRoaXMuX2UgPSBuZXcgdGVzdENsYXNzKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBcclxuXHJcbiAgICB9XHJcblxyXG5cclxuXHJcblxyXG5cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/WEBGL/src/main.ts\n");

/***/ }),

/***/ "./src/WEBGL/src/test.ts":
/*!*******************************!*\
  !*** ./src/WEBGL/src/test.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"testClass\": () => (/* binding */ testClass)\n/* harmony export */ });\n/* harmony import */ var _Math_TSM_Library_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Math/TSM_Library/constants */ \"./src/WEBGL/src/Math/TSM_Library/constants.ts\");\n/* harmony import */ var _Math_TSM_Library_mat4__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Math/TSM_Library/mat4 */ \"./src/WEBGL/src/Math/TSM_Library/mat4.ts\");\n/* harmony import */ var _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Math/TSM_Library/vec3 */ \"./src/WEBGL/src/Math/TSM_Library/vec3.ts\");\n/* harmony import */ var _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./BaseObject/GL/webGlUtil */ \"./src/WEBGL/src/BaseObject/GL/webGlUtil.ts\");\n/* harmony import */ var _BaseObject_GL_GLShader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./BaseObject/GL/GLShader */ \"./src/WEBGL/src/BaseObject/GL/GLShader.ts\");\n\r\n\r\n\r\n\r\n\r\nclass testClass {\r\n    constructor() {\r\n        this.fieldOfViewRadians = this.degToRad(60);\r\n        this.modelXRotationRadians = this.degToRad(0);\r\n        this.modelYRotationRadians = this.degToRad(0);\r\n        this.shader = new _BaseObject_GL_GLShader__WEBPACK_IMPORTED_MODULE_4__.DefaultShader(\"shader\");\r\n        this.positionLocation = this.shader.getAttributeLocation(\"a_position\");\r\n        this.matrixLocation = this.shader.getUniformLocation(\"u_matrix\");\r\n        this.textureLocation = this.shader.getUniformLocation(\"u_texture\");\r\n        this.positionBuffer = _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.createBuffer();\r\n        this.then = 1;\r\n        this.camPos = new _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_2__.vec3([8, 25, -15]);\r\n        this.lookAt = new _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_2__.vec3([0, -1, -12]);\r\n        this.zDirection = new _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_2__.vec3([0, 1, 0]);\r\n        this.worldMatrix = _Math_TSM_Library_mat4__WEBPACK_IMPORTED_MODULE_1__.mat4.getIdentity();\r\n        this.viewMatrix = _Math_TSM_Library_mat4__WEBPACK_IMPORTED_MODULE_1__.mat4.lookAt(this.camPos, this.lookAt, this.zDirection);\r\n        this.projMatrix = _Math_TSM_Library_mat4__WEBPACK_IMPORTED_MODULE_1__.mat4.perspective((0,_Math_TSM_Library_constants__WEBPACK_IMPORTED_MODULE_0__.toRadians)(45), (_BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.canvas.width / _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.canvas.height), 0.1, 1000);\r\n        // Bind it to ARRAY_BUFFER (think of it as ARRAY_BUFFER = positionBuffer)\r\n        _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.bindBuffer(_BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.ARRAY_BUFFER, this.positionBuffer);\r\n        // Put the positions in the buffer\r\n        this.setGeometry(_BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl);\r\n        // Create a texture.\r\n        var texture = _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.createTexture();\r\n        _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.bindTexture(_BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.TEXTURE_CUBE_MAP, texture);\r\n        // Get A 2D context\r\n        /** @type {Canvas2DRenderingContext} */\r\n        const ctx = document.createElement(\"canvas\").getContext(\"2d\");\r\n        ctx.canvas.width = 128;\r\n        ctx.canvas.height = 128;\r\n        const faceInfos = [\r\n            { target: _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.TEXTURE_CUBE_MAP_POSITIVE_X, faceColor: '#F00', textColor: '#0FF', text: '+X' },\r\n            { target: _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.TEXTURE_CUBE_MAP_NEGATIVE_X, faceColor: '#FF0', textColor: '#00F', text: '-X' },\r\n            { target: _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.TEXTURE_CUBE_MAP_POSITIVE_Y, faceColor: '#0F0', textColor: '#F0F', text: '+Y' },\r\n            { target: _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, faceColor: '#0FF', textColor: '#F00', text: '-Y' },\r\n            { target: _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.TEXTURE_CUBE_MAP_POSITIVE_Z, faceColor: '#00F', textColor: '#FF0', text: '+Z' },\r\n            { target: _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, faceColor: '#F0F', textColor: '#0F0', text: '-Z' },\r\n        ];\r\n        faceInfos.forEach((faceInfo) => {\r\n            const { target, faceColor, textColor, text } = faceInfo;\r\n            this.generateFace(ctx, faceColor, textColor, text);\r\n            _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.texImage2D(target, 0, _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.RGBA, _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.RGBA, _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.UNSIGNED_BYTE, ctx.canvas);\r\n        });\r\n        _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.generateMipmap(_BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.TEXTURE_CUBE_MAP);\r\n        _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.texParameteri(_BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.TEXTURE_CUBE_MAP, _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.TEXTURE_MIN_FILTER, _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.LINEAR_MIPMAP_LINEAR);\r\n        requestAnimationFrame(this.drawScene.bind(this));\r\n        // Draw the scene.\r\n    }\r\n    generateFace(ctx, faceColor, textColor, text) {\r\n        const { width, height } = ctx.canvas;\r\n        ctx.fillStyle = faceColor;\r\n        ctx.fillRect(0, 0, width, height);\r\n        ctx.font = `${width * 0.7}px sans-serif`;\r\n        ctx.textAlign = 'center';\r\n        ctx.textBaseline = 'middle';\r\n        ctx.fillStyle = textColor;\r\n        //ctx.fillText(text, width / 2, height / 2);\r\n    }\r\n    // Fill the buffer with the values that define a cube.\r\n    setGeometry(gl) {\r\n        var positions = new Float32Array([\r\n            -0.5, -0.5, -0.5,\r\n            -0.5, 0.5, -0.5,\r\n            0.5, -0.5, -0.5,\r\n            -0.5, 0.5, -0.5,\r\n            0.5, 0.5, -0.5,\r\n            0.5, -0.5, -0.5,\r\n            -0.5, -0.5, 0.5,\r\n            0.5, -0.5, 0.5,\r\n            -0.5, 0.5, 0.5,\r\n            -0.5, 0.5, 0.5,\r\n            0.5, -0.5, 0.5,\r\n            0.5, 0.5, 0.5,\r\n            -0.5, 0.5, -0.5,\r\n            -0.5, 0.5, 0.5,\r\n            0.5, 0.5, -0.5,\r\n            -0.5, 0.5, 0.5,\r\n            0.5, 0.5, 0.5,\r\n            0.5, 0.5, -0.5,\r\n            -0.5, -0.5, -0.5,\r\n            0.5, -0.5, -0.5,\r\n            -0.5, -0.5, 0.5,\r\n            -0.5, -0.5, 0.5,\r\n            0.5, -0.5, -0.5,\r\n            0.5, -0.5, 0.5,\r\n            -0.5, -0.5, -0.5,\r\n            -0.5, -0.5, 0.5,\r\n            -0.5, 0.5, -0.5,\r\n            -0.5, -0.5, 0.5,\r\n            -0.5, 0.5, 0.5,\r\n            -0.5, 0.5, -0.5,\r\n            0.5, -0.5, -0.5,\r\n            0.5, 0.5, -0.5,\r\n            0.5, -0.5, 0.5,\r\n            0.5, -0.5, 0.5,\r\n            0.5, 0.5, -0.5,\r\n            0.5, 0.5, 0.5,\r\n        ]);\r\n        gl.bufferData(gl.ARRAY_BUFFER, positions, gl.STATIC_DRAW);\r\n    }\r\n    drawScene(time) {\r\n        // convert to seconds\r\n        time *= 0.001;\r\n        // Subtract the previous time from the current time\r\n        if (this.then == undefined)\r\n            this.then = 1;\r\n        var deltaTime = time - this.then;\r\n        // Remember the current time for the next frame.\r\n        this.then = time;\r\n        _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.viewport(0, 0, _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.canvas.width, _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.canvas.height);\r\n        _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.enable(_BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.CULL_FACE);\r\n        _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.enable(_BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.DEPTH_TEST);\r\n        // Animate the rotation\r\n        this.modelYRotationRadians += -0.7 * deltaTime;\r\n        this.modelXRotationRadians += -0.4 * deltaTime;\r\n        // Clear the canvas AND the depth buffer.\r\n        _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.clear(_BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.COLOR_BUFFER_BIT | _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.DEPTH_BUFFER_BIT);\r\n        // Tell it to use our program (pair of shaders)\r\n        this.shader.use();\r\n        // Turn on the position attribute\r\n        _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.enableVertexAttribArray(this.positionLocation);\r\n        // Bind the position buffer.\r\n        _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.bindBuffer(_BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.ARRAY_BUFFER, this.positionBuffer);\r\n        // Tell the position attribute how to get data out of positionBuffer (ARRAY_BUFFER)\r\n        var size = 3; // 3 components per iteration\r\n        var type = _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.FLOAT; // the data is 32bit floats\r\n        var normalize = false; // don't normalize the data\r\n        var stride = 0; // 0 = move forward size * sizeof(type) each iteration to get the next position\r\n        var offset = 0; // start at the beginning of the buffer\r\n        _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.vertexAttribPointer(this.positionLocation, size, type, normalize, stride, offset);\r\n        // Compute the projection matrix\r\n        var aspect = _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.canvas.clientWidth / _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.canvas.clientHeight;\r\n        var projectionMatrix = _Math_TSM_Library_mat4__WEBPACK_IMPORTED_MODULE_1__.mat4.perspective(this.fieldOfViewRadians, aspect, 1, 2000);\r\n        var cameraPosition = new _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_2__.vec3([0, 0, 2]);\r\n        var up = new _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_2__.vec3([0, 1, 0]);\r\n        var target = new _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_2__.vec3([0, 0, 0]);\r\n        // Compute the camera's matrix using look at.\r\n        var cameraMatrix = _Math_TSM_Library_mat4__WEBPACK_IMPORTED_MODULE_1__.mat4.lookAt(cameraPosition, target, up);\r\n        // Make a view matrix from the camera matrix.\r\n        var viewMatrix = cameraMatrix.copy().inverse();\r\n        var viewProjectionMatrix = projectionMatrix.multiply(viewMatrix); // mat4.multiply(projectionMatrix, viewMatrix);\r\n        var matrix = viewProjectionMatrix.rotate(this.modelXRotationRadians, new _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_2__.vec3([1.0, 0.0, 0.0])); // mat4.xRotate(viewProjectionMatrix, modelXRotationRadians);\r\n        matrix = viewProjectionMatrix.rotate(this.modelYRotationRadians, new _Math_TSM_Library_vec3__WEBPACK_IMPORTED_MODULE_2__.vec3([0.0, 0.0, 1.0])); //mat4.yRotate(matrix, modelYRotationRadians);\r\n        // Set the matrix.\r\n        _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.uniformMatrix4fv(this.matrixLocation, false, matrix.values);\r\n        // Tell the shader to use texture unit 0 for u_texture\r\n        _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.uniform1i(this.textureLocation, 0);\r\n        // Draw the geometry.\r\n        _BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.drawArrays(_BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_3__.gl.TRIANGLES, 0, 6 * 6);\r\n        requestAnimationFrame(this.drawScene.bind(this));\r\n    }\r\n    radToDeg(r) {\r\n        return r * 180 / Math.PI;\r\n    }\r\n    degToRad(d) {\r\n        return d * Math.PI / 180;\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEBGL/src/test.ts\n");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"changeFilterMethod\": () => (/* binding */ changeFilterMethod),\n/* harmony export */   \"changeOtherMethod\": () => (/* binding */ changeOtherMethod)\n/* harmony export */ });\n/* harmony import */ var _WEBGL_src_main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WEBGL/src/main */ \"./src/WEBGL/src/main.ts\");\n/* harmony import */ var _WEBGL_src_BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WEBGL/src/BaseObject/GL/webGlUtil */ \"./src/WEBGL/src/BaseObject/GL/webGlUtil.ts\");\n\r\n\r\n/// <reference lib=\"dom\" />\r\nvar start;\r\nwindow.onload = () => {\r\n    document.querySelector('#C_FILTERID').addEventListener(\"change\", function () {\r\n        changeFilterMethod(this);\r\n    });\r\n    document.querySelector('#C_OTHERID').addEventListener(\"change\", function () {\r\n        changeOtherMethod(this);\r\n    });\r\n    start = new _WEBGL_src_main__WEBPACK_IMPORTED_MODULE_0__.startClass();\r\n};\r\nfunction changeFilterMethod(e) {\r\n    console.log(\"CALLED\" + e.value);\r\n    switch (e.value) {\r\n        case \"0\":\r\n            start.updateFilter(_WEBGL_src_BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.LINEAR);\r\n            break;\r\n        case \"1\":\r\n            start.updateFilter(_WEBGL_src_BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.NEAREST);\r\n            break;\r\n        case \"2\":\r\n            start.updateFilter(_WEBGL_src_BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.LINEAR_MIPMAP_LINEAR);\r\n            break;\r\n    }\r\n}\r\nfunction changeOtherMethod(e) {\r\n    console.log(\"CALLED\");\r\n    switch (e.value) {\r\n        case \"0\":\r\n            start.updateOther(_WEBGL_src_BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.CLAMP_TO_EDGE);\r\n            break;\r\n        case \"1\":\r\n            start.updateOther(_WEBGL_src_BaseObject_GL_webGlUtil__WEBPACK_IMPORTED_MODULE_1__.gl.REPEAT);\r\n            break;\r\n    }\r\n}\r\n/*\r\nwindow.onload = ()=>{\r\n\"use strict\";\r\n\r\nvar a = AssetManager.initialize();\r\nvar b = WebGLUtil.initialize(\"canvas\");\r\nvar shader: GLShader;\r\n\r\nvar camPos      = new vec3([10,10,10]);\r\nvar lookAt      = new vec3([ 0,0,0]);\r\nvar zDirection  = new vec3([ 0,1,0]);\r\nvar worldMatrix  : mat4 = mat4.getIdentity();\r\nvar viewMatrix   : mat4 = mat4.lookAt( camPos, lookAt, zDirection);\r\nvar projMatrix   : mat4 = mat4.perspective( toRadians(45), ( gl.canvas.width / gl.canvas.height), 0.1,1000 );\r\n\r\n\r\nfunction main() {\r\n  \r\n    shader = new DefaultShader2(\"GLSHADER\");\r\n    var positionLocation = shader.getAttributeLocation(\"a_position\");\r\n    var textureLocation = shader.getUniformLocation(\"u_texture\");\r\n    var positionBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n    setGeometry(gl);\r\n\r\n    // Create a texture.\r\n    var texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\r\n\r\n    \r\n// ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ###\r\n\r\n    const ctx = document.createElement(\"canvas\").getContext(\"2d\");\r\n    ctx.canvas.width = 128;\r\n    ctx.canvas.height = 128;\r\n\r\n    const faceInfos = [\r\n        { target: gl.TEXTURE_CUBE_MAP_POSITIVE_X, faceColor: '#F00', textColor: '#0FF', text: '+X' },\r\n        { target: gl.TEXTURE_CUBE_MAP_NEGATIVE_X, faceColor: '#FF0', textColor: '#00F', text: '-X' },\r\n        { target: gl.TEXTURE_CUBE_MAP_POSITIVE_Y, faceColor: '#0F0', textColor: '#F0F', text: '+Y' },\r\n        { target: gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, faceColor: '#0FF', textColor: '#F00', text: '-Y' },\r\n        { target: gl.TEXTURE_CUBE_MAP_POSITIVE_Z, faceColor: '#00F', textColor: '#FF0', text: '+Z' },\r\n        { target: gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, faceColor: '#F0F', textColor: '#0F0', text: '-Z' },\r\n    ];\r\n\r\n    faceInfos.forEach((faceInfo) => {\r\n        const {target, faceColor, textColor, text} = faceInfo;\r\n        generateFace(ctx, faceColor, textColor, text);\r\n        gl.texImage2D(target, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, ctx.canvas);\r\n    });\r\n    \r\n    gl.generateMipmap(  gl.TEXTURE_CUBE_MAP );\r\n    gl.texParameteri(   gl.TEXTURE_CUBE_MAP , gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\r\n\r\n//    ### ###  ### ###  ### ###  ### ###  ### ###  ### ###  ### ###  ### ###  ### ###\r\n  requestAnimationFrame(drawScene);\r\n\r\n  // Draw the scene.\r\n  function drawScene() {\r\n    \r\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n    gl.enable(gl.CULL_FACE);\r\n    gl.enable(gl.DEPTH_TEST);\r\n\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n    shader.use();\r\n\r\n    gl.enableVertexAttribArray(positionLocation);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n\r\n\r\n    gl.vertexAttribPointer( positionLocation, 3,  gl.FLOAT, false, 0, 0);\r\n    gl.uniformMatrix4fv(  shader.getUniformLocation(       \"worldMatrix\"  )    , false, worldMatrix.values );\r\n    gl.uniformMatrix4fv(  shader.getUniformLocation(       \"viewMatrix\"   )    , false, viewMatrix.values );\r\n    gl.uniformMatrix4fv(  shader.getUniformLocation(       \"projMatrix\"   )    , false, projMatrix.values );\r\n    \r\n    gl.uniform1i(textureLocation, 0);\r\n\r\n    gl.drawArrays(gl.TRIANGLES, 0, 6 * 6);\r\n\r\n    requestAnimationFrame(drawScene);\r\n  }\r\n}\r\n\r\nfunction generateFace(ctx, faceColor, textColor, text) {\r\n  const {width, height} = ctx.canvas;\r\n  ctx.fillStyle = faceColor;\r\n  ctx.fillRect(0, 0, width, height);\r\n  ctx.font = `${width * 0.7}px sans-serif`;\r\n  ctx.textAlign = 'center';\r\n  ctx.textBaseline = 'middle';\r\n  ctx.fillStyle = textColor;\r\n  ctx.fillText(text, width / 2, height / 2);\r\n}\r\n\r\n// Fill the buffer with the values that define a cube.\r\nfunction setGeometry(gl) {\r\n  var positions = new Float32Array(\r\n    [\r\n    -0.5, -0.5,  -0.5,\r\n    -0.5,  0.5,  -0.5,\r\n     0.5, -0.5,  -0.5,\r\n    -0.5,  0.5,  -0.5,\r\n     0.5,  0.5,  -0.5,\r\n     0.5, -0.5,  -0.5,\r\n\r\n    -0.5, -0.5,   0.5,\r\n     0.5, -0.5,   0.5,\r\n    -0.5,  0.5,   0.5,\r\n    -0.5,  0.5,   0.5,\r\n     0.5, -0.5,   0.5,\r\n     0.5,  0.5,   0.5,\r\n\r\n    -0.5,   0.5, -0.5,\r\n    -0.5,   0.5,  0.5,\r\n     0.5,   0.5, -0.5,\r\n    -0.5,   0.5,  0.5,\r\n     0.5,   0.5,  0.5,\r\n     0.5,   0.5, -0.5,\r\n\r\n    -0.5,  -0.5, -0.5,\r\n     0.5,  -0.5, -0.5,\r\n    -0.5,  -0.5,  0.5,\r\n    -0.5,  -0.5,  0.5,\r\n     0.5,  -0.5, -0.5,\r\n     0.5,  -0.5,  0.5,\r\n\r\n    -0.5,  -0.5, -0.5,\r\n    -0.5,  -0.5,  0.5,\r\n    -0.5,   0.5, -0.5,\r\n    -0.5,  -0.5,  0.5,\r\n    -0.5,   0.5,  0.5,\r\n    -0.5,   0.5, -0.5,\r\n\r\n     0.5,  -0.5, -0.5,\r\n     0.5,   0.5, -0.5,\r\n     0.5,  -0.5,  0.5,\r\n     0.5,  -0.5,  0.5,\r\n     0.5,   0.5, -0.5,\r\n     0.5,   0.5,  0.5,\r\n\r\n    ]);\r\n  gl.bufferData(gl.ARRAY_BUFFER, positions, gl.STATIC_DRAW);\r\n}\r\n\r\nmain();\r\n\r\n\r\n}\r\n*/ \r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;